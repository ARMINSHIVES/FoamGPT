
<case_begin>
<index>
case name: supersonicCorner
case domain: discreteMethods
case category: None
case solver: dsmcFoam
</index>


<directory_structure>
<dir>directory name: 0. File names in this directory: [internalE, iDof, boundaryT, linearKE, rhoN, fD, dsmcRhoN, rhoM, boundaryU, momentum, q]</dir>
<dir>directory name: system. File names in this directory: [dsmcInitialiseDict, fvSolution, decomposeParDict, controlDict, fvSchemes, blockMeshDict]</dir>
<dir>directory name: constant. File names in this directory: [dsmcProperties]</dir>
</directory_structure>


<allrun_script>
#!/bin/sh
cd ${0%/*} || exit 1    # Run from this directory

# Source tutorial run functions
. $WM_PROJECT_DIR/bin/tools/RunFunctions

runApplication blockMesh
runApplication decomposePar
runParallel dsmcInitialise
runParallel $(getApplication)
runApplication reconstructPar -noLagrangian

#------------------------------------------------------------------------------

</allrun_script>
</case_end>




<case_begin>
<index>
case name: freeSpacePeriodic
case domain: discreteMethods
case category: None
case solver: dsmcFoam
</index>


<directory_structure>
<dir>directory name: 0. File names in this directory: [internalE, iDof, boundaryT, linearKE, rhoN, fD, dsmcRhoN, rhoM, boundaryU, momentum, q]</dir>
<dir>directory name: system. File names in this directory: [dsmcInitialiseDict, fvSolution, decomposeParDict, controlDict, fvSchemes, blockMeshDict]</dir>
<dir>directory name: constant. File names in this directory: [dsmcProperties]</dir>
</directory_structure>


<allrun_script>
#!/bin/sh
cd ${0%/*} || exit 1    # Run from this directory

# Source tutorial run functions
. $WM_PROJECT_DIR/bin/tools/RunFunctions

runApplication blockMesh
runApplication dsmcInitialise
runApplication $(getApplication)

#------------------------------------------------------------------------------

</allrun_script>
</case_end>




<case_begin>
<index>
case name: freeSpaceStream
case domain: discreteMethods
case category: None
case solver: dsmcFoam
</index>


<directory_structure>
<dir>directory name: 0. File names in this directory: [internalE, iDof, boundaryT, linearKE, rhoN, fD, dsmcRhoN, rhoM, boundaryU, momentum, q]</dir>
<dir>directory name: system. File names in this directory: [dsmcInitialiseDict, fvSolution, decomposeParDict, controlDict, fvSchemes, blockMeshDict]</dir>
<dir>directory name: constant. File names in this directory: [dsmcProperties]</dir>
</directory_structure>


<allrun_script>
#!/bin/sh
cd ${0%/*} || exit 1    # Run from this directory

# Source tutorial run functions
. $WM_PROJECT_DIR/bin/tools/RunFunctions

runApplication blockMesh
runApplication dsmcInitialise
runApplication $(getApplication)

#------------------------------------------------------------------------------

</allrun_script>
</case_end>




<case_begin>
<index>
case name: wedge15Ma5
case domain: discreteMethods
case category: None
case solver: dsmcFoam
</index>


<directory_structure>
<dir>directory name: 0. File names in this directory: [internalE, iDof, boundaryT, linearKE, rhoN, fD, dsmcRhoN, rhoM, boundaryU, momentum, q]</dir>
<dir>directory name: system. File names in this directory: [dsmcInitialiseDict, fvSolution, decomposeParDict, controlDict, fvSchemes, blockMeshDict]</dir>
<dir>directory name: constant. File names in this directory: [dsmcProperties]</dir>
</directory_structure>


<allrun_script>
#!/bin/sh
cd ${0%/*} || exit 1    # Run from this directory

# Source tutorial run functions
. $WM_PROJECT_DIR/bin/tools/RunFunctions

runApplication blockMesh
runApplication decomposePar
runParallel dsmcInitialise
runParallel $(getApplication)
runApplication reconstructPar -noLagrangian


#------------------------------------------------------------------------------

</allrun_script>
</case_end>




<case_begin>
<index>
case name: periodicCubeWater
case domain: molecularDynamics
case category: None
case solver: mdEquilibrationFoam
</index>


<directory_structure>
<dir>directory name: 0. File names in this directory: [U]</dir>
<dir>directory name: system. File names in this directory: [mdInitialiseDict, fvSolution, mdEquilibrationDict, decomposeParDict, controlDict, potentialDict, fvSchemes, blockMeshDict]</dir>
<dir>directory name: constant. File names in this directory: [moleculeProperties]</dir>
</directory_structure>


<allrun_script>
#!/bin/sh
cd ${0%/*} || exit 1    # Run from this directory

# Source tutorial run functions
. $WM_PROJECT_DIR/bin/tools/RunFunctions

runApplication blockMesh
runApplication mdInitialise
runApplication $(getApplication)

#------------------------------------------------------------------------------

</allrun_script>
</case_end>




<case_begin>
<index>
case name: periodicCubeArgon
case domain: molecularDynamics
case category: None
case solver: mdEquilibrationFoam
</index>


<directory_structure>
<dir>directory name: 0. File names in this directory: [U]</dir>
<dir>directory name: system. File names in this directory: [mdInitialiseDict, fvSolution, mdEquilibrationDict, decomposeParDict, controlDict, potentialDict, fvSchemes, blockMeshDict]</dir>
<dir>directory name: constant. File names in this directory: [moleculeProperties]</dir>
</directory_structure>


<allrun_script>
#!/bin/sh
cd ${0%/*} || exit 1    # Run from this directory

# Source tutorial run functions
. $WM_PROJECT_DIR/bin/tools/RunFunctions

runApplication blockMesh
runApplication mdInitialise
runApplication $(getApplication)

#------------------------------------------------------------------------------

</allrun_script>
</case_end>




<case_begin>
<index>
case name: nanoNozzle
case domain: molecularDynamics
case category: None
case solver: mdFoam
</index>


<directory_structure>
<dir>directory name: 0. File names in this directory: [U]</dir>
<dir>directory name: system. File names in this directory: [mdInitialiseDict, fvSolution, mdEquilibrationDict, decomposeParDict, controlDict, potentialDict, fvSchemes, blockMeshDict]</dir>
<dir>directory name: constant. File names in this directory: [moleculeProperties]</dir>
</directory_structure>


<allrun_script>
#!/bin/sh
cd ${0%/*} || exit 1    # Run from this directory


# Source tutorial run functions
. $WM_PROJECT_DIR/bin/tools/RunFunctions

application=$(getApplication)

runApplication blockMesh

runApplication decomposePar

runParallel mdInitialise
runParallel $application

runApplication reconstructPar

#------------------------------------------------------------------------------

</allrun_script>
</case_end>




<case_begin>
<index>
case name: hartmann
case domain: electromagnetics
case category: None
case solver: mhdFoam
</index>


<directory_structure>
<dir>directory name: 0. File names in this directory: [Uz, U, p, Ux, B, pB, Uy]</dir>
<dir>directory name: system. File names in this directory: [fvSolution, controlDict, sample, fvSchemes, blockMeshDict]</dir>
<dir>directory name: constant. File names in this directory: [physicalProperties]</dir>
</directory_structure>


<allrun_script>
#!/bin/sh
cd ${0%/*} || exit 1    # Run from this directory

# Source tutorial run functions
. $WM_PROJECT_DIR/bin/tools/RunFunctions

# Set application name
application=$(getApplication)

runApplication blockMesh
runApplication $application
runApplication -s sample  postProcess -func sample

#------------------------------------------------------------------------------

</allrun_script>
</case_end>




<case_begin>
<index>
case name: boxTurb16
case domain: DNS
case category: None
case solver: dnsFoam
</index>


<directory_structure>
<dir>directory name: 0. File names in this directory: [p, U.orig]</dir>
<dir>directory name: system. File names in this directory: [fvSolution, controlDict, fvSchemes, blockMeshDict]</dir>
<dir>directory name: constant. File names in this directory: [physicalProperties, momentumTransport, boxTurbDict]</dir>
</directory_structure>


<allrun_script>
#!/bin/sh
cd ${0%/*} || exit 1    # Run from this directory

# Source tutorial run functions
. $WM_PROJECT_DIR/bin/tools/RunFunctions

# Get application name
application=$(getApplication)

runApplication blockMesh
runApplication boxTurb
runApplication $application
runApplication -s enstrophy  postProcess -func enstrophy

#------------------------------------------------------------------------------

</allrun_script>
</case_end>




<case_begin>
<index>
case name: comfortHotRoom
case domain: heatTransfer
case category: None
case solver: buoyantFoam
</index>


<directory_structure>
<dir>directory name: 0. File names in this directory: [epsilon, alphat, PPD, U, DR, T, p, k, PMV, nut, p_rgh]</dir>
<dir>directory name: system. File names in this directory: [fvSolution, topoSetDict, controlDict, createPatchDict, fvSchemes, blockMeshDict]</dir>
<dir>directory name: constant. File names in this directory: [physicalProperties, g, momentumTransport, pRef]</dir>
</directory_structure>


<allrun_script>
#!/bin/sh
cd ${0%/*} || exit 1    # Run from this directory

# Source tutorial run functions
. $WM_PROJECT_DIR/bin/tools/RunFunctions

# Get application name
application=$(getApplication)

runApplication blockMesh
runApplication topoSet
runApplication createPatch -overwrite
runApplication $application

#------------------------------------------------------------------------------

</allrun_script>
</case_end>




<case_begin>
<index>
case name: externalCoupledCavity
case domain: heatTransfer
case category: None
case solver: buoyantFoam
</index>


<directory_structure>
<dir>directory name: 0. File names in this directory: [epsilon, alphat, U, omega, T, p, k, nut, p_rgh]</dir>
<dir>directory name: system. File names in this directory: [fvSolution, decomposeParDict, controlDict, fvSchemes, blockMeshDict]</dir>
<dir>directory name: constant. File names in this directory: [physicalProperties, g, momentumTransport, pRef]</dir>
</directory_structure>


<allrun_script>
#!/bin/sh
cd ${0%/*} || exit 1    # Run from this directory

# Source tutorial run functions
. $WM_PROJECT_DIR/bin/tools/RunFunctions

./Allmesh

runApplication $(getApplication) &

./externalSolver

#------------------------------------------------------------------------------

</allrun_script>
</case_end>




<case_begin>
<index>
case name: hotRadiationRoom
case domain: heatTransfer
case category: None
case solver: buoyantFoam
</index>


<directory_structure>
<dir>directory name: 0. File names in this directory: [epsilon, alphat, U, G, T, p, k, nut, p_rgh]</dir>
<dir>directory name: system. File names in this directory: [fvSolution, controlDict, fvSchemes, blockMeshDict]</dir>
<dir>directory name: constant. File names in this directory: [physicalProperties, fvModels, g, momentumTransport, pRef, radiationProperties]</dir>
</directory_structure>


<allrun_script>
#!/bin/sh
cd ${0%/*} || exit 1    # Run from this directory

# Source tutorial run functions
. $WM_PROJECT_DIR/bin/tools/RunFunctions

application=$(getApplication)

runApplication blockMesh
runApplication $application

#------------------------------------------------------------------------------

</allrun_script>
</case_end>




<case_begin>
<index>
case name: hotRadiationRoomFvDOM
case domain: heatTransfer
case category: None
case solver: buoyantFoam
</index>


<directory_structure>
<dir>directory name: 0. File names in this directory: [IDefault, epsilon, alphat, U, G, T, p, k, nut, p_rgh]</dir>
<dir>directory name: system. File names in this directory: [fvSolution, controlDict, fvSchemes, blockMeshDict]</dir>
<dir>directory name: constant. File names in this directory: [physicalProperties, fvModels, g, momentumTransport, pRef, radiationProperties]</dir>
</directory_structure>


<allrun_script>
#!/bin/sh
cd ${0%/*} || exit 1    # Run from this directory

# Source tutorial run functions
. $WM_PROJECT_DIR/bin/tools/RunFunctions

application=$(getApplication)

runApplication blockMesh
runApplication $application

#------------------------------------------------------------------------------

</allrun_script>
</case_end>




<case_begin>
<index>
case name: circuitBoardCooling
case domain: heatTransfer
case category: None
case solver: buoyantFoam
</index>


<directory_structure>
<dir>directory name: 0. File names in this directory: [k.orig, nut.orig, epsilon.orig, p_rgh.orig, alphat.orig, p.orig, U.orig, T.orig]</dir>
<dir>directory name: system. File names in this directory: [fvSolution, controlDict, fvSchemes, createBafflesDict, blockMeshDict]</dir>
<dir>directory name: include. File names in this directory: [wallBafflePatches]</dir>
<dir>directory name: constant. File names in this directory: [physicalProperties, g, momentumTransport, pRef]</dir>
</directory_structure>


<allrun_script>
#!/bin/sh
. $WM_PROJECT_DIR/bin/tools/RunFunctions

# Mesh
runApplication blockMesh

# Create 1D and 3D baffles
runApplication createBaffles -overwrite

# Run
runApplication $(getApplication)

#------------------------------------------------------------------------------

</allrun_script>
</case_end>




<case_begin>
<index>
case name: hotRoomBoussinesq
case domain: heatTransfer
case category: None
case solver: buoyantFoam
</index>


<directory_structure>
<dir>directory name: 0. File names in this directory: [epsilon, alphat, U, p, k, nut, p_rgh, T.orig]</dir>
<dir>directory name: system. File names in this directory: [fvSolution, controlDict, fvSchemes, setFieldsDict, blockMeshDict]</dir>
<dir>directory name: constant. File names in this directory: [physicalProperties, g, momentumTransport]</dir>
</directory_structure>


<allrun_script>
#!/bin/sh
cd ${0%/*} || exit 1    # Run from this directory

# Source tutorial run functions
. $WM_PROJECT_DIR/bin/tools/RunFunctions

# Get application name
application=$(getApplication)

runApplication blockMesh
runApplication setFields
runApplication $application

#------------------------------------------------------------------------------

</allrun_script>
</case_end>




<case_begin>
<index>
case name: iglooWithFridges
case domain: heatTransfer
case category: None
case solver: buoyantFoam
</index>


<directory_structure>
<dir>directory name: 0. File names in this directory: [epsilon, alphat, U, T, p, k, nut, p_rgh]</dir>
<dir>directory name: system. File names in this directory: [meshQualityDict, fvSolution, decomposeParDict, controlDict, snappyHexMeshDict, fvSchemes, blockMeshDict]</dir>
<dir>directory name: constant. File names in this directory: [physicalProperties, g, momentumTransport]</dir>
</directory_structure>


<allrun_script>
#!/bin/sh
cd ${0%/*} || exit 1    # Run from this directory

# Source tutorial run functions
. $WM_PROJECT_DIR/bin/tools/RunFunctions

runApplication blockMesh

# Serial
runApplication snappyHexMesh -overwrite
runApplication $(getApplication)

## Parallel
#runApplication decomposePar -fileHandler collated
#runParallel snappyHexMesh -overwrite -fileHandler collated
## Remove any include files from the field dictionaries
#(   mkdir -p processors/0 && \
#    cd 0 && \
#    for f in *; do [ -f "$f" ] && \
#    foamDictionary "$f" > "../processors/0/$f"; done \
#)
#
#runParallel $(getApplication) -fileHandler collated
#runApplication reconstructParMesh -constant
#runApplication reconstructPar

#------------------------------------------------------------------------------

</allrun_script>
</case_end>




<case_begin>
<index>
case name: buoyantCavity
case domain: heatTransfer
case category: None
case solver: buoyantFoam
</index>


<directory_structure>
<dir>directory name: 0. File names in this directory: [epsilon, alphat, U, omega, T, p, k, nut, p_rgh]</dir>
<dir>directory name: system. File names in this directory: [fvSolution, controlDict, sample, fvSchemes, blockMeshDict]</dir>
<dir>directory name: validation. File names in this directory: [createGraphs]</dir>
<dir>directory name: constant. File names in this directory: [physicalProperties, g, momentumTransport, pRef]</dir>
</directory_structure>


<allrun_script>
#!/bin/sh
cd ${0%/*} || exit 1    # Run from this directory

# Source tutorial run functions
. $WM_PROJECT_DIR/bin/tools/RunFunctions

# Set application name
application=$(getApplication)

runApplication blockMesh
runApplication $application
runApplication -s sample  postProcess -latestTime -func sample

runApplication validation/createGraphs

#------------------------------------------------------------------------------

</allrun_script>
</case_end>




<case_begin>
<index>
case name: hotRoomBoussinesqSteady
case domain: heatTransfer
case category: None
case solver: buoyantFoam
</index>


<directory_structure>
<dir>directory name: 0. File names in this directory: [epsilon, alphat, U, p, k, nut, p_rgh, T.orig]</dir>
<dir>directory name: system. File names in this directory: [fvSolution, controlDict, fvSchemes, setFieldsDict, blockMeshDict]</dir>
<dir>directory name: constant. File names in this directory: [physicalProperties, g, momentumTransport]</dir>
</directory_structure>


<allrun_script>
#!/bin/sh
cd ${0%/*} || exit 1    # Run from this directory

# Source tutorial run functions
. $WM_PROJECT_DIR/bin/tools/RunFunctions

application=$(getApplication)

runApplication blockMesh
runApplication setFields
runApplication $application

#------------------------------------------------------------------------------

</allrun_script>
</case_end>




<case_begin>
<index>
case name: hotRoom
case domain: heatTransfer
case category: None
case solver: buoyantFoam
</index>


<directory_structure>
<dir>directory name: 0. File names in this directory: [epsilon, alphat, U, p, k, nut, p_rgh, T.orig]</dir>
<dir>directory name: system. File names in this directory: [fvSolution, controlDict, fvSchemes, setFieldsDict, blockMeshDict]</dir>
<dir>directory name: constant. File names in this directory: [physicalProperties, g, momentumTransport, pRef]</dir>
</directory_structure>


<allrun_script>
#!/bin/sh
cd ${0%/*} || exit 1    # Run from this directory

# Source tutorial run functions
. $WM_PROJECT_DIR/bin/tools/RunFunctions

# Get application name
application=$(getApplication)

runApplication blockMesh
runApplication setFields
runApplication $application

#------------------------------------------------------------------------------

</allrun_script>
</case_end>




<case_begin>
<index>
case name: heatedDuct
case domain: heatTransfer
case category: None
case solver: chtMultiRegionFoam
</index>


<directory_structure>
<dir>directory name: system. File names in this directory: [meshQualityDict, fvSolution, decomposeParDict, controlDict, snappyHexMeshDict, fvSchemes, blockMeshDict]</dir>
<dir>directory name: constant. File names in this directory: [regionProperties]</dir>
</directory_structure>


<allrun_script>
#!/bin/sh

cd ${0%/*} || exit 1

. $WM_PROJECT_DIR/bin/tools/RunFunctions

rm -rf constant/polyMesh/sets

runApplication blockMesh
runApplication snappyHexMesh -overwrite
runApplication splitMeshRegions -cellZones -overwrite
runApplication decomposePar -allRegions
runParallel $(getApplication)
runApplication reconstructPar -allRegions
paraFoam -touchAll

</allrun_script>
</case_end>




<case_begin>
<index>
case name: reverseBurner
case domain: heatTransfer
case category: None
case solver: chtMultiRegionFoam
</index>


<directory_structure>
<dir>directory name: system. File names in this directory: [fvSolution, decomposeParDict, controlDict, fvSchemes, blockMeshDict]</dir>
<dir>directory name: constant. File names in this directory: [regionProperties]</dir>
</directory_structure>


<allrun_script>
#!/bin/sh

cd ${0%/*} || exit 1

. $WM_PROJECT_DIR/bin/tools/RunFunctions

runApplication blockMesh

runApplication splitMeshRegions -cellZonesOnly -overwrite

runApplication topoSet -region gas

paraFoam -region gas -touch
paraFoam -region solid -touch

runApplication decomposePar -allRegions

runParallel setFields -region gas

runParallel $(getApplication)

runApplication reconstructPar -allRegions -newTimes

</allrun_script>
</case_end>




<case_begin>
<index>
case name: coolingCylinder2D
case domain: heatTransfer
case category: None
case solver: chtMultiRegionFoam
</index>


<directory_structure>
<dir>directory name: system. File names in this directory: [fvSolution, topoSetDict, controlDict, fvSchemes, blockMeshDict]</dir>
<dir>directory name: constant. File names in this directory: [regionProperties]</dir>
</directory_structure>


<allrun_script>
#!/bin/sh
cd ${0%/*} || exit 1    # Run from this directory

# Source tutorial run functions
. $WM_PROJECT_DIR/bin/tools/RunFunctions

runApplication blockMesh

runApplication topoSet

runApplication splitMeshRegions -cellZones -defaultRegionName fluid -overwrite

paraFoam -region fluid -touch
paraFoam -region solid -touch

runApplication $(getApplication)

#------------------------------------------------------------------------------

</allrun_script>
</case_end>




<case_begin>
<index>
case name: shellAndTubeHeatExchanger
case domain: heatTransfer
case category: None
case solver: chtMultiRegionFoam
</index>


<directory_structure>
<dir>directory name: system. File names in this directory: [meshQualityDict, fvSolution, decomposeParDict, controlDict, snappyHexMeshDict.orig, fvSchemes, createBafflesDict, blockMeshDict]</dir>
<dir>directory name: constant. File names in this directory: [regionProperties]</dir>
</directory_structure>


<allrun_script>
#!/bin/sh

cd ${0%/*} || exit 1

. $WM_PROJECT_DIR/bin/tools/RunFunctions

./Allmesh.layers

runParallel $(getApplication)

runApplication reconstructParMesh -allRegions -constant
runApplication reconstructPar -allRegions

paraFoam -touchAll

</allrun_script>
</case_end>




<case_begin>
<index>
case name: heatExchanger
case domain: heatTransfer
case category: None
case solver: chtMultiRegionFoam
</index>


<directory_structure>
<dir>directory name: system. File names in this directory: [fvSolution, decomposeParDict, controlDict, fvSchemes]</dir>
<dir>directory name: constant. File names in this directory: [regionProperties]</dir>
</directory_structure>


<allrun_script>
#!/bin/sh

cd ${0%/*} || exit 1    # Run from this directory

# Source tutorial run functions
. $WM_PROJECT_DIR/bin/tools/RunFunctions

./Allmesh

runApplication $(getApplication)

</allrun_script>
</case_end>




<case_begin>
<index>
case name: coolingSphere
case domain: heatTransfer
case category: None
case solver: chtMultiRegionFoam
</index>


<directory_structure>
<dir>directory name: system. File names in this directory: [fvSolution, decomposeParDict, topoSetDict, controlDict, fvSchemes, blockMeshDict]</dir>
<dir>directory name: constant. File names in this directory: [initialConditions, materialProperties]</dir>
</directory_structure>


<allrun_script>
#!/bin/sh
cd ${0%/*} || exit 1    # Run from this directory

# Source tutorial run functions
. $WM_PROJECT_DIR/bin/tools/RunFunctions

./Allmesh

runApplication foamSetupCHT

runApplication foamDictionary -entry internalField -set "uniform 348" 0/solid/T

runApplication decomposePar -allRegions

printf "\n%s\n" "Creating files for paraview post-processing"
paraFoam -touchAll
echo

runParallel $(getApplication)

runApplication reconstructPar -allRegions

#------------------------------------------------------------------------------

</allrun_script>
</case_end>




<case_begin>
<index>
case name: flange
case domain: basic
case category: None
case solver: laplacianFoam
</index>


<directory_structure>
<dir>directory name: 0. File names in this directory: [T]</dir>
<dir>directory name: system. File names in this directory: [fvSolution, controlDict, fvSchemes]</dir>
<dir>directory name: constant. File names in this directory: [physicalProperties]</dir>
</directory_structure>


<allrun_script>
#!/bin/sh
cd ${0%/*} || exit 1    # Run from this directory

# Source tutorial run functions
. $WM_PROJECT_DIR/bin/tools/RunFunctions

# Get application name
application=$(getApplication)

runAnsysToFoam()
{
    if [ -f log.ansysToFoam ]
    then
        echo "ansysToFoam already run on $PWD: remove log file to re-run"
    else
        echo "Running ansysToFoam: converting mesh $1"
        ansysToFoam $1 -scale $2 > log.ansysToFoam 2>&1
    fi
}

runAnsysToFoam flange.ans 0.001
runApplication $application
runApplication foamToEnsight
runApplication foamToEnsightParts
runApplication foamToVTK

#------------------------------------------------------------------------------

</allrun_script>
</case_end>




<case_begin>
<index>
case name: pitzDaily
case domain: basic
case category: None
case solver: scalarTransportFoam
</index>


<directory_structure>
<dir>directory name: 0. File names in this directory: [U, T]</dir>
<dir>directory name: system. File names in this directory: [fvSolution, controlDict, fvSchemes, blockMeshDict]</dir>
<dir>directory name: constant. File names in this directory: [physicalProperties]</dir>
</directory_structure>


<allrun_script>
#!/bin/sh
cd ${0%/*} || exit 1    # Run from this directory

# Source tutorial run functions
. $WM_PROJECT_DIR/bin/tools/RunFunctions

application="$(getApplication)"

runApplication blockMesh -dict $FOAM_TUTORIALS/resources/blockMesh/pitzDaily
runApplication $application

#------------------------------------------------------------------------------

</allrun_script>
</case_end>




<case_begin>
<index>
case name: cylinder
case domain: basic
case category: None
case solver: potentialFoam
</index>


<directory_structure>
<dir>directory name: 0. File names in this directory: [p.orig, U.orig]</dir>
<dir>directory name: system. File names in this directory: [fvSolution, controlDict, fvSchemes, blockMeshDict]</dir>
</directory_structure>


<allrun_script>
#!/bin/sh
cd ${0%/*} || exit 1    # Run from this directory

# Source tutorial run functions
. $WM_PROJECT_DIR/bin/tools/RunFunctions

application=$(getApplication)

runApplication blockMesh
runApplication $application -withFunctionObjects -writePhi -writep
runApplication postProcess -func streamFunction

#------------------------------------------------------------------------------

</allrun_script>
</case_end>




<case_begin>
<index>
case name: pitzDaily
case domain: basic
case category: None
case solver: potentialFoam
</index>


<directory_structure>
<dir>directory name: 0. File names in this directory: [p.orig, U.orig]</dir>
<dir>directory name: system. File names in this directory: [fvSolution, controlDict, fvSchemes, blockMeshDict]</dir>
</directory_structure>


<allrun_script>
#!/bin/sh
cd ${0%/*} || exit 1    # Run from this directory

# Source tutorial run functions
. $WM_PROJECT_DIR/bin/tools/RunFunctions

application=$(getApplication)

runApplication blockMesh -dict $FOAM_TUTORIALS/resources/blockMesh/pitzDaily
runApplication $application -writePhi -writep
runApplication postProcess -func streamFunction

#------------------------------------------------------------------------------

</allrun_script>
</case_end>




<case_begin>
<index>
case name: cyclone
case domain: lagrangian
case category: None
case solver: denseParticleFoam
</index>


<directory_structure>
<dir>directory name: 0. File names in this directory: [p, nut.air, k.air, U.air]</dir>
<dir>directory name: system. File names in this directory: [fvSolution, decomposeParDict, controlDict, snappyHexMeshDict, fvSchemes, blockMeshDict]</dir>
<dir>directory name: constant. File names in this directory: [physicalProperties, g, cloudProperties, momentumTransport.air]</dir>
</directory_structure>


<allrun_script>
#!/bin/sh
cd ${0%/*} || exit 1    # Run from this directory

# Source tutorial run functions
. $WM_PROJECT_DIR/bin/tools/RunFunctions

runApplication blockMesh

runApplication snappyHexMesh -overwrite

runApplication decomposePar

runParallel $(getApplication)

#------------------------------------------------------------------------------

</allrun_script>
</case_end>




<case_begin>
<index>
case name: mixerVessel2D
case domain: lagrangian
case category: None
case solver: particleFoam
</index>


<directory_structure>
<dir>directory name: 0. File names in this directory: [U]</dir>
<dir>directory name: system. File names in this directory: [fvSolution, decomposeParDict, controlDict, fvSchemes, createBafflesDict, blockMeshDict]</dir>
<dir>directory name: constant. File names in this directory: [physicalProperties, dynamicMeshDict, g, momentumTransport, cloudPositions, cloudProperties]</dir>
</directory_structure>


<allrun_script>
#!/bin/sh

cd ${0%/*} || exit 1 # Run from this directory

. $WM_PROJECT_DIR/bin/tools/RunFunctions

runApplication blockMesh -dict $FOAM_TUTORIALS/resources/blockMesh/mixerVessel2D
runApplication createBaffles -overwrite
runApplication splitBaffles -overwrite
runApplication createNonConformalCouples -overwrite nonCouple1 nonCouple2

runApplication decomposePar

runParallel $(getApplication)

runApplication reconstructPar

</allrun_script>
</case_end>




<case_begin>
<index>
case name: smallPoolFire3D
case domain: combustion
case category: RAS
case solver: buoyantReactingFoam
</index>


<directory_structure>
<dir>directory name: 0. File names in this directory: [IDefault, ph_rgh.orig, alphat, U, G, T, p, N2, k, Ydefault, nut, O2, p_rgh, CH4]</dir>
<dir>directory name: system. File names in this directory: [fvSolution, decomposeParDict, topoSetDict, controlDict, createPatchDict, fvSchemes, blockMeshDict]</dir>
<dir>directory name: constant. File names in this directory: [physicalProperties, fvModels, reaction, g, momentumTransport, combustionProperties, hRef, pRef, radiationProperties, thermo.compressibleGas]</dir>
</directory_structure>


<allrun_script>
#!/bin/sh

# Source tutorial run functions
. $WM_PROJECT_DIR/bin/tools/RunFunctions

# Set application name
application=$(getApplication)

runApplication blockMesh
runApplication topoSet
runApplication createPatch -overwrite
runApplication decomposePar -force
runParallel $application
runApplication reconstructPar

#------------------------------------------------------------------------------

</allrun_script>
</case_end>




<case_begin>
<index>
case name: smallPoolFire2D
case domain: combustion
case category: RAS
case solver: buoyantReactingFoam
</index>


<directory_structure>
<dir>directory name: 0. File names in this directory: [soot, IDefault, ph_rgh.orig, alphat, FSDomega, U, G, T, p, N2, k, Ydefault, nut, O2, p_rgh, CH4]</dir>
<dir>directory name: system. File names in this directory: [fvSolution, topoSetDict, controlDict, createPatchDict, fvSchemes, blockMeshDict]</dir>
<dir>directory name: constant. File names in this directory: [physicalProperties, fvModels, reaction, g, momentumTransport, combustionProperties, hRef, pRef, radiationProperties, thermo.compressibleGas]</dir>
</directory_structure>


<allrun_script>
#!/bin/sh
cd ${0%/*} || exit 1    # Run from this directory


# Source tutorial run functions
. $WM_PROJECT_DIR/bin/tools/RunFunctions

runApplication blockMesh
runApplication topoSet
runApplication createPatch -overwrite
runApplication $(getApplication)

#------------------------------------------------------------------------------

</allrun_script>
</case_end>




<case_begin>
<index>
case name: splashPanel
case domain: combustion
case category: Lagrangian
case solver: buoyantReactingFoam
</index>


<directory_structure>
<dir>directory name: 0. File names in this directory: [U, H2O, T, p, N2, O2, p_rgh]</dir>
<dir>directory name: system. File names in this directory: [fvSolution, decomposeParDict, topoSetDict, controlDict, fvSchemes, extrudeToRegionMeshDict, blockMeshDict]</dir>
<dir>directory name: constant. File names in this directory: [physicalProperties, fvModels, speciesThermo, g, momentumTransport, combustionProperties, surfaceFilmProperties, cloudProperties, parcelInjectionProperties]</dir>
</directory_structure>


<allrun_script>
#!/bin/sh
cd ${0%/*} || exit 1    # Run from this directory

. $WM_PROJECT_DIR/bin/tools/RunFunctions

runApplication blockMesh
runApplication topoSet
runApplication extrudeToRegionMesh -overwrite

paraFoam -touchAll

runApplication $(getApplication)

#------------------------------------------------------------------------------

</allrun_script>
</case_end>




<case_begin>
<index>
case name: rivuletPanel
case domain: combustion
case category: Lagrangian
case solver: buoyantReactingFoam
</index>


<directory_structure>
<dir>directory name: 0. File names in this directory: [U, H2O, T, p, N2, O2, p_rgh]</dir>
<dir>directory name: system. File names in this directory: [fvSolution, decomposeParDict, controlDict, fvSchemes, wallFilmRegion.topoSet, extrudeToRegionMeshDict, blockMeshDict]</dir>
<dir>directory name: constant. File names in this directory: [physicalProperties, fvModels, speciesThermo, g, momentumTransport, combustionProperties, surfaceFilmProperties]</dir>
</directory_structure>


<allrun_script>
#!/bin/sh
cd ${0%/*} || exit 1    # Run from this directory

. $WM_PROJECT_DIR/bin/tools/RunFunctions

./Allmesh

application=$(getApplication)

runApplication $application

#------------------------------------------------------------------------------

</allrun_script>
</case_end>




<case_begin>
<index>
case name: cylinder
case domain: combustion
case category: Lagrangian
case solver: buoyantReactingFoam
</index>


<directory_structure>
<dir>directory name: 0. File names in this directory: [U, H2O, T, p, N2, O2, p_rgh]</dir>
<dir>directory name: system. File names in this directory: [fvSolution, decomposeParDict, topoSetDict, controlDict, fvSchemes, extrudeToRegionMeshDict, blockMeshDict]</dir>
<dir>directory name: constant. File names in this directory: [physicalProperties, fvModels, speciesThermo, g, momentumTransport, combustionProperties, surfaceFilmProperties, cloudProperties, parcelInjectionProperties]</dir>
</directory_structure>


<allrun_script>
#!/bin/sh
cd ${0%/*} || exit 1    # Run from this directory

. $WM_PROJECT_DIR/bin/tools/RunFunctions

./Allmesh

application=$(getApplication)

runApplication $application

#------------------------------------------------------------------------------

</allrun_script>
</case_end>




<case_begin>
<index>
case name: hotBoxes
case domain: combustion
case category: Lagrangian
case solver: buoyantReactingFoam
</index>


<directory_structure>
<dir>directory name: 0. File names in this directory: [epsilon, htcConv, alphat, U, H2O, T, p, N2, k, nut, O2, p_rgh]</dir>
<dir>directory name: system. File names in this directory: [fvSolution, decomposeParDict, topoSetDict, controlDict, fvSchemes, extrudeToRegionMeshDict, topoSetDict.wallFilmRegion, blockMeshDict]</dir>
<dir>directory name: constant. File names in this directory: [physicalProperties, fvModels, speciesThermo, g, momentumTransport, combustionProperties, surfaceFilmProperties, cloudProperties]</dir>
</directory_structure>


<allrun_script>
#!/bin/sh
cd ${0%/*} || exit 1    # Run from this directory

# Source tutorial run functions
. $WM_PROJECT_DIR/bin/tools/RunFunctions

application=$(getApplication)

./Allmesh
runApplication $application

#------------------------------------------------------------------------------

</allrun_script>
</case_end>




<case_begin>
<index>
case name: membrane
case domain: combustion
case category: RAS
case solver: reactingFoam
</index>


<directory_structure>
<dir>directory name: 0. File names in this directory: [epsilon, O2.orig, alphat, N2.orig, U, CH4.orig, T, p, k, include, Ydefault, nut]</dir>
<dir>directory name: system. File names in this directory: [meshQualityDict, fvSolution, controlDict, snappyHexMeshDict, fvSchemes, createBafflesDict, setFieldsDict, blockMeshDict]</dir>
<dir>directory name: constant. File names in this directory: [physicalProperties, momentumTransport, combustionProperties, thermo.compressibleGas]</dir>
</directory_structure>


<allrun_script>
#!/bin/sh

cd ${0%/*} || exit 1

. $WM_PROJECT_DIR/bin/tools/RunFunctions

runApplication blockMesh
runApplication snappyHexMesh -overwrite
runApplication createBaffles -overwrite

runApplication setFields

runApplication reactingFoam

</allrun_script>
</case_end>




<case_begin>
<index>
case name: DLR_A_LTS
case domain: combustion
case category: RAS
case solver: reactingFoam
</index>


<directory_structure>
<dir>directory name: 0. File names in this directory: [epsilon, alphat, H2, U, G, H2O, p, N2, k, Ydefault, nut, O2, CH4, T.orig]</dir>
<dir>directory name: system. File names in this directory: [fvSolution, decomposeParDict, controlDict, fvSchemes, setFieldsDict, blockMeshDict]</dir>
<dir>directory name: chemkin. File names in this directory: [thermo30.dat, transportProperties, grimech30.dat]</dir>
<dir>directory name: constant. File names in this directory: [physicalProperties, chemistryProperties, thermo.compressibleGasGRI.orig, g, momentumTransport, combustionProperties, reactionsGRI.orig]</dir>
</directory_structure>


<allrun_script>
#!/bin/sh
cd ${0%/*} || exit 1    # Run from this directory

# Source tutorial run functions
. $WM_PROJECT_DIR/bin/tools/RunFunctions

# Set application name
application=$(getApplication)

runApplication chemkinToFoam \
               chemkin/grimech30.dat chemkin/thermo30.dat chemkin/transportProperties \
               constant/reactionsGRI constant/thermo.compressibleGasGRI

runApplication blockMesh
runApplication setFields
runApplication decomposePar -force
runParallel $application
runApplication reconstructPar

#------------------------------------------------------------------------------

</allrun_script>
</case_end>




<case_begin>
<index>
case name: SandiaD_LTS
case domain: combustion
case category: RAS
case solver: reactingFoam
</index>


<directory_structure>
<dir>directory name: 0. File names in this directory: [H, epsilon, OH, O2.orig, alphat, H2, N2.orig, U, G, H2O, CO2, CH4.orig, CO, p, k, Ydefault, nut, O, T.orig]</dir>
<dir>directory name: system. File names in this directory: [fvSolution, fvSchemes, controlDict.orig, setFieldsDict, blockMeshDict]</dir>
<dir>directory name: chemkin. File names in this directory: [thermo30.dat, transportProperties, grimech30.dat]</dir>
<dir>directory name: constant. File names in this directory: [physicalProperties, fvModels, thermo.compressibleGasGRI.orig, g, chemistryProperties.orig, momentumTransport, combustionProperties, reactionsGRI.orig, radiationProperties]</dir>
</directory_structure>


<allrun_script>
#!/bin/sh
cd ${0%/*} || exit 1    # Run from this directory

# Source tutorial run functions
. $WM_PROJECT_DIR/bin/tools/RunFunctions

# Set application name
application=$(getApplication)

runApplication chemkinToFoam \
               chemkin/grimech30.dat chemkin/thermo30.dat chemkin/transportProperties \
               constant/reactionsGRI constant/thermo.compressibleGasGRI

runApplication blockMesh
runApplication setFields

if ! isTest $@
then
    # Run the application without chemistry until 1500 to let the flow develop
    runApplication -a foamDictionary -entry "startTime" -set "0" system/controlDict
    runApplication -a foamDictionary -entry "writeInterval" -set "1500" system/controlDict
    runApplication -a foamDictionary -entry "endTime" -set "1500" system/controlDict
    runApplication -a foamDictionary -entry "chemistry" -set "off" constant/chemistryProperties

    runApplication $application

    # Run with chemistry until flame reach its full size
    runApplication -a foamDictionary -entry "startTime" -set "1500" system/controlDict
    runApplication -a foamDictionary -entry "writeInterval" -set "100" system/controlDict
    runApplication -a foamDictionary -entry "endTime" -set "5000" system/controlDict
    runApplication -a foamDictionary -entry "chemistry" -set "on" constant/chemistryProperties
fi

runApplication -o $application

#------------------------------------------------------------------------------

</allrun_script>
</case_end>




<case_begin>
<index>
case name: counterFlowFlame2D_GRI
case domain: combustion
case category: laminar
case solver: reactingFoam
</index>


<directory_structure>
<dir>directory name: 0. File names in this directory: [alphat, U, H2O, CO2, T, p, N2, Ydefault, O2, CH4]</dir>
<dir>directory name: system. File names in this directory: [fvSolution, decomposeParDict, controlDict, fvSchemes, blockMeshDict]</dir>
<dir>directory name: constant. File names in this directory: [physicalProperties, chemistryProperties, thermo.compressibleGasGRI, dynamicMeshDict, momentumTransport, combustionProperties, reactionsGRI]</dir>
</directory_structure>


<allrun_script>
#!/bin/sh
cd ${0%/*} || exit 1    # Run from this directory

# Source tutorial run functions
. $WM_PROJECT_DIR/bin/tools/RunFunctions

runApplication blockMesh

runApplication $(getApplication)

#------------------------------------------------------------------------------

</allrun_script>
</case_end>




<case_begin>
<index>
case name: verticalChannel
case domain: combustion
case category: Lagrangian
case solver: reactingFoam
</index>


<directory_structure>
<dir>directory name: 0. File names in this directory: [alphat, H2O, omega, T, p, k, nut, air, U.orig]</dir>
<dir>directory name: system. File names in this directory: [fvSolution, controlDict, fvConstraints, particleTracksDict, fvSchemes, blockMeshDict]</dir>
<dir>directory name: constant. File names in this directory: [physicalProperties, fvModels, speciesThermo, g, momentumTransport, combustionProperties, cloudProperties]</dir>
</directory_structure>


<allrun_script>
#!/bin/sh
cd ${0%/*} || exit 1    # Run from this directory

# Source tutorial run functions
. $WM_PROJECT_DIR/bin/tools/RunFunctions

# Create mesh
runApplication blockMesh

# Initialise with potentialFoam solution
runApplication potentialFoam

rm -f 0/phi

# Run the solver
runApplication $(getApplication)

# Run post-processing
runApplication particleTracks

#------------------------------------------------------------------------------

</allrun_script>
</case_end>




<case_begin>
<index>
case name: filter
case domain: combustion
case category: Lagrangian
case solver: reactingFoam
</index>


<directory_structure>
<dir>directory name: 0. File names in this directory: [epsilon, alphat, U, G, H2O, T, p, N2, k, nut, O2]</dir>
<dir>directory name: system. File names in this directory: [fvSolution, decomposeParDict, topoSetDict, controlDict, fvSchemes, createBafflesDict, blockMeshDict]</dir>
<dir>directory name: constant. File names in this directory: [physicalProperties, fvModels, speciesThermo, g, momentumTransport, combustionProperties, cloudProperties, parcelInjectionProperties]</dir>
</directory_structure>


<allrun_script>
#!/bin/sh
cd ${0%/*} || exit 1    # Run from this directory

# Source tutorial run functions
. $WM_PROJECT_DIR/bin/tools/RunFunctions

application=$(getApplication)

# create mesh
runApplication blockMesh

# create sets
runApplication topoSet

# create baffles and fields
runApplication createBaffles -overwrite

runApplication $application

#------------------------------------------------------------------------------

</allrun_script>
</case_end>




<case_begin>
<index>
case name: aachenBomb
case domain: combustion
case category: Lagrangian
case solver: reactingFoam
</index>


<directory_structure>
<dir>directory name: 0. File names in this directory: [epsilon, alphat, U, T, p, N2, k, Ydefault, nut, O2, Qdot]</dir>
<dir>directory name: system. File names in this directory: [fvSolution, controlDict, fvSchemes, blockMeshDict]</dir>
<dir>directory name: chemkin. File names in this directory: [transportProperties, therm.dat, chem.inp]</dir>
<dir>directory name: constant. File names in this directory: [physicalProperties, fvModels, chemistryProperties, g, momentumTransport, combustionProperties, cloudProperties]</dir>
</directory_structure>


<allrun_script>
#!/bin/sh
cd ${0%/*} || exit 1    # Run from this directory

# Source tutorial run functions
. $WM_PROJECT_DIR/bin/tools/RunFunctions

# Set application name
application=$(getApplication)

runApplication chemkinToFoam \
               chemkin/chem.inp chemkin/therm.dat chemkin/transportProperties \
               constant/reactions constant/speciesThermo

runApplication blockMesh
runApplication $application

#------------------------------------------------------------------------------

</allrun_script>
</case_end>




<case_begin>
<index>
case name: simplifiedSiwek
case domain: combustion
case category: Lagrangian
case solver: reactingFoam
</index>


<directory_structure>
<dir>directory name: 0. File names in this directory: [epsilon, alphat, H2, U, G, H2O, CO2, CO, T, N2, k, nut, O2, CH4, p.orig]</dir>
<dir>directory name: system. File names in this directory: [fvSolution, decomposeParDict, topoSetDict, controlDict, fvConstraints, fvSchemes, blockMeshDict]</dir>
<dir>directory name: constant. File names in this directory: [limestoneCloudPositions, physicalProperties, fvModels, speciesThermo, chemistryProperties, clouds, limestoneCloudProperties, coalCloudProperties, coalCloudPositions, g, momentumTransport, combustionProperties, radiationProperties, reactions]</dir>
</directory_structure>


<allrun_script>
#!/bin/sh
cd ${0%/*} || exit 1    # Run from this directory

# Source tutorial run functions
. $WM_PROJECT_DIR/bin/tools/RunFunctions

application=$(getApplication)

# create mesh
runApplication blockMesh

# create ignition cells cellSet
runApplication topoSet

runApplication $application

#------------------------------------------------------------------------------

</allrun_script>
</case_end>




<case_begin>
<index>
case name: verticalChannelLTS
case domain: combustion
case category: Lagrangian
case solver: reactingFoam
</index>


<directory_structure>
<dir>directory name: 0. File names in this directory: [alphat, H2O, omega, T, p, k, nut, air, U.orig]</dir>
<dir>directory name: system. File names in this directory: [fvSolution, controlDict, fvConstraints, steadyParticleTracksDict, fvSchemes, blockMeshDict]</dir>
<dir>directory name: constant. File names in this directory: [physicalProperties, fvModels, speciesThermo, g, momentumTransport, combustionProperties, cloudProperties]</dir>
</directory_structure>


<allrun_script>
#!/bin/sh
cd ${0%/*} || exit 1    # Run from this directory

# Source tutorial run functions
. $WM_PROJECT_DIR/bin/tools/RunFunctions

# Create mesh
runApplication blockMesh

# Initialise with potentialFoam solution
runApplication potentialFoam

rm -f 0/phi

# Run the solver
runApplication $(getApplication)

# Run post-processing
runApplication steadyParticleTracks

#------------------------------------------------------------------------------

</allrun_script>
</case_end>




<case_begin>
<index>
case name: verticalChannelSteady
case domain: combustion
case category: Lagrangian
case solver: reactingFoam
</index>


<directory_structure>
<dir>directory name: 0. File names in this directory: [alphat, H2O, omega, T, p, k, nut, air, U.orig]</dir>
<dir>directory name: system. File names in this directory: [fvSolution, controlDict, steadyParticleTracksDict, fvSchemes, blockMeshDict]</dir>
<dir>directory name: constant. File names in this directory: [physicalProperties, fvModels, speciesThermo, g, fvConstraints, momentumTransport, combustionProperties, cloudProperties]</dir>
</directory_structure>


<allrun_script>
#!/bin/sh
cd ${0%/*} || exit 1    # Run from this directory

# Source tutorial run functions
. $WM_PROJECT_DIR/bin/tools/RunFunctions

runApplication blockMesh

runApplication potentialFoam

# remove incompatible (volumetric) flux field
rm -f 0/phi

runApplication $(getApplication)

runApplication steadyParticleTracks

#------------------------------------------------------------------------------

</allrun_script>
</case_end>




<case_begin>
<index>
case name: nc7h16
case domain: combustion
case category: None
case solver: chemFoam
</index>


<directory_structure>
<dir>directory name: system. File names in this directory: [fvSolution, controlDict, fvSchemes]</dir>
<dir>directory name: validation. File names in this directory: [Allrun, createGraph]</dir>
<dir>directory name: chemkin. File names in this directory: [senk.out, senk.inp, transportProperties, therm.dat, chem.inp]</dir>
<dir>directory name: constant. File names in this directory: [physicalProperties, chemistryProperties, initialConditions]</dir>
</directory_structure>


<allrun_script>
#!/bin/sh
cd ${0%/*} || exit 1    # Run from this directory

# Source tutorial run functions
. $WM_PROJECT_DIR/bin/tools/RunFunctions

# Set application name
application=$(getApplication)

runApplication chemkinToFoam \
               chemkin/chem.inp chemkin/therm.dat chemkin/transportProperties \
               constant/reactions constant/speciesThermo

runApplication $application

(cd validation && ./Allrun $*)

#------------------------------------------------------------------------------

</allrun_script>
</case_end>




<case_begin>
<index>
case name: h2
case domain: combustion
case category: None
case solver: chemFoam
</index>


<directory_structure>
<dir>directory name: system. File names in this directory: [fvSolution, controlDict, fvSchemes]</dir>
<dir>directory name: validation. File names in this directory: [Allrun, createGraph]</dir>
<dir>directory name: chemkin. File names in this directory: [senk.out, senk.inp, transportProperties, therm.dat, chem.inp]</dir>
<dir>directory name: constant. File names in this directory: [physicalProperties, chemistryProperties, initialConditions]</dir>
</directory_structure>


<allrun_script>
#!/bin/sh
cd ${0%/*} || exit 1    # Run from this directory

# Source tutorial run functions
. $WM_PROJECT_DIR/bin/tools/RunFunctions

# Set application name
application=$(getApplication)

runApplication chemkinToFoam \
               chemkin/chem.inp chemkin/therm.dat chemkin/transportProperties \
               constant/reactions constant/speciesThermo

runApplication $application

(cd validation && ./Allrun $*)

#------------------------------------------------------------------------------

</allrun_script>
</case_end>




<case_begin>
<index>
case name: ic8h18
case domain: combustion
case category: None
case solver: chemFoam
</index>


<directory_structure>
<dir>directory name: system. File names in this directory: [fvSolution, controlDict, fvSchemes]</dir>
<dir>directory name: validation. File names in this directory: [Allrun, createGraph]</dir>
<dir>directory name: chemkin. File names in this directory: [senk.out, senk.inp, transportProperties, therm.dat, chem.inp]</dir>
<dir>directory name: constant. File names in this directory: [physicalProperties, chemistryProperties, initialConditions]</dir>
</directory_structure>


<allrun_script>
#!/bin/sh
cd ${0%/*} || exit 1    # Run from this directory

# Source tutorial run functions
. $WM_PROJECT_DIR/bin/tools/RunFunctions

# Set application name
application=$(getApplication)

runApplication chemkinToFoam \
               chemkin/chem.inp chemkin/therm.dat chemkin/transportProperties \
               constant/reactions constant/speciesThermo

runApplication $application

(cd validation && ./Allrun $*)

#------------------------------------------------------------------------------

</allrun_script>
</case_end>




<case_begin>
<index>
case name: ic8h18_TDAC
case domain: combustion
case category: None
case solver: chemFoam
</index>


<directory_structure>
<dir>directory name: system. File names in this directory: [fvSolution, controlDict, fvSchemes]</dir>
<dir>directory name: validation. File names in this directory: [Allrun, createGraph]</dir>
<dir>directory name: chemkin. File names in this directory: [senk.out, senk.inp, transportProperties, therm.dat, chem.inp]</dir>
<dir>directory name: constant. File names in this directory: [physicalProperties, chemistryProperties, initialConditions]</dir>
</directory_structure>


<allrun_script>
#!/bin/sh
cd ${0%/*} || exit 1    # Run from this directory

# Source tutorial run functions
. $WM_PROJECT_DIR/bin/tools/RunFunctions

# Set application name
application=$(getApplication)

runApplication chemkinToFoam \
               chemkin/chem.inp chemkin/therm.dat chemkin/transportProperties \
               constant/reactions constant/speciesThermo

runApplication $application

(cd validation && ./Allrun $*)

#------------------------------------------------------------------------------

</allrun_script>
</case_end>




<case_begin>
<index>
case name: gri
case domain: combustion
case category: None
case solver: chemFoam
</index>


<directory_structure>
<dir>directory name: system. File names in this directory: [fvSolution, controlDict, fvSchemes]</dir>
<dir>directory name: validation. File names in this directory: [Allrun, createGraph]</dir>
<dir>directory name: chemkin. File names in this directory: [senk.out, senk.inp, transportProperties, therm.dat, chem.inp]</dir>
<dir>directory name: constant. File names in this directory: [physicalProperties, chemistryProperties, initialConditions]</dir>
</directory_structure>


<allrun_script>
#!/bin/sh
cd ${0%/*} || exit 1    # Run from this directory

# Source tutorial run functions
. $WM_PROJECT_DIR/bin/tools/RunFunctions

# Set application name
application=$(getApplication)

runApplication chemkinToFoam \
               chemkin/chem.inp chemkin/therm.dat chemkin/transportProperties \
               constant/reactions constant/speciesThermo

runApplication $application

(cd validation && ./Allrun $*)

#------------------------------------------------------------------------------

</allrun_script>
</case_end>




<case_begin>
<index>
case name: kivaTest
case domain: combustion
case category: RAS
case solver: XiFoam
</index>


<directory_structure>
<dir>directory name: -180. File names in this directory: [b, epsilon, alphat, U, Tu, Su, ft, T, p, k, Xi, nut, fu]</dir>
<dir>directory name: system. File names in this directory: [fvSolution, controlDict, fvSchemes]</dir>
<dir>directory name: constant. File names in this directory: [physicalProperties, dynamicMeshDict, momentumTransport, combustionProperties]</dir>
</directory_structure>


<allrun_script>
#!/bin/sh
cd ${0%/*} || exit 1    # Run from this directory

# Source tutorial run functions
. $WM_PROJECT_DIR/bin/tools/RunFunctions

# Get application name
application=$(getApplication)

runApplication kivaToFoam -file otape17

runApplication $application

#------------------------------------------------------------------------------

</allrun_script>
</case_end>




<case_begin>
<index>
case name: flamePropagationWithObstacles
case domain: combustion
case category: None
case solver: PDRFoam
</index>


<directory_structure>
<dir>directory name: 0. File names in this directory: [Aw.orig, Xi.orig, k.orig, Nv.orig, ft.orig, CR.orig, b.orig, nut.orig, epsilon.orig, alphat.orig, Lobs.orig, B.orig, p.orig, betav.orig, nsv.orig, Tu.orig, U.orig, Su.orig, CT.orig, T.orig]</dir>
<dir>directory name: system. File names in this directory: [fvSolution, decomposeParDict, topoSetDict, controlDict, PDRMeshDict, fvSchemes, blockMeshDict]</dir>
<dir>directory name: fuels. File names in this directory: [propane.dat]</dir>
<dir>directory name: constant. File names in this directory: [physicalProperties, dynamicMeshDict, g, momentumTransport, combustionProperties, PDRProperties]</dir>
</directory_structure>


<allrun_script>
#!/bin/sh
cd ${0%/*} || exit 1    # Run from this directory

# Source tutorial run functions
. $WM_PROJECT_DIR/bin/tools/RunFunctions

runApplication blockMesh
runApplication topoSet

runApplication PDRMesh -overwrite

runApplication $(getApplication)

#------------------------------------------------------------------------------

</allrun_script>
</case_end>




<case_begin>
<index>
case name: ballValve
case domain: multiphase
case category: RAS
case solver: compressibleInterFoam
</index>


<directory_structure>
<dir>directory name: 0. File names in this directory: [epsilon, U, T, p, k, alpha.water, nut, p_rgh, Phi]</dir>
<dir>directory name: system. File names in this directory: [fvSolution, decomposeParDict, controlDict, fvSchemes, wallsSurface, blockMeshDict]</dir>
<dir>directory name: constant. File names in this directory: [phaseProperties, physicalProperties.vapour, dynamicMeshDict, g, physicalProperties.water, momentumTransport, phaseChangeProperties]</dir>
</directory_structure>


<allrun_script>
#!/bin/sh

cd ${0%/*} || exit 1

. $WM_PROJECT_DIR/bin/tools/RunFunctions

# Copy torus surface from resources directory
mkdir constant/geometry && cp $FOAM_TUTORIALS/resources/geometry/ballValve-torus.obj.gz constant/geometry

# Mesh
runApplication blockMesh -dict $FOAM_TUTORIALS/resources/blockMesh/ballValve

# Create couples
runApplication createNonConformalCouples -overwrite pipeNonCouple ballNonCouple

# Decompose
runApplication decomposePar -cellDist

# Initialise the velocity field
runParallel potentialFoam -pName p_rgh

# Run
runParallel $(getApplication);

# Reconstruct
runApplication reconstructPar -newTimes

</allrun_script>
</case_end>




<case_begin>
<index>
case name: damBreak
case domain: multiphase
case category: RAS
case solver: compressibleInterFoam
</index>


<directory_structure>
<dir>directory name: 0. File names in this directory: [epsilon, alpha.water.orig, T.air, U, T.water, nuTilda, omega, T, p, k, nut, p_rgh]</dir>
<dir>directory name: system. File names in this directory: [fvSolution, decomposeParDict, controlDict, fvSchemes, setFieldsDict, blockMeshDict]</dir>
<dir>directory name: constant. File names in this directory: [physicalProperties.air, fvModels, phaseProperties, g, physicalProperties.water, momentumTransport]</dir>
</directory_structure>


<allrun_script>
#!/bin/sh
cd ${0%/*} || exit 1    # Run from this directory

# Source tutorial run functions
. $WM_PROJECT_DIR/bin/tools/RunFunctions

# Get application name
application=$(getApplication)

runApplication blockMesh
runApplication setFields
runApplication $application

#------------------------------------------------------------------------------

</allrun_script>
</case_end>




<case_begin>
<index>
case name: climbingRod
case domain: multiphase
case category: laminar
case solver: compressibleInterFoam
</index>


<directory_structure>
<dir>directory name: 0. File names in this directory: [sigma.liquid, alpha.liquid.orig, U, T, p, p_rgh]</dir>
<dir>directory name: system. File names in this directory: [fvSolution, extrudeMeshDict, controlDict, fvSchemes, setFieldsDict, blockMeshDict]</dir>
<dir>directory name: constant. File names in this directory: [physicalProperties.air, fvModels, momentumTransport.liquid, phaseProperties, g, momentumTransport, physicalProperties.liquid, momentumTransport.air]</dir>
</directory_structure>


<allrun_script>
#!/bin/sh
cd ${0%/*} || exit 1    # Run from this directory

# Source tutorial run functions
. $WM_PROJECT_DIR/bin/tools/RunFunctions

# Get application name
application=$(getApplication)

runApplication blockMesh
runApplication extrudeMesh

runApplication setFields
runApplication $application

#------------------------------------------------------------------------------

</allrun_script>
</case_end>




<case_begin>
<index>
case name: depthCharge2D
case domain: multiphase
case category: laminar
case solver: compressibleInterFoam
</index>


<directory_structure>
<dir>directory name: 0. File names in this directory: [alpha.water.orig, U, p_rgh.orig, p.orig, T.orig]</dir>
<dir>directory name: system. File names in this directory: [fvSolution, decomposeParDict, controlDict, fvSchemes, setFieldsDict, blockMeshDict]</dir>
<dir>directory name: constant. File names in this directory: [physicalProperties.air, phaseProperties, g, physicalProperties.water, momentumTransport]</dir>
</directory_structure>


<allrun_script>
#!/bin/sh
cd ${0%/*} || exit 1    # Run from this directory

# Source tutorial run functions
. $WM_PROJECT_DIR/bin/tools/RunFunctions

runApplication blockMesh
runApplication setFields
runApplication $(getApplication)

#------------------------------------------------------------------------------

</allrun_script>
</case_end>




<case_begin>
<index>
case name: cylinder
case domain: multiphase
case category: laminar
case solver: compressibleInterFoam
</index>


<directory_structure>
<dir>directory name: 0. File names in this directory: [T.air, U, T.liquid, T, p, alpha.liquid, p_rgh]</dir>
<dir>directory name: system. File names in this directory: [fvSolution, decomposeParDict, topoSetDict, controlDict, fvSchemes, extrudeToRegionMeshDict, blockMeshDict]</dir>
<dir>directory name: constant. File names in this directory: [physicalProperties.air, fvModels, speciesThermo, phaseProperties, g, momentumTransport, combustionProperties, physicalProperties.liquid, surfaceFilmProperties, cloudProperties, parcelInjectionProperties]</dir>
</directory_structure>


<allrun_script>
#!/bin/sh
cd ${0%/*} || exit 1    # Run from this directory

. $WM_PROJECT_DIR/bin/tools/RunFunctions

./Allmesh

application=$(getApplication)

runApplication $application

#------------------------------------------------------------------------------

</allrun_script>
</case_end>




<case_begin>
<index>
case name: depthCharge3D
case domain: multiphase
case category: laminar
case solver: compressibleInterFoam
</index>


<directory_structure>
<dir>directory name: 0. File names in this directory: [alpha.water.orig, U, p_rgh.orig, p.orig, T.orig]</dir>
<dir>directory name: system. File names in this directory: [fvSolution, decomposeParDict, controlDict, fvSchemes, setFieldsDict, blockMeshDict]</dir>
<dir>directory name: constant. File names in this directory: [physicalProperties.air, phaseProperties, g, physicalProperties.water, momentumTransport]</dir>
</directory_structure>


<allrun_script>
#!/bin/sh
cd ${0%/*} || exit 1    # Run from this directory

# Source tutorial run functions
. $WM_PROJECT_DIR/bin/tools/RunFunctions

runApplication blockMesh
runApplication setFields
runApplication decomposePar
runParallel $(getApplication)
runApplication reconstructPar

#------------------------------------------------------------------------------

</allrun_script>
</case_end>




<case_begin>
<index>
case name: plateFilm
case domain: multiphase
case category: laminar
case solver: compressibleInterFoam
</index>


<directory_structure>
<dir>directory name: 0. File names in this directory: [alpha.liquid.orig, U, T, p, p_rgh]</dir>
<dir>directory name: system. File names in this directory: [fvSolution, topoSetDict, controlDict, fvSchemes, extrudeToRegionMeshDict, setFieldsDict, blockMeshDict]</dir>
<dir>directory name: constant. File names in this directory: [physicalProperties.air, fvModels, phaseProperties, g, momentumTransport, physicalProperties.liquid, surfaceFilmProperties]</dir>
</directory_structure>


<allrun_script>
#!/bin/sh
cd ${0%/*} || exit 1    # Run from this directory

# Source tutorial run functions
. $WM_PROJECT_DIR/bin/tools/RunFunctions

# Get application name
application=$(getApplication)

runApplication blockMesh
runApplication topoSet
runApplication extrudeToRegionMesh -overwrite

runApplication setFields

runApplication $application

#------------------------------------------------------------------------------

</allrun_script>
</case_end>




<case_begin>
<index>
case name: sloshingTank2D
case domain: multiphase
case category: laminar
case solver: compressibleInterFoam
</index>


<directory_structure>
<dir>directory name: 0. File names in this directory: [alpha.water.orig, T.air, U, T.water, T, p, p_rgh]</dir>
<dir>directory name: system. File names in this directory: [fvSolution, decomposeParDict, controlDict, fvSchemes, setFieldsDict, blockMeshDict]</dir>
<dir>directory name: constant. File names in this directory: [physicalProperties.air, phaseProperties, dynamicMeshDict, g, physicalProperties.water, momentumTransport]</dir>
</directory_structure>


<allrun_script>
#!/bin/sh
cd ${0%/*} || exit 1    # Run from this directory

# Source tutorial run functions
. $WM_PROJECT_DIR/bin/tools/RunFunctions

runApplication blockMesh -dict $FOAM_TUTORIALS/resources/blockMesh/sloshingTank2D
runApplication setFields
runApplication $(getApplication)

#------------------------------------------------------------------------------

</allrun_script>
</case_end>




<case_begin>
<index>
case name: mixerVessel2DMRF
case domain: multiphase
case category: RAS
case solver: driftFluxFoam
</index>


<directory_structure>
<dir>directory name: 0. File names in this directory: [epsilon, U, alpha.sludge, k, nut, p_rgh]</dir>
<dir>directory name: system. File names in this directory: [fvSolution, controlDict, fvSchemes, blockMeshDict]</dir>
<dir>directory name: constant. File names in this directory: [phaseProperties, g, physicalProperties.water, MRFProperties, momentumTransport, physicalProperties.sludge]</dir>
</directory_structure>


<allrun_script>
#!/bin/sh
cd ${0%/*} || exit 1    # Run from this directory

# Source tutorial run functions
. $WM_PROJECT_DIR/bin/tools/RunFunctions

application=$(getApplication)

runApplication blockMesh -dict $FOAM_TUTORIALS/resources/blockMesh/mixerVessel2D
runApplication $application

#------------------------------------------------------------------------------

</allrun_script>
</case_end>




<case_begin>
<index>
case name: tank3D
case domain: multiphase
case category: RAS
case solver: driftFluxFoam
</index>


<directory_structure>
<dir>directory name: 0. File names in this directory: [epsilon, U, alpha.sludge, k, nut, p_rgh]</dir>
<dir>directory name: system. File names in this directory: [fvSolution, controlDict, fvSchemes]</dir>
<dir>directory name: constant. File names in this directory: [phaseProperties, g, physicalProperties.water, momentumTransport, physicalProperties.sludge]</dir>
</directory_structure>


<allrun_script>
#!/bin/sh
cd ${0%/*} || exit 1    # Run from this directory

# Source tutorial run functions
. $WM_PROJECT_DIR/bin/tools/RunFunctions

application=$(getApplication)

runApplication $application

#------------------------------------------------------------------------------

</allrun_script>
</case_end>




<case_begin>
<index>
case name: throttle3D
case domain: multiphase
case category: LES
case solver: cavitatingFoam
</index>


<directory_structure>
<dir>directory name: 0. File names in this directory: [U, p, k, alpha.vapour, nut, rho]</dir>
<dir>directory name: system. File names in this directory: [fvSolution, topoSetDict.3, decomposeParDict, controlDict, mapFieldsDict, topoSetDict.2, topoSetDict.1, fvSchemes, refineMeshDict, blockMeshDict]</dir>
<dir>directory name: constant. File names in this directory: [thermodynamicProperties, phaseProperties, physicalProperties.vapour, physicalProperties.water, momentumTransport]</dir>
</directory_structure>


<allrun_script>
#!/bin/sh
cd ${0%/*} || exit 1    # Run from this directory

# Source tutorial run functions
. $WM_PROJECT_DIR/bin/tools/RunFunctions

# Set application name
application=$(getApplication)

refineMeshByCellSet()
{
   while [ $# -ge 1 ]
   do
      if [ ! -e log.refineMesh.$1 ]
      then
          echo "Creating cell set for primary zone - $1"
          cp system/topoSetDict.$1 system/topoSetDict
          topoSet > log.topoSet.$1 2>&1

          echo "Refining primary zone - $1"
          refineMesh -dict refineMeshDict -overwrite \
              > log.refineMesh.$1 2>&1
      fi
      shift
   done
}

runApplication blockMesh
refineMeshByCellSet 1 2 3

#echo "mapping fields from 2D throttle case"
#runApplication mapFields ../throttle -sourceTime latestTime

runApplication decomposePar
runParallel $application
runApplication reconstructPar

#------------------------------------------------------------------------------

</allrun_script>
</case_end>




<case_begin>
<index>
case name: throttle
case domain: multiphase
case category: LES
case solver: cavitatingFoam
</index>


<directory_structure>
<dir>directory name: 0. File names in this directory: [U, p, k, alpha.vapour, nut, rho]</dir>
<dir>directory name: system. File names in this directory: [fvSolution, topoSetDict.3, controlDict, topoSetDict.2, topoSetDict.1, fvSchemes, refineMeshDict, blockMeshDict]</dir>
<dir>directory name: constant. File names in this directory: [thermodynamicProperties, phaseProperties, physicalProperties.vapour, physicalProperties.water, momentumTransport]</dir>
</directory_structure>


<allrun_script>
#!/bin/sh
cd ${0%/*} || exit 1    # Run from this directory

# Source tutorial run functions
. $WM_PROJECT_DIR/bin/tools/RunFunctions

# Set application name
application=$(getApplication)

refineMeshByCellSet()
{
   while [ $# -ge 1 ]
   do
      if [ ! -e log.refineMesh.$1 ]
      then
          echo "Creating cell set for primary zone - $1"
          cp system/topoSetDict.$1 system/topoSetDict
          topoSet > log.topoSet.$1 2>&1

          echo "Refining primary zone - $1"
          refineMesh -dict refineMeshDict -overwrite \
              > log.refineMesh.$1 2>&1
      fi
      shift
   done
}

runApplication blockMesh
refineMeshByCellSet 1 2 3
runApplication $application

#------------------------------------------------------------------------------

</allrun_script>
</case_end>




<case_begin>
<index>
case name: throttle
case domain: multiphase
case category: RAS
case solver: cavitatingFoam
</index>


<directory_structure>
<dir>directory name: 0. File names in this directory: [U, omega, p, k, alpha.vapour, nut, rho]</dir>
<dir>directory name: system. File names in this directory: [fvSolution, topoSetDict.3, controlDict, topoSetDict.2, topoSetDict.1, fvSchemes, refineMeshDict, blockMeshDict]</dir>
<dir>directory name: constant. File names in this directory: [thermodynamicProperties, phaseProperties, physicalProperties.vapour, physicalProperties.water, momentumTransport]</dir>
</directory_structure>


<allrun_script>
#!/bin/sh
cd ${0%/*} || exit 1    # Run from this directory

# Source tutorial run functions
. $WM_PROJECT_DIR/bin/tools/RunFunctions

application=$(getApplication)

refineMeshByCellSet()
{
   while [ $# -ge 1 ]
   do
      if [ ! -e log.refineMesh.$1 ]
      then
          echo "Creating cell set for primary zone - $1"
          cp system/topoSetDict.$1 system/topoSetDict
          topoSet > log.topoSet.$1 2>&1

          echo "Refining primary zone - $1"
          refineMesh -dict refineMeshDict -overwrite \
              > log.refineMesh.$1 2>&1
      fi
      shift
   done
}

runApplication blockMesh
refineMeshByCellSet 1 2 3
runApplication $application

#------------------------------------------------------------------------------

</allrun_script>
</case_end>




<case_begin>
<index>
case name: bubbleColumn
case domain: multiphase
case category: LES
case solver: multiphaseEulerFoam
</index>


<directory_structure>
<dir>directory name: 0. File names in this directory: [alpha.air.orig, alphat.water, nut.water, alpha.water.orig, T.air, k.water, T.water, epsilon.air, U.water, p, nut.air, k.air, p_rgh, epsilon.water, U.air, alphat.air]</dir>
<dir>directory name: system. File names in this directory: [fvSolution, controlDict, fvConstraints, fvSchemes, setFieldsDict, blockMeshDict]</dir>
<dir>directory name: constant. File names in this directory: [physicalProperties.air, phaseProperties, g, physicalProperties.water, momentumTransport.water, momentumTransport.air]</dir>
</directory_structure>


<allrun_script>
#!/bin/sh
cd ${0%/*} || exit 1    # Run from this directory

# Source tutorial run functions
. $WM_PROJECT_DIR/bin/tools/RunFunctions

runApplication blockMesh
runApplication setFields
runApplication $(getApplication)

#------------------------------------------------------------------------------

</allrun_script>
</case_end>




<case_begin>
<index>
case name: bubbleColumn
case domain: multiphase
case category: RAS
case solver: multiphaseEulerFoam
</index>


<directory_structure>
<dir>directory name: 0. File names in this directory: [alpha.air.orig, alphat.water, nut.water, alpha.water.orig, T.air, k.water, T.water, epsilon.air, U.water, p, nut.air, k.air, p_rgh, km, epsilon.water, U.air, epsilonm, alphat.air]</dir>
<dir>directory name: system. File names in this directory: [fvSolution, controlDict, fvConstraints, fvSchemes, setFieldsDict, blockMeshDict]</dir>
<dir>directory name: constant. File names in this directory: [physicalProperties.air, phaseProperties, g, physicalProperties.water, momentumTransport.water, momentumTransport.air]</dir>
</directory_structure>


<allrun_script>
#!/bin/sh
cd ${0%/*} || exit 1    # Run from this directory

# Source tutorial run functions
. $WM_PROJECT_DIR/bin/tools/RunFunctions

runApplication blockMesh
runApplication setFields
runApplication $(getApplication)

#------------------------------------------------------------------------------

</allrun_script>
</case_end>




<case_begin>
<index>
case name: bubbleColumnEvaporatingReacting
case domain: multiphase
case category: RAS
case solver: multiphaseEulerFoam
</index>


<directory_structure>
<dir>directory name: 0. File names in this directory: [alphat.gas, alpha.liquid.orig, T.liquid, U.liquid, CO.gas, nut.gas, Ydefault.gas, p, H2O.gas, epsilon.gas, T.gas, alpha.gas.orig, p_rgh, U.gas, AIR.gas, k.gas]</dir>
<dir>directory name: system. File names in this directory: [fvSolution, decomposeParDict, controlDict, fvConstraints, fvSchemes, setFieldsDict, blockMeshDict]</dir>
<dir>directory name: constant. File names in this directory: [momentumTransport.liquid, reactions.gas, momentumTransport.gas, chemistryProperties.gas, phaseProperties, combustionProperties.gas, g, physicalProperties.liquid, physicalProperties.gas, thermo.gas]</dir>
</directory_structure>


<allrun_script>
#!/bin/sh
cd ${0%/*} || exit 1    # Run from this directory

# Source tutorial run functions
. $WM_PROJECT_DIR/bin/tools/RunFunctions

runApplication blockMesh
runApplication setFields
runApplication $(getApplication)

#------------------------------------------------------------------------------

</allrun_script>
</case_end>




<case_begin>
<index>
case name: Grossetete
case domain: multiphase
case category: RAS
case solver: multiphaseEulerFoam
</index>


<directory_structure>
<dir>directory name: 0. File names in this directory: [k.liquid, alphat.gas, nut.liquid, epsilon.liquid, T.liquid, U.liquid, nut.gas, alphat.liquid, p, omega.liquid, alpha.liquid, epsilon.gas, T.gas, p_rgh, alpha.gas, U.gas, k.gas]</dir>
<dir>directory name: system. File names in this directory: [fvSolution, extrudeMeshDict, controlDict, fvConstraints, fvSchemes, blockMeshDict]</dir>
<dir>directory name: validation. File names in this directory: [createGraphs]</dir>
<dir>directory name: constant. File names in this directory: [momentumTransport.liquid, momentumTransport.gas, phaseProperties, g, physicalProperties.liquid, physicalProperties.gas]</dir>
</directory_structure>


<allrun_script>
#!/bin/sh
cd ${0%/*} || exit 1    # run from this directory

# Source tutorial run functions
. $WM_PROJECT_DIR/bin/tools/RunFunctions

application=`getApplication`

runApplication blockMesh
runApplication extrudeMesh
runApplication $application
( cd validation && ./createGraphs )

#------------------------------------------------------------------------------

</allrun_script>
</case_end>




<case_begin>
<index>
case name: wallBoiling
case domain: multiphase
case category: RAS
case solver: multiphaseEulerFoam
</index>


<directory_structure>
<dir>directory name: 0. File names in this directory: [k.liquid, alphat.gas, nut.liquid, epsilon.liquid, T.liquid, omega.gas, U.liquid, nut.gas, alphat.liquid, p, omega.liquid, alpha.liquid, epsilon.gas, T.gas, p_rgh, alpha.gas, U.gas, k.gas]</dir>
<dir>directory name: system. File names in this directory: [fvSolution, extrudeMeshDict, decomposeParDict, fvConstraints, fvSchemes, controlDict.orig, blockMeshDict]</dir>
<dir>directory name: validation. File names in this directory: [createGraphs]</dir>
<dir>directory name: constant. File names in this directory: [momentumTransport.liquid, momentumTransport.gas, phaseProperties, g, thermophysicalTransport.gas, physicalProperties.liquid, physicalProperties.gas, thermophysicalTransport.liquid]</dir>
</directory_structure>


<allrun_script>
#!/bin/sh
cd ${0%/*} || exit 1    # run from this directory

# Source tutorial run functions
. $WM_PROJECT_DIR/bin/tools/RunFunctions

runApplication blockMesh
runApplication extrudeMesh
runApplication decomposePar

runParallel $(getApplication)

if ! isTest "$@"
then
    runApplication -a foamDictionary system/controlDict -entry endTime -set 4
    runApplication -a foamDictionary system/controlDict -entry startTime -set 0.5
    runParallel -a foamDictionary 0.5/T.liquid -entry boundaryField/wall/q -set "uniform 73890"
    runParallel -a foamDictionary 0.5/U.liquid -entry boundaryField/inlet/type -set "fixedValue"
    runParallel -a $(getApplication)
fi

runApplication reconstructPar -latestTime
runApplication postProcess -latestTime -func "
    graphCell
    (
        funcName=graph,
        start=(3.4901 0 0),
        end=(3.4901 0.0096 0),
        fields=(alpha.gas T.liquid T.gas)
    )"

./validation/createGraphs

#------------------------------------------------------------------------------

</allrun_script>
</case_end>




<case_begin>
<index>
case name: fluidisedBed
case domain: multiphase
case category: RAS
case solver: multiphaseEulerFoam
</index>


<directory_structure>
<dir>directory name: 0. File names in this directory: [alpha.air.orig, nut.particles, T.air, T.particles, epsilon.air, U.particles, alphat.particles, Theta.particles, p, nut.air, k.air, alpha.particles.orig, p_rgh, U.air, alphat.air]</dir>
<dir>directory name: system. File names in this directory: [fvSolution, decomposeParDict, controlDict, fvConstraints, fvSchemes, setFieldsDict, blockMeshDict]</dir>
<dir>directory name: constant. File names in this directory: [physicalProperties.air, physicalProperties.particles, phaseProperties, g, momentumTransport.particles, momentumTransport.air]</dir>
</directory_structure>


<allrun_script>
#!/bin/sh
cd ${0%/*} || exit 1    # Run from this directory

# Source tutorial run functions
. $WM_PROJECT_DIR/bin/tools/RunFunctions

runApplication blockMesh
runApplication setFields
runApplication decomposePar
runParallel $(getApplication)
runApplication reconstructPar

#------------------------------------------------------------------------------

</allrun_script>
</case_end>




<case_begin>
<index>
case name: bubblePipe
case domain: multiphase
case category: RAS
case solver: multiphaseEulerFoam
</index>


<directory_structure>
<dir>directory name: 0. File names in this directory: [U.air1, alphat.water, T.air1, nut.water, T.air2, k.water, T.water, U.water, alpha.air2, U.air2, f.air1, p, f.air2, alpha.water, omega.water, p_rgh, alpha.air1]</dir>
<dir>directory name: system. File names in this directory: [fvSolution, decomposeParDict, topoSetDict, controlDict, fvConstraints, fvSchemes, blockMeshDict]</dir>
<dir>directory name: validation. File names in this directory: [createGraphs]</dir>
<dir>directory name: constant. File names in this directory: [fvModels, momentumTransport.air1, phaseProperties, g, physicalProperties.water, physicalProperties.air1, physicalProperties.air2, momentumTransport.water, momentumTransport.air2]</dir>
</directory_structure>


<allrun_script>
#!/bin/sh

# Run from this directory
cd "${0%/*}" || exit 1

# Source run functions
. "$WM_PROJECT_DIR/bin/tools/RunFunctions"

# Run case
runApplication blockMesh
runApplication topoSet
runApplication decomposePar
runParallel    $(getApplication)
runApplication reconstructPar

( cd validation && ./createGraphs )

#------------------------------------------------------------------------------

</allrun_script>
</case_end>




<case_begin>
<index>
case name: pipeBend
case domain: multiphase
case category: RAS
case solver: multiphaseEulerFoam
</index>


<directory_structure>
<dir>directory name: 0. File names in this directory: [alphat.water, nut.water, nut.particles, T.particles, k.water, T.water, U.water, U.particles, alphat.particles, alpha.particles, p, alpha.water, f.particles, p_rgh, epsilon.water]</dir>
<dir>directory name: system. File names in this directory: [fvSolution, decomposeParDict, topoSetDict, controlDict, fvSchemes, blockMeshDict]</dir>
<dir>directory name: validation. File names in this directory: [createGraphs]</dir>
<dir>directory name: constant. File names in this directory: [physicalProperties.particles, phaseProperties, g, physicalProperties.water, momentumTransport.particles, momentumTransport.water]</dir>
</directory_structure>


<allrun_script>
#!/bin/sh
cd ${0%/*} || exit 1    # Run from this directory

# Source run functions
. $WM_PROJECT_DIR/bin/tools/RunFunctions

# Mesh
runApplication blockMesh
runApplication topoSet

# Run
runApplication decomposePar
runParallel $(getApplication)
runApplication reconstructPar -latestTime

# Post-process
runApplication postProcess -func "
    graphLayerAverage
    (
        funcName=graphCrossSection,
        patches=(inlet),
        axis=distance,
        d.particles
    )
    " -latestTime
cd validation && ./createGraphs

#------------------------------------------------------------------------------

</allrun_script>
</case_end>




<case_begin>
<index>
case name: wallBoilingIATE
case domain: multiphase
case category: RAS
case solver: multiphaseEulerFoam
</index>


<directory_structure>
<dir>directory name: 0. File names in this directory: [k.liquid, alphat.gas, nut.liquid, epsilon.liquid, T.liquid, U.liquid, nut.gas, kappai.gas, alphat.liquid, p, omega.liquid, alpha.liquid, epsilon.gas, T.gas, p_rgh, alpha.gas, U.gas, k.gas]</dir>
<dir>directory name: system. File names in this directory: [fvSolution, extrudeMeshDict, decomposeParDict, fvConstraints, fvSchemes, controlDict.orig, blockMeshDict]</dir>
<dir>directory name: validation. File names in this directory: [createGraphs]</dir>
<dir>directory name: constant. File names in this directory: [momentumTransport.liquid, momentumTransport.gas, phaseProperties, g, thermophysicalTransport.gas, physicalProperties.liquid, physicalProperties.gas, thermophysicalTransport.liquid]</dir>
</directory_structure>


<allrun_script>
#!/bin/sh
cd ${0%/*} || exit 1    # run from this directory

# Source tutorial run functions
. $WM_PROJECT_DIR/bin/tools/RunFunctions

runApplication blockMesh
runApplication extrudeMesh
runApplication decomposePar

runParallel $(getApplication)

if ! isTest "$@"
then
    runApplication -a foamDictionary system/controlDict -entry endTime -set 4
    runApplication -a foamDictionary system/controlDict -entry startTime -set 0.5
    runParallel -a foamDictionary 0.5/T.liquid -entry boundaryField/wall/q -set "uniform 73890"
    runParallel -a foamDictionary 0.5/U.liquid -entry boundaryField/inlet/type -set "fixedValue"
    runParallel -a $(getApplication)
fi

runApplication reconstructPar -latestTime
runApplication postProcess -latestTime -func "
    graphCell
    (
        funcName=graph,
        start=(3.4901 0 0),
        end=(3.4901 0.0096 0),
        fields=(alpha.gas T.liquid T.gas d.gas)
    )"

./validation/createGraphs

#------------------------------------------------------------------------------

</allrun_script>
</case_end>




<case_begin>
<index>
case name: wallBoilingPolydisperse
case domain: multiphase
case category: RAS
case solver: multiphaseEulerFoam
</index>


<directory_structure>
<dir>directory name: 0. File names in this directory: [k.liquid, alphat.gas, nut.liquid, epsilon.liquid, T.liquid, omega.gas, U.liquid, nut.gas, alphat.liquid, p, omega.liquid, alpha.liquid, f.gas, epsilon.gas, T.gas, p_rgh, alpha.gas, U.gas, k.gas]</dir>
<dir>directory name: system. File names in this directory: [fvSolution, extrudeMeshDict, decomposeParDict, topoSetDict, fvConstraints, fvSchemes, controlDict.orig, blockMeshDict]</dir>
<dir>directory name: validation. File names in this directory: [createGraphs]</dir>
<dir>directory name: constant. File names in this directory: [momentumTransport.liquid, momentumTransport.gas, phaseProperties, g, thermophysicalTransport.gas, physicalProperties.liquid, physicalProperties.gas, thermophysicalTransport.liquid]</dir>
</directory_structure>


<allrun_script>
#!/bin/sh
cd ${0%/*} || exit 1    # run from this directory

# Source tutorial run functions
. $WM_PROJECT_DIR/bin/tools/RunFunctions

runApplication blockMesh
runApplication extrudeMesh
runApplication topoSet
runApplication decomposePar

runParallel $(getApplication)

if ! isTest "$@"
then
    runApplication -a foamDictionary system/controlDict -entry endTime -set 4
    runApplication -a foamDictionary system/controlDict -entry startTime -set 0.5
    runParallel -a foamDictionary 0.5/T.liquid -entry boundaryField/wall/q -set "uniform 73890"
    runParallel -a foamDictionary 0.5/U.liquid -entry boundaryField/inlet/type -set "fixedValue"
    runParallel -a $(getApplication)
fi

runApplication reconstructPar -latestTime
runApplication postProcess -latestTime -func "
    graphCell
    (
        funcName=graph,
        start=(3.4901 0 0),
        end=(3.4901 0.0096 0),
        fields=(alpha.gas T.liquid T.gas d.gas)
    )"

./validation/createGraphs

#------------------------------------------------------------------------------

</allrun_script>
</case_end>




<case_begin>
<index>
case name: wallBoilingPolydisperseTwoGroups
case domain: multiphase
case category: RAS
case solver: multiphaseEulerFoam
</index>


<directory_structure>
<dir>directory name: 0. File names in this directory: [epsilon.gas2, k.liquid, alphat.gas, alpha.gas2, nut.liquid, f.gas2, epsilon.liquid, k.gas2, nut.gas2, T.liquid, alphat.gas2, omega.gas, U.liquid, nut.gas, T.gas2, alphat.liquid, p, omega.liquid, alpha.liquid, f.gas, epsilon.gas, T.gas, U.gas2, p_rgh, alpha.gas, U.gas, omega.gas2, k.gas]</dir>
<dir>directory name: system. File names in this directory: [fvSolution, extrudeMeshDict, decomposeParDict, topoSetDict, fvConstraints, fvSchemes, controlDict.orig, blockMeshDict]</dir>
<dir>directory name: validation. File names in this directory: [createGraphs]</dir>
<dir>directory name: constant. File names in this directory: [momentumTransport.liquid, momentumTransport.gas2, momentumTransport.gas, phaseProperties, physicalProperties.gas2, g, thermophysicalTransport.gas2, thermophysicalTransport.gas, physicalProperties.liquid, physicalProperties.gas, thermophysicalTransport.liquid]</dir>
</directory_structure>


<allrun_script>
#!/bin/sh
cd ${0%/*} || exit 1    # run from this directory

# Source tutorial run functions
. $WM_PROJECT_DIR/bin/tools/RunFunctions

runApplication blockMesh
runApplication extrudeMesh
runApplication topoSet
runApplication decomposePar

runParallel $(getApplication)

if ! isTest "$@"
then
    runApplication -a foamDictionary system/controlDict -entry endTime -set 4
    runApplication -a foamDictionary system/controlDict -entry startTime -set 0.5
    runParallel -a foamDictionary 0.5/T.liquid -entry boundaryField/wall/q -set "uniform 73890"
    runParallel -a foamDictionary 0.5/U.liquid -entry boundaryField/inlet/type -set "fixedValue"
    runParallel -a $(getApplication)
fi

runApplication reconstructPar -latestTime
runApplication postProcess -latestTime -func "
    graphCell
    (
        funcName=graph,
        start=(3.4901 0 0),
        end=(3.4901 0.0096 0),
        fields=(alpha.gas alpha.gas2 alpha.liquid T.liquid T.gas d.bubbles)
    )"

./validation/createGraphs

#------------------------------------------------------------------------------

</allrun_script>
</case_end>




<case_begin>
<index>
case name: bubbleColumn
case domain: multiphase
case category: laminar
case solver: multiphaseEulerFoam
</index>


<directory_structure>
<dir>directory name: 0. File names in this directory: [alpha.air.orig, alpha.water.orig, T.air, T.water, U.water, p, p_rgh, U.air]</dir>
<dir>directory name: system. File names in this directory: [fvSolution, controlDict, fvConstraints, fvSchemes, setFieldsDict, blockMeshDict]</dir>
<dir>directory name: constant. File names in this directory: [physicalProperties.air, phaseProperties, g, physicalProperties.water, momentumTransport.water, momentumTransport.air]</dir>
</directory_structure>


<allrun_script>
#!/bin/sh
cd ${0%/*} || exit 1    # Run from this directory

# Source tutorial run functions
. $WM_PROJECT_DIR/bin/tools/RunFunctions

runApplication blockMesh
runApplication setFields
runApplication $(getApplication)

#------------------------------------------------------------------------------

</allrun_script>
</case_end>




<case_begin>
<index>
case name: bubbleColumnEvaporating
case domain: multiphase
case category: laminar
case solver: multiphaseEulerFoam
</index>


<directory_structure>
<dir>directory name: 0. File names in this directory: [air.gas, alpha.liquid.orig, H2O.liquid, T.liquid, U.liquid, CO.gas, p, H2O.gas, T.gas, Ydefault, air.liquid, alpha.gas.orig, p_rgh, U.gas]</dir>
<dir>directory name: system. File names in this directory: [fvSolution, continuityFunctions, decomposeParDict, controlDict, fvConstraints, fvSchemes, setFieldsDict, blockMeshDict]</dir>
<dir>directory name: constant. File names in this directory: [momentumTransport.liquid, momentumTransport.gas, phaseProperties, g, physicalProperties.liquid, physicalProperties.gas]</dir>
</directory_structure>


<allrun_script>
#!/bin/sh
cd ${0%/*} || exit 1    # Run from this directory

# Source tutorial run functions
. $WM_PROJECT_DIR/bin/tools/RunFunctions

runApplication blockMesh
runApplication setFields
runApplication $(getApplication)

#------------------------------------------------------------------------------

</allrun_script>
</case_end>




<case_begin>
<index>
case name: damBreak4phase
case domain: multiphase
case category: laminar
case solver: multiphaseEulerFoam
</index>


<directory_structure>
<dir>directory name: 0. File names in this directory: [alpha.air.orig, alpha.mercury.orig, U.oil, alpha.water.orig, T.air, U, T.water, U.water, T.mercury, T.oil, U.mercury, alpha.oil.orig, p, p_rgh, U.air]</dir>
<dir>directory name: system. File names in this directory: [fvSolution, decomposeParDict, controlDict, fvConstraints, fvSchemes, fineBlockMeshDict, setFieldsDict, blockMeshDict]</dir>
<dir>directory name: constant. File names in this directory: [physicalProperties.mercury, physicalProperties.air, phaseProperties, g, physicalProperties.water, momentumTransport.mercury, momentumTransport, momentumTransport.oil, momentumTransport.water, momentumTransport.air, physicalProperties.oil]</dir>
</directory_structure>


<allrun_script>
#!/bin/sh
cd ${0%/*} || exit 1    # Run from this directory

# Source tutorial run functions
. $WM_PROJECT_DIR/bin/tools/RunFunctions

# Set application name
application=$(getApplication)

runApplication blockMesh
runApplication setFields
runApplication $application

#------------------------------------------------------------------------------

</allrun_script>
</case_end>




<case_begin>
<index>
case name: titaniaSynthesisSurface
case domain: multiphase
case category: laminar
case solver: multiphaseEulerFoam
</index>


<directory_structure>
<dir>directory name: 0. File names in this directory: [T.vapor, Ydefault.particles.orig, T.particles, U.particles, Ydefault.vapor.orig, p, U.vapor, f.particles, alpha.particles.orig, Ar.vapor.orig, TiCl4.vapor.orig, p_rgh, O2.vapor.orig, TiO2.particles.orig, alpha.vapor.orig]</dir>
<dir>directory name: system. File names in this directory: [fvSolution, decomposeParDict, topoSetDict, controlDict, fvConstraints, fvSchemes, blockMeshDict]</dir>
<dir>directory name: validation. File names in this directory: [createGraphs]</dir>
<dir>directory name: constant. File names in this directory: [thermo.vapor, physicalProperties.particles, phaseProperties, g, reactions.vapor, combustionProperties.vapor, chemistryProperties.vapor, momentumTransport.vapor, physicalProperties.vapor, momentumTransport.particles]</dir>
</directory_structure>


<allrun_script>
#!/bin/sh
cd ${0%/*} || exit 1    # run from this directory

# Source tutorial run functions
. $WM_PROJECT_DIR/bin/tools/RunFunctions

# Set application name
application=$(getApplication)

runApplication blockMesh -dict $FOAM_TUTORIALS/resources/blockMesh/titaniaSynthesis
runApplication topoSet
runApplication decomposePar
runParallel    $application
runApplication reconstructPar

( cd validation && ./createGraphs )

#------------------------------------------------------------------------------

</allrun_script>
</case_end>




<case_begin>
<index>
case name: mixerVessel2DMRF
case domain: multiphase
case category: laminar
case solver: multiphaseEulerFoam
</index>


<directory_structure>
<dir>directory name: 0. File names in this directory: [alpha.oil, U.oil, T.air, alpha.mercury, T.water, U.water, T.mercury, T.oil, U.mercury, p, alpha.water, alpha.air, p_rgh, U.air]</dir>
<dir>directory name: system. File names in this directory: [fvSolution, controlDict, fvSchemes, blockMeshDict]</dir>
<dir>directory name: constant. File names in this directory: [physicalProperties.mercury, physicalProperties.air, phaseProperties, g, physicalProperties.water, MRFProperties, momentumTransport.mercury, momentumTransport.oil, momentumTransport.water, momentumTransport.air, physicalProperties.oil]</dir>
</directory_structure>


<allrun_script>
#!/bin/sh
cd ${0%/*} || exit 1    # Run from this directory

# Source tutorial run functions
. $WM_PROJECT_DIR/bin/tools/RunFunctions

application=$(getApplication)

runApplication blockMesh -dict $FOAM_TUTORIALS/resources/blockMesh/mixerVessel2D
runApplication $application

#------------------------------------------------------------------------------

</allrun_script>
</case_end>




<case_begin>
<index>
case name: bubbleColumnIATE
case domain: multiphase
case category: laminar
case solver: multiphaseEulerFoam
</index>


<directory_structure>
<dir>directory name: 0. File names in this directory: [kappai.air, alpha.air.orig, alpha.water.orig, T.air, T.water, U.water, p, p_rgh, U.air]</dir>
<dir>directory name: system. File names in this directory: [fvSolution, controlDict, fvConstraints, fvSchemes, setFieldsDict, blockMeshDict]</dir>
<dir>directory name: constant. File names in this directory: [physicalProperties.air, phaseProperties, g, physicalProperties.water, momentumTransport.water, momentumTransport.air]</dir>
</directory_structure>


<allrun_script>
#!/bin/sh
cd ${0%/*} || exit 1    # Run from this directory

# Source tutorial run functions
. $WM_PROJECT_DIR/bin/tools/RunFunctions

runApplication blockMesh
runApplication setFields
runApplication $(getApplication)

#------------------------------------------------------------------------------

</allrun_script>
</case_end>




<case_begin>
<index>
case name: injection
case domain: multiphase
case category: laminar
case solver: multiphaseEulerFoam
</index>


<directory_structure>
<dir>directory name: 0. File names in this directory: [alpha.air.orig, alpha.water.orig, T.air, T.water, U.water, p, p_rgh, U.air]</dir>
<dir>directory name: system. File names in this directory: [fvSolution, controlDict, fvConstraints, fvSchemes, setFieldsDict, blockMeshDict]</dir>
<dir>directory name: constant. File names in this directory: [physicalProperties.air, fvModels, phaseProperties, g, physicalProperties.water, momentumTransport.water, momentumTransport.air]</dir>
</directory_structure>


<allrun_script>
#!/bin/sh
cd ${0%/*} || exit 1    # Run from this directory

# Source tutorial run functions
. $WM_PROJECT_DIR/bin/tools/RunFunctions

runApplication blockMesh
runApplication setFields
runApplication $(getApplication)

#------------------------------------------------------------------------------

</allrun_script>
</case_end>




<case_begin>
<index>
case name: fluidisedBed
case domain: multiphase
case category: laminar
case solver: multiphaseEulerFoam
</index>


<directory_structure>
<dir>directory name: 0. File names in this directory: [alpha.air.orig, nut.particles, T.air, T.particles, epsilon.air, U.particles, alphat.particles, Theta.particles, p, nut.air, k.air, alpha.particles.orig, p_rgh, U.air]</dir>
<dir>directory name: system. File names in this directory: [fvSolution, controlDict, fvConstraints, fvSchemes, setFieldsDict, blockMeshDict]</dir>
<dir>directory name: constant. File names in this directory: [physicalProperties.air, physicalProperties.particles, phaseProperties, g, momentumTransport.particles, momentumTransport.air]</dir>
</directory_structure>


<allrun_script>
#!/bin/sh
cd ${0%/*} || exit 1    # Run from this directory

# Source tutorial run functions
. $WM_PROJECT_DIR/bin/tools/RunFunctions

runApplication blockMesh
runApplication setFields
runApplication $(getApplication)

#------------------------------------------------------------------------------

</allrun_script>
</case_end>




<case_begin>
<index>
case name: bubbleColumnEvaporatingDissolving
case domain: multiphase
case category: laminar
case solver: multiphaseEulerFoam
</index>


<directory_structure>
<dir>directory name: 0. File names in this directory: [air.gas, alpha.liquid.orig, water.gas, T.liquid, U.liquid, p, water.liquid, T.gas, air.liquid, alpha.gas.orig, p_rgh, U.gas]</dir>
<dir>directory name: system. File names in this directory: [fvSolution, controlDict, fvConstraints, fvSchemes, setFieldsDict, blockMeshDict]</dir>
<dir>directory name: constant. File names in this directory: [momentumTransport.liquid, momentumTransport.gas, phaseProperties, g, physicalProperties.liquid, physicalProperties.gas]</dir>
</directory_structure>


<allrun_script>
#!/bin/sh
cd ${0%/*} || exit 1    # Run from this directory

# Source tutorial run functions
. $WM_PROJECT_DIR/bin/tools/RunFunctions

runApplication blockMesh
runApplication setFields
runApplication $(getApplication)

#------------------------------------------------------------------------------

</allrun_script>
</case_end>




<case_begin>
<index>
case name: bed
case domain: multiphase
case category: laminar
case solver: multiphaseEulerFoam
</index>


<directory_structure>
<dir>directory name: 0. File names in this directory: [T.solid, alpha.air.orig, alpha.water.orig, T.air, alpha.solid.orig, T.water, U.water, p, p_rgh, U.air]</dir>
<dir>directory name: system. File names in this directory: [fvSolution, controlDict, fvConstraints, fvSchemes, setFieldsDict, blockMeshDict]</dir>
<dir>directory name: constant. File names in this directory: [physicalProperties.air, fvModels, physicalProperties.solid, phaseProperties, g, physicalProperties.water, momentumTransport.water, momentumTransport.air]</dir>
</directory_structure>


<allrun_script>
#!/bin/sh
cd ${0%/*} || exit 1    # Run from this directory

# Source tutorial run functions
. $WM_PROJECT_DIR/bin/tools/RunFunctions

runApplication blockMesh
runApplication setFields
runApplication $(getApplication)

#------------------------------------------------------------------------------

</allrun_script>
</case_end>




<case_begin>
<index>
case name: titaniaSynthesis
case domain: multiphase
case category: laminar
case solver: multiphaseEulerFoam
</index>


<directory_structure>
<dir>directory name: 0. File names in this directory: [T.vapor, TiO2.vapor.orig, T.particles, U.particles, Cl2.vapor.orig, p, U.vapor, f.particles, alpha.particles.orig, Ar.vapor.orig, TiCl4.vapor.orig, p_rgh, O2.vapor.orig, TiO2.particles.orig, N2.vapor.orig, alpha.vapor.orig]</dir>
<dir>directory name: system. File names in this directory: [fvSolution, decomposeParDict, topoSetDict, controlDict, fvConstraints, fvSchemes, blockMeshDict]</dir>
<dir>directory name: validation. File names in this directory: [createGraphs]</dir>
<dir>directory name: constant. File names in this directory: [thermo.vapor, physicalProperties.particles, phaseProperties, g, reactions.vapor, combustionProperties.vapor, chemistryProperties.vapor, momentumTransport.vapor, physicalProperties.vapor, momentumTransport.particles]</dir>
</directory_structure>


<allrun_script>
#!/bin/sh
cd ${0%/*} || exit 1    # run from this directory

# Source tutorial run functions
. $WM_PROJECT_DIR/bin/tools/RunFunctions

# Set application name
application=$(getApplication)

runApplication blockMesh -dict $FOAM_TUTORIALS/resources/blockMesh/titaniaSynthesis
runApplication topoSet
runApplication decomposePar
runParallel    $application
runApplication reconstructPar

( cd validation && ./createGraphs )

#------------------------------------------------------------------------------

</allrun_script>
</case_end>




<case_begin>
<index>
case name: mixerVessel2D
case domain: multiphase
case category: laminar
case solver: multiphaseEulerFoam
</index>


<directory_structure>
<dir>directory name: 0. File names in this directory: [alpha.oil, U.oil, T.air, alpha.mercury, T.water, U.water, T.mercury, T.oil, U.mercury, p, alpha.water, alpha.air, p_rgh, U.air]</dir>
<dir>directory name: system. File names in this directory: [fvSolution, controlDict, fvSchemes, createBafflesDict, blockMeshDict]</dir>
<dir>directory name: constant. File names in this directory: [physicalProperties.mercury, physicalProperties.air, phaseProperties, dynamicMeshDict, g, physicalProperties.water, momentumTransport.mercury, momentumTransport.oil, momentumTransport.water, momentumTransport.air, physicalProperties.oil]</dir>
</directory_structure>


<allrun_script>
#!/bin/sh
cd ${0%/*} || exit 1    # Run from this directory

# Source tutorial run functions
. $WM_PROJECT_DIR/bin/tools/RunFunctions

application=$(getApplication)

runApplication blockMesh -dict $FOAM_TUTORIALS/resources/blockMesh/mixerVessel2D
runApplication createBaffles -overwrite
runApplication splitBaffles -overwrite
runApplication createNonConformalCouples -overwrite nonCouple1 nonCouple2

runApplication $application

#------------------------------------------------------------------------------

</allrun_script>
</case_end>




<case_begin>
<index>
case name: nozzleFlow2D
case domain: multiphase
case category: LES
case solver: interFoam
</index>


<directory_structure>
<dir>directory name: 0. File names in this directory: [U, nuTilda, k, nut, p_rgh, alpha.fuel]</dir>
<dir>directory name: system. File names in this directory: [fvSolution, controlDict, topoSetDict.2, topoSetDict.1, fvSchemes, refineMeshDict, blockMeshDict]</dir>
<dir>directory name: constant. File names in this directory: [physicalProperties.air, physicalProperties.fuel, phaseProperties, g, momentumTransport]</dir>
</directory_structure>


<allrun_script>
#!/bin/sh
cd ${0%/*} || exit 1    # Run from this directory

# Source tutorial run functions
. $WM_PROJECT_DIR/bin/tools/RunFunctions

# Get application name
application=$(getApplication)

runApplication blockMesh

for i in 1 2
do
    runApplication -s $i \
        topoSet -dict topoSetDict.${i}

    runApplication -s $i \
        refineMesh -dict refineMeshDict -overwrite
done

runApplication $application

#------------------------------------------------------------------------------

</allrun_script>
</case_end>




<case_begin>
<index>
case name: angledDuct
case domain: multiphase
case category: RAS
case solver: interFoam
</index>


<directory_structure>
<dir>directory name: 0. File names in this directory: [epsilon, U, k, alpha.water, nut, p_rgh]</dir>
<dir>directory name: system. File names in this directory: [fvSolution, controlDict, fvSchemes, blockMeshDict]</dir>
<dir>directory name: constant. File names in this directory: [physicalProperties.air, fvModels, phaseProperties, g, physicalProperties.water, momentumTransport]</dir>
</directory_structure>


<allrun_script>
#!/bin/sh
cd ${0%/*} || exit 1    # Run from this directory

# Source tutorial run functions
. $WM_PROJECT_DIR/bin/tools/RunFunctions

runApplication blockMesh -dict $FOAM_TUTORIALS/resources/blockMesh/angledDuct
runApplication $(getApplication)

</allrun_script>
</case_end>




<case_begin>
<index>
case name: planingHullW3
case domain: multiphase
case category: RAS
case solver: interFoam
</index>


<directory_structure>
<dir>directory name: 0. File names in this directory: [alpha.water.orig, U, omega, k, pointDisplacement, nut, p_rgh]</dir>
<dir>directory name: system. File names in this directory: [snappyHexMeshDict.2, surfaceFeaturesDict, meshQualityDict, fvSolution, decomposeParDict, controlDict, blockMeshDict.1, surfaces, topoSetDict.2, topoSetDict.1, fvSchemes, blockMeshDict.2, setFieldsDict, snappyHexMeshDict.1, refineMeshDict]</dir>
<dir>directory name: constant. File names in this directory: [physicalProperties.air, phaseProperties, dynamicMeshDict, g, physicalProperties.water, momentumTransport]</dir>
</directory_structure>


<allrun_script>
#!/bin/sh

usage () {
    exec 1>&2
    while [ "$#" -ge 1 ]; do echo "$1"; shift; done
    cat <<USAGE
Usage: ${0##*/} [OPTIONS]

Options:
  -i | -interface      no refinement in vertical direction of the mesh
  -l | -local          mesh with local refinement
  -h | -help           help

Ship hull simulation to demonstrate two different meshing strategies that can be
used with PLIC type schemes.

USAGE
    exit 1
}

meshType=0

# OPTIONS
while [ "$#" -gt 0 ]
do
    case "$1" in
    -i | -interface)
        meshType=1
        break
        ;;
    -l | -local)
        meshType=2
        break
        ;;
    -h | -help)
        usage
        ;;
    -test)
        shift
        ;;
    -*)
        usage "Invalid option '$1'"
        ;;
    *)
        usage "Invalid option '$1'"
        break
        ;;
    esac
done


# Run from this directory
cd "${0%/*}" || exit 1

# Source tutorial run functions
. "$WM_PROJECT_DIR/bin/tools/RunFunctions"

if [ $meshType -eq 0 ] || [ $meshType -eq 1 ]; then
{
    ./Allmesh.1
}
elif [$meshType -eq 2 ]; then
{
    ./Allmesh.2
}
fi

runApplication setFields

runApplication decomposePar

runParallel $(getApplication)

runApplication reconstructPar

#------------------------------------------------------------------------------

</allrun_script>
</case_end>




<case_begin>
<index>
case name: floatingObject
case domain: multiphase
case category: RAS
case solver: interFoam
</index>


<directory_structure>
<dir>directory name: 0. File names in this directory: [epsilon, alpha.water.orig, U, k, pointDisplacement, nut, p_rgh]</dir>
<dir>directory name: system. File names in this directory: [fvSolution, decomposeParDict, topoSetDict, controlDict, controlDict.sixDoF, fvSchemes, setFieldsDict, blockMeshDict]</dir>
<dir>directory name: constant. File names in this directory: [physicalProperties.air, phaseProperties, dynamicMeshDict, g, physicalProperties.water, momentumTransport, dynamicMeshDict.sixDoF]</dir>
</directory_structure>


<allrun_script>
#!/bin/sh
cd ${0%/*} || exit 1    # Run from this directory

# Source tutorial run functions
. $WM_PROJECT_DIR/bin/tools/RunFunctions

runApplication blockMesh
runApplication topoSet
runApplication subsetMesh -overwrite c0 -patch floatingObject -noFields
runApplication setFields
runApplication $(getApplication)

#------------------------------------------------------------------------------

</allrun_script>
</case_end>




<case_begin>
<index>
case name: damBreakPorousBaffle
case domain: multiphase
case category: RAS
case solver: interFoam
</index>


<directory_structure>
<dir>directory name: 0. File names in this directory: [k.orig, alpha.water.orig, nut.orig, epsilon.orig, nuTilda.orig, p_rgh.orig, U.orig]</dir>
<dir>directory name: system. File names in this directory: [fvSolution, topoSetDict, controlDict, fvSchemes, createBafflesDict, setFieldsDict, blockMeshDict]</dir>
<dir>directory name: constant. File names in this directory: [physicalProperties.air, phaseProperties, g, physicalProperties.water, momentumTransport]</dir>
</directory_structure>


<allrun_script>
#!/bin/sh
cd ${0%/*} || exit 1    # Run from this directory

# Source tutorial run functions
. $WM_PROJECT_DIR/bin/tools/RunFunctions

# Get application name
application=$(getApplication)

runApplication blockMesh
runApplication setFields

runApplication createBaffles -overwrite

runApplication $application

#------------------------------------------------------------------------------

</allrun_script>
</case_end>




<case_begin>
<index>
case name: weirOverflow
case domain: multiphase
case category: RAS
case solver: interFoam
</index>


<directory_structure>
<dir>directory name: 0. File names in this directory: [epsilon, alpha.water.orig, U, k, nut, p_rgh]</dir>
<dir>directory name: system. File names in this directory: [fvSolution, controlDict, fvSchemes, setFieldsDict, blockMeshDict]</dir>
<dir>directory name: constant. File names in this directory: [physicalProperties.air, phaseProperties, g, physicalProperties.water, momentumTransport]</dir>
</directory_structure>


<allrun_script>
#!/bin/sh

# Source tutorial run functions
. $WM_PROJECT_DIR/bin/tools/RunFunctions

runApplication blockMesh
runApplication setFields
runApplication $(getApplication)

#------------------------------------------------------------------------------

</allrun_script>
</case_end>




<case_begin>
<index>
case name: DTCHullWave
case domain: multiphase
case category: RAS
case solver: interFoam
</index>


<directory_structure>
<dir>directory name: 0. File names in this directory: [pointDisplacement.orig, k.orig, alpha.water.orig, omega.orig, nut.orig, p_rgh.orig, U.orig]</dir>
<dir>directory name: system. File names in this directory: [surfaceFeaturesDict, meshQualityDict, fvSolution, decomposeParDict, topoSetDict, controlDict, snappyHexMeshDict, setWavesDict, refineMeshDict.orig, fvSchemes, setFieldsDict, blockMeshDict]</dir>
<dir>directory name: constant. File names in this directory: [physicalProperties.air, waveProperties, phaseProperties, dynamicMeshDict, g, physicalProperties.water, momentumTransport, hRef]</dir>
</directory_structure>


<allrun_script>
#!/bin/sh
cd ${0%/*} || exit 1    # Run from this directory

# Source tutorial run functions
. $WM_PROJECT_DIR/bin/tools/RunFunctions

# Mesh if necessary
if ! isTest $@ || ! cloneMesh ../DTCHull . && ! cloneMesh ../DTCHullMoving .
then
    ./Allmesh
fi

runApplication setWaves

runApplication decomposePar

runParallel $(getApplication)

runApplication reconstructPar

#------------------------------------------------------------------------------

</allrun_script>
</case_end>




<case_begin>
<index>
case name: mixerVessel
case domain: multiphase
case category: RAS
case solver: interFoam
</index>


<directory_structure>
<dir>directory name: 0. File names in this directory: [epsilon, U, alpha.oil.orig, k, nut, p_rgh]</dir>
<dir>directory name: system. File names in this directory: [surfaceFeaturesDict, fvSolution, decomposeParDict, controlDict, snappyHexMeshDict, fvSchemes, createBafflesDict, setFieldsDict, blockMeshDict]</dir>
<dir>directory name: constant. File names in this directory: [phaseProperties, dynamicMeshDict, g, physicalProperties.water, momentumTransport, physicalProperties.oil]</dir>
</directory_structure>


<allrun_script>
#!/bin/sh
cd ${0%/*} || exit 1    # Run from this directory

# Source tutorial run functions
. $WM_PROJECT_DIR/bin/tools/RunFunctions

./Allmesh

# Copy the fields into the processor directories
runApplication -a decomposePar -fields -copyZero

# Initialise alpha
runParallel setFields

# Run
runParallel $(getApplication)

# Reconstruct
runApplication reconstructParMesh -constant
runApplication reconstructPar

#------------------------------------------------------------------------------

</allrun_script>
</case_end>




<case_begin>
<index>
case name: propeller
case domain: multiphase
case category: RAS
case solver: interFoam
</index>


<directory_structure>
<dir>directory name: 0. File names in this directory: [epsilon, U, k, alpha.water, nut, p_rgh]</dir>
<dir>directory name: system. File names in this directory: [surfaceFeaturesDict, fvSolution, decomposeParDict, controlDict, snappyHexMeshDict, fvSchemes, createBafflesDict, blockMeshDict]</dir>
<dir>directory name: constant. File names in this directory: [phaseProperties, physicalProperties.vapour, dynamicMeshDict, g, physicalProperties.water, momentumTransport, phaseChangeProperties]</dir>
</directory_structure>


<allrun_script>
#!/bin/sh
cd ${0%/*} || exit 1    # Run from this directory

# Source tutorial run functions
. $WM_PROJECT_DIR/bin/tools/RunFunctions

# Mesh if necessary
if ! cloneMesh ../../../incompressible/pimpleFoam/RAS/propeller .
then
    ./Allmesh
else
    runApplication decomposePar -noFields
fi

# Copy the fields into the processor directories
runApplication -a decomposePar -fields -copyZero

# Run
runParallel $(getApplication)

# Reconstruct
runApplication reconstructParMesh -constant
runApplication reconstructPar

#------------------------------------------------------------------------------

</allrun_script>
</case_end>




<case_begin>
<index>
case name: damBreak
case domain: multiphase
case category: damBreak
case solver: interFoam
</index>


<directory_structure>
<dir>directory name: 0. File names in this directory: [epsilon, alpha.water.orig, U, nuTilda, omega, k, nut, p_rgh]</dir>
<dir>directory name: system. File names in this directory: [fvSolution, decomposeParDict, controlDict, fvSchemes, setFieldsDict, blockMeshDict]</dir>
<dir>directory name: constant. File names in this directory: [physicalProperties.air, fvModels, phaseProperties, g, physicalProperties.water, momentumTransport]</dir>
</directory_structure>


<allrun_script>
#!/bin/sh
cd ${0%/*} || exit 1    # Run from this directory

# Source tutorial run functions
. $WM_PROJECT_DIR/bin/tools/RunFunctions

# Get application name
application=$(getApplication)

runApplication blockMesh
runApplication setFields
runApplication $application

#------------------------------------------------------------------------------

</allrun_script>
</case_end>




<case_begin>
<index>
case name: waterChannel
case domain: multiphase
case category: RAS
case solver: interFoam
</index>


<directory_structure>
<dir>directory name: 0. File names in this directory: [alpha.water.orig, U, omega, k, nut, p_rgh]</dir>
<dir>directory name: system. File names in this directory: [fvSolution, controlDict, fvSchemes, extrudeMeshDict.1, setFieldsDict, extrudeMeshDict.2, blockMeshDict]</dir>
<dir>directory name: constant. File names in this directory: [physicalProperties.air, phaseProperties, g, physicalProperties.water, momentumTransport]</dir>
</directory_structure>


<allrun_script>
#!/bin/sh
cd ${0%/*} || exit 1    # Run from this directory

# Source tutorial run functions
. $WM_PROJECT_DIR/bin/tools/RunFunctions

application=$(getApplication)

./Allmesh
runApplication setFields
runApplication $application

#------------------------------------------------------------------------------

</allrun_script>
</case_end>




<case_begin>
<index>
case name: DTCHull
case domain: multiphase
case category: RAS
case solver: interFoam
</index>


<directory_structure>
<dir>directory name: 0. File names in this directory: [pointDisplacement.orig, k.orig, alpha.water.orig, omega.orig, nut.orig, p_rgh.orig, U.orig]</dir>
<dir>directory name: system. File names in this directory: [surfaceFeaturesDict, meshQualityDict, fvSolution, decomposeParDict, topoSetDict, controlDict, snappyHexMeshDict, refineMeshDict.orig, fvSchemes, setFieldsDict, blockMeshDict]</dir>
<dir>directory name: constant. File names in this directory: [physicalProperties.air, phaseProperties, g, physicalProperties.water, momentumTransport, hRef]</dir>
</directory_structure>


<allrun_script>
#!/bin/sh
cd ${0%/*} || exit 1    # Run from this directory

# Source tutorial run functions
. $WM_PROJECT_DIR/bin/tools/RunFunctions

# Mesh if necessary
if ! cloneMesh ../DTCHullMoving . && ! (isTest $@ && cloneMesh ../DTCHullWave .)
then
    ./Allmesh
fi

runApplication setFields

runApplication decomposePar

runParallel $(getApplication)

runApplication reconstructPar

#------------------------------------------------------------------------------

</allrun_script>
</case_end>




<case_begin>
<index>
case name: DTCHullMoving
case domain: multiphase
case category: RAS
case solver: interFoam
</index>


<directory_structure>
<dir>directory name: 0. File names in this directory: [pointDisplacement.orig, k.orig, alpha.water.orig, omega.orig, nut.orig, p_rgh.orig, U.orig]</dir>
<dir>directory name: system. File names in this directory: [surfaceFeaturesDict, meshQualityDict, fvSolution, decomposeParDict, topoSetDict, controlDict, snappyHexMeshDict, refineMeshDict.orig, fvSchemes, setFieldsDict, blockMeshDict]</dir>
<dir>directory name: constant. File names in this directory: [physicalProperties.air, phaseProperties, dynamicMeshDict, g, physicalProperties.water, momentumTransport, dynamicMeshDict.sixDoF, hRef]</dir>
</directory_structure>


<allrun_script>
#!/bin/sh
cd ${0%/*} || exit 1    # Run from this directory

# Source tutorial run functions
. $WM_PROJECT_DIR/bin/tools/RunFunctions

# Mesh if necessary
if ! cloneMesh ../DTCHull . && ! (isTest $@ && cloneMesh ../DTCHullWave .)
then
    ./Allmesh
fi

runApplication setFields

runApplication decomposePar

runParallel $(getApplication)

runApplication reconstructPar

#------------------------------------------------------------------------------

</allrun_script>
</case_end>




<case_begin>
<index>
case name: containerDischarge2D
case domain: multiphase
case category: laminar
case solver: interFoam
</index>


<directory_structure>
<dir>directory name: 0. File names in this directory: [alpha.liquid.orig, U, omega, k, nut, p_rgh]</dir>
<dir>directory name: system. File names in this directory: [fvSolution, controlDict, fvSchemes, setFieldsDict, blockMeshDict]</dir>
<dir>directory name: constant. File names in this directory: [phaseProperties, g, momentumTransport, physicalProperties.liquid, physicalProperties.gas]</dir>
</directory_structure>


<allrun_script>
#!/bin/sh
cd ${0%/*} || exit 1    # Run from this directory

# Source tutorial run functions
. $WM_PROJECT_DIR/bin/tools/RunFunctions

application=$(getApplication)

runApplication blockMesh

runApplication setFields
runApplication $application

#------------------------------------------------------------------------------

</allrun_script>
</case_end>




<case_begin>
<index>
case name: sloshingTank3D6DoF
case domain: multiphase
case category: laminar
case solver: interFoam
</index>


<directory_structure>
<dir>directory name: 0. File names in this directory: [alpha.water.orig, U, p_rgh]</dir>
<dir>directory name: system. File names in this directory: [fvSolution, decomposeParDict, controlDict, fvSchemes, setFieldsDict, blockMeshDict]</dir>
<dir>directory name: gen6DoF. File names in this directory: [gen6DoF.C]</dir>
<dir>directory name: constant. File names in this directory: [physicalProperties.air, phaseProperties, dynamicMeshDict, g, physicalProperties.water, momentumTransport, 6DoF.dat]</dir>
</directory_structure>


<allrun_script>
#!/bin/sh
cd ${0%/*} || exit 1    # Run from this directory

# Source tutorial run functions
. $WM_PROJECT_DIR/bin/tools/RunFunctions

runApplication blockMesh -dict $FOAM_TUTORIALS/resources/blockMesh/sloshingTank3D
runApplication setFields
runApplication $(getApplication)

#------------------------------------------------------------------------------

</allrun_script>
</case_end>




<case_begin>
<index>
case name: sloshingTank3D
case domain: multiphase
case category: laminar
case solver: interFoam
</index>


<directory_structure>
<dir>directory name: 0. File names in this directory: [alpha.water.orig, U, p_rgh]</dir>
<dir>directory name: system. File names in this directory: [fvSolution, decomposeParDict, controlDict, fvSchemes, setFieldsDict, blockMeshDict]</dir>
<dir>directory name: constant. File names in this directory: [physicalProperties.air, phaseProperties, dynamicMeshDict, g, physicalProperties.water, momentumTransport]</dir>
</directory_structure>


<allrun_script>
#!/bin/sh
cd ${0%/*} || exit 1    # Run from this directory

# Source tutorial run functions
. $WM_PROJECT_DIR/bin/tools/RunFunctions

runApplication blockMesh -dict $FOAM_TUTORIALS/resources/blockMesh/sloshingTank3D
runApplication setFields
runApplication $(getApplication)

#------------------------------------------------------------------------------

</allrun_script>
</case_end>




<case_begin>
<index>
case name: damBreakWithObstacle
case domain: multiphase
case category: laminar
case solver: interFoam
</index>


<directory_structure>
<dir>directory name: 0. File names in this directory: [alpha.water.orig, omega, k, nut, p_rgh, U.orig]</dir>
<dir>directory name: system. File names in this directory: [fvSolution, decomposeParDict, topoSetDict, controlDict, fvSchemes, setFieldsDict, blockMeshDict]</dir>
<dir>directory name: constant. File names in this directory: [physicalProperties.air, phaseProperties, dynamicMeshDict, g, physicalProperties.water, momentumTransport]</dir>
</directory_structure>


<allrun_script>
#!/bin/sh
cd ${0%/*} || exit 1    # Run from this directory

# Source tutorial run functions
. $WM_PROJECT_DIR/bin/tools/RunFunctions

runApplication blockMesh
runApplication topoSet
runApplication subsetMesh -overwrite c0 -patch walls -noFields
runApplication setFields
runApplication $(getApplication)

#------------------------------------------------------------------------------

</allrun_script>
</case_end>




<case_begin>
<index>
case name: wave
case domain: multiphase
case category: laminar
case solver: interFoam
</index>


<directory_structure>
<dir>directory name: 0. File names in this directory: [alpha.water.orig, p_rgh, U.orig]</dir>
<dir>directory name: system. File names in this directory: [fvSolution, extrudeMeshDict, topoSetDict6, topoSetDict3, decomposeParDict, controlDict, topoSetDict1, topoSetDict5, topoSetDict2, refineMeshDictX, setWavesDict, topoSetDict4, fvSchemes, refineMeshDictY, blockMeshDict]</dir>
<dir>directory name: constant. File names in this directory: [physicalProperties.air, fvModels, waveProperties, phaseProperties, g, physicalProperties.water, momentumTransport, fvModels.verticalDamping]</dir>
</directory_structure>


<allrun_script>
#!/bin/sh

cd ${0%/*} || exit 1

. $WM_PROJECT_DIR/bin/tools/RunFunctions

runApplication blockMesh

runApplication extrudeMesh

for i in 1 2
do
    runApplication -s $i topoSet -dict topoSetDict$i
    runApplication -s $i refineMesh -dict refineMeshDictX -overwrite
done

for i in 3 4 5 6
do
    runApplication -s $i topoSet -dict topoSetDict$i
    runApplication -s $i refineMesh -dict refineMeshDictY -overwrite
done

runApplication setWaves

runApplication decomposePar

runParallel $(getApplication)

runApplication reconstructPar

</allrun_script>
</case_end>




<case_begin>
<index>
case name: climbingRod
case domain: multiphase
case category: laminar
case solver: interFoam
</index>


<directory_structure>
<dir>directory name: 0. File names in this directory: [sigma.liquid, alpha.liquid.orig, U, p, p_rgh]</dir>
<dir>directory name: system. File names in this directory: [fvSolution, extrudeMeshDict, controlDict, fvSchemes, setFieldsDict, blockMeshDict]</dir>
<dir>directory name: constant. File names in this directory: [physicalProperties.air, fvModels, momentumTransport.liquid, phaseProperties, g, momentumTransport, physicalProperties.liquid, momentumTransport.air]</dir>
</directory_structure>


<allrun_script>
#!/bin/sh
cd ${0%/*} || exit 1    # Run from this directory

# Source tutorial run functions
. $WM_PROJECT_DIR/bin/tools/RunFunctions

# Get application name
application=$(getApplication)

runApplication blockMesh
runApplication extrudeMesh

runApplication setFields
runApplication $application

#------------------------------------------------------------------------------

</allrun_script>
</case_end>




<case_begin>
<index>
case name: capillaryRise
case domain: multiphase
case category: laminar
case solver: interFoam
</index>


<directory_structure>
<dir>directory name: 0. File names in this directory: [alpha.water.orig, U, p_rgh]</dir>
<dir>directory name: system. File names in this directory: [fvSolution, controlDict, fvSchemes, setFieldsDict, blockMeshDict]</dir>
<dir>directory name: constant. File names in this directory: [physicalProperties.air, phaseProperties, g, physicalProperties.water, momentumTransport]</dir>
</directory_structure>


<allrun_script>
#!/bin/sh
cd ${0%/*} || exit 1    # Run from this directory

# Source tutorial run functions
. $WM_PROJECT_DIR/bin/tools/RunFunctions

application=$(getApplication)

runApplication blockMesh
runApplication setFields
runApplication $application

#------------------------------------------------------------------------------

</allrun_script>
</case_end>




<case_begin>
<index>
case name: mixerVessel2DMRF
case domain: multiphase
case category: laminar
case solver: interFoam
</index>


<directory_structure>
<dir>directory name: 0. File names in this directory: [alpha.water.orig, U, p_rgh]</dir>
<dir>directory name: system. File names in this directory: [fvSolution, controlDict, fvSchemes, setFieldsDict, blockMeshDict]</dir>
<dir>directory name: constant. File names in this directory: [phaseProperties, g, physicalProperties.water, MRFProperties, momentumTransport, physicalProperties.oil]</dir>
</directory_structure>


<allrun_script>
#!/bin/sh
cd ${0%/*} || exit 1    # Run from this directory

# Source tutorial run functions
. $WM_PROJECT_DIR/bin/tools/RunFunctions

application=$(getApplication)

runApplication blockMesh -dict $FOAM_TUTORIALS/resources/blockMesh/mixerVessel2D
runApplication setFields
runApplication $application

#------------------------------------------------------------------------------

</allrun_script>
</case_end>




<case_begin>
<index>
case name: damBreak
case domain: multiphase
case category: damBreak
case solver: interFoam
</index>


<directory_structure>
<dir>directory name: 0. File names in this directory: [alpha.water.orig, U, p_rgh]</dir>
<dir>directory name: system. File names in this directory: [fvSolution, decomposeParDict, controlDict, fvSchemes, setFieldsDict, blockMeshDict]</dir>
<dir>directory name: constant. File names in this directory: [physicalProperties.air, phaseProperties, g, physicalProperties.water, momentumTransport]</dir>
</directory_structure>


<allrun_script>
#!/bin/sh
cd ${0%/*} || exit 1    # Run from this directory

# Source tutorial run functions
. $WM_PROJECT_DIR/bin/tools/RunFunctions

# Get application name
application=$(getApplication)

runApplication blockMesh
runApplication setFields
runApplication $application

#------------------------------------------------------------------------------

</allrun_script>
</case_end>




<case_begin>
<index>
case name: sloshingTank3D3DoF
case domain: multiphase
case category: laminar
case solver: interFoam
</index>


<directory_structure>
<dir>directory name: 0. File names in this directory: [alpha.water.orig, U, p_rgh]</dir>
<dir>directory name: system. File names in this directory: [fvSolution, decomposeParDict, controlDict, fvSchemes, setFieldsDict, blockMeshDict]</dir>
<dir>directory name: constant. File names in this directory: [physicalProperties.air, phaseProperties, dynamicMeshDict, g, physicalProperties.water, momentumTransport]</dir>
</directory_structure>


<allrun_script>
#!/bin/sh
cd ${0%/*} || exit 1    # Run from this directory

# Source tutorial run functions
. $WM_PROJECT_DIR/bin/tools/RunFunctions

runApplication blockMesh -dict $FOAM_TUTORIALS/resources/blockMesh/sloshingTank3D
runApplication setFields
runApplication $(getApplication)

#------------------------------------------------------------------------------

</allrun_script>
</case_end>




<case_begin>
<index>
case name: wave3D
case domain: multiphase
case category: laminar
case solver: interFoam
</index>


<directory_structure>
<dir>directory name: 0. File names in this directory: [alpha.water.orig, p_rgh, U.orig]</dir>
<dir>directory name: system. File names in this directory: [topoSetDictZ2, fvSolution, topoSetDictZ1, decomposeParDict, controlDict, refineMeshDictXY, refineMeshDictZ, topoSetDictXY1, topoSetDictZ3, setWavesDict, fvSchemes, topoSetDictZ4, topoSetDictXY2, blockMeshDict]</dir>
<dir>directory name: constant. File names in this directory: [physicalProperties.air, waveProperties, phaseProperties, g, physicalProperties.water, momentumTransport]</dir>
</directory_structure>


<allrun_script>
#!/bin/sh

cd ${0%/*} || exit 1

. $WM_PROJECT_DIR/bin/tools/RunFunctions

runApplication blockMesh

for i in 1 2
do
    runApplication -s XY$i topoSet -dict topoSetDictXY$i
    runApplication -s XY$i refineMesh -dict refineMeshDictXY -overwrite
done

for i in 1 2 3 4
do
    runApplication -s Z$i topoSet -dict topoSetDictZ$i
    runApplication -s Z$i refineMesh -dict refineMeshDictZ -overwrite
done

runApplication setWaves

runApplication decomposePar

runParallel $(getApplication)

runApplication reconstructPar -newTimes

</allrun_script>
</case_end>




<case_begin>
<index>
case name: cavitatingBullet
case domain: multiphase
case category: laminar
case solver: interFoam
</index>


<directory_structure>
<dir>directory name: 0. File names in this directory: [p_rgh.orig, alpha.water, U.orig, Phi]</dir>
<dir>directory name: system. File names in this directory: [fvSolution, decomposeParDict, controlDict, snappyHexMeshDict, fvSchemes, blockMeshDict]</dir>
<dir>directory name: constant. File names in this directory: [phaseProperties, physicalProperties.vapour, g, physicalProperties.water, momentumTransport, phaseChangeProperties]</dir>
</directory_structure>


<allrun_script>
#!/bin/sh
cd ${0%/*} || exit 1    # Run from this directory

# Source tutorial run functions
. $WM_PROJECT_DIR/bin/tools/RunFunctions

# Generate the base block mesh
runApplication blockMesh

# Generate the snappy mesh
runApplication snappyHexMesh -overwrite

# Initialise with potentialFoam solution
runApplication potentialFoam -pName p_rgh

# Run the solver
runApplication $(getApplication)

#------------------------------------------------------------------------------

</allrun_script>
</case_end>




<case_begin>
<index>
case name: sloshingCylinder
case domain: multiphase
case category: laminar
case solver: interFoam
</index>


<directory_structure>
<dir>directory name: 0. File names in this directory: [alpha.water.orig, U, p_rgh]</dir>
<dir>directory name: system. File names in this directory: [meshQualityDict, fvSolution, controlDict, snappyHexMeshDict, fvSchemes, setFieldsDict, blockMeshDict]</dir>
<dir>directory name: constant. File names in this directory: [physicalProperties.air, phaseProperties, dynamicMeshDict, g, physicalProperties.water, momentumTransport]</dir>
</directory_structure>


<allrun_script>
#!/bin/sh
cd ${0%/*} || exit 1    # Run from this directory

# Source tutorial run functions
. $WM_PROJECT_DIR/bin/tools/RunFunctions

runApplication blockMesh
runApplication snappyHexMesh -overwrite
runApplication setFields
runApplication $(getApplication)

#------------------------------------------------------------------------------

</allrun_script>
</case_end>




<case_begin>
<index>
case name: testTubeMixer
case domain: multiphase
case category: laminar
case solver: interFoam
</index>


<directory_structure>
<dir>directory name: 0. File names in this directory: [alpha.water.orig, U, p_rgh]</dir>
<dir>directory name: system. File names in this directory: [fvSolution, decomposeParDict, controlDict, fvSchemes, setFieldsDict, blockMeshDict]</dir>
<dir>directory name: constant. File names in this directory: [physicalProperties.air, phaseProperties, dynamicMeshDict, g, physicalProperties.water, momentumTransport]</dir>
</directory_structure>


<allrun_script>
#!/bin/sh
cd ${0%/*} || exit 1    # Run from this directory

# Source tutorial run functions
. $WM_PROJECT_DIR/bin/tools/RunFunctions

runApplication blockMesh
runApplication setFields
runApplication $(getApplication)

#------------------------------------------------------------------------------

</allrun_script>
</case_end>




<case_begin>
<index>
case name: sloshingTank2D3DoF
case domain: multiphase
case category: laminar
case solver: interFoam
</index>


<directory_structure>
<dir>directory name: 0. File names in this directory: [alpha.water.orig, U, p_rgh]</dir>
<dir>directory name: system. File names in this directory: [fvSolution, decomposeParDict, controlDict, fvSchemes, setFieldsDict, blockMeshDict]</dir>
<dir>directory name: constant. File names in this directory: [physicalProperties.air, phaseProperties, dynamicMeshDict, g, physicalProperties.water, momentumTransport]</dir>
</directory_structure>


<allrun_script>
#!/bin/sh
cd ${0%/*} || exit 1    # Run from this directory

# Source tutorial run functions
. $WM_PROJECT_DIR/bin/tools/RunFunctions

runApplication blockMesh -dict $FOAM_TUTORIALS/resources/blockMesh/sloshingTank2D
runApplication setFields
runApplication $(getApplication)

#------------------------------------------------------------------------------

</allrun_script>
</case_end>




<case_begin>
<index>
case name: sloshingTank2D
case domain: multiphase
case category: laminar
case solver: interFoam
</index>


<directory_structure>
<dir>directory name: 0. File names in this directory: [alpha.water.orig, U, p_rgh]</dir>
<dir>directory name: system. File names in this directory: [fvSolution, decomposeParDict, controlDict, fvSchemes, setFieldsDict, blockMeshDict]</dir>
<dir>directory name: constant. File names in this directory: [physicalProperties.air, phaseProperties, dynamicMeshDict, g, physicalProperties.water, momentumTransport]</dir>
</directory_structure>


<allrun_script>
#!/bin/sh
cd ${0%/*} || exit 1    # Run from this directory

# Source tutorial run functions
. $WM_PROJECT_DIR/bin/tools/RunFunctions

runApplication blockMesh -dict $FOAM_TUTORIALS/resources/blockMesh/sloshingTank2D

runApplication setFields
runApplication $(getApplication)

#------------------------------------------------------------------------------

</allrun_script>
</case_end>




<case_begin>
<index>
case name: mixerVessel2D
case domain: multiphase
case category: laminar
case solver: interFoam
</index>


<directory_structure>
<dir>directory name: 0. File names in this directory: [alpha.water.orig, U, p_rgh]</dir>
<dir>directory name: system. File names in this directory: [fvSolution, controlDict, fvSchemes, createBafflesDict, setFieldsDict, blockMeshDict]</dir>
<dir>directory name: constant. File names in this directory: [physicalProperties.air, phaseProperties, dynamicMeshDict, g, physicalProperties.water, momentumTransport]</dir>
</directory_structure>


<allrun_script>
#!/bin/sh

cd ${0%/*} || exit 1

. $WM_PROJECT_DIR/bin/tools/RunFunctions

application=$(getApplication)

runApplication blockMesh -dict $FOAM_TUTORIALS/resources/blockMesh/mixerVessel2D
runApplication createBaffles -overwrite
runApplication splitBaffles -overwrite
runApplication createNonConformalCouples -overwrite nonCouple1 nonCouple2

runApplication setFields

runApplication $application

</allrun_script>
</case_end>




<case_begin>
<index>
case name: damBreak
case domain: multiphase
case category: laminar
case solver: interMixingFoam
</index>


<directory_structure>
<dir>directory name: 0. File names in this directory: [alpha.air.orig, alpha.water.orig, U, p_rgh, alpha.other.orig]</dir>
<dir>directory name: system. File names in this directory: [fvSolution, decomposeParDict, controlDict, fvSchemes, setFieldsDict, blockMeshDict]</dir>
<dir>directory name: constant. File names in this directory: [physicalProperties.air, phaseProperties, g, physicalProperties.water, momentumTransport, physicalProperties.other]</dir>
</directory_structure>


<allrun_script>
#!/bin/sh
cd ${0%/*} || exit 1    # Run from this directory

# Source tutorial run functions
. $WM_PROJECT_DIR/bin/tools/RunFunctions

runApplication blockMesh
runApplication setFields
runApplication $(getApplication)

#------------------------------------------------------------------------------

</allrun_script>
</case_end>




<case_begin>
<index>
case name: lockExchange
case domain: multiphase
case category: None
case solver: twoLiquidMixingFoam
</index>


<directory_structure>
<dir>directory name: 0. File names in this directory: [U, alpha.sludge.orig, p_rgh]</dir>
<dir>directory name: system. File names in this directory: [fvSolution, controlDict, fvSchemes, setFieldsDict, blockMeshDict]</dir>
<dir>directory name: constant. File names in this directory: [phaseProperties, g, physicalProperties.water, momentumTransport, physicalProperties.sludge]</dir>
</directory_structure>


<allrun_script>
#!/bin/sh
cd ${0%/*} || exit 1    # Run from this directory

# Source tutorial run functions
. $WM_PROJECT_DIR/bin/tools/RunFunctions

# Set application name
application=$(getApplication)

runApplication blockMesh
runApplication setFields
runApplication $application

#------------------------------------------------------------------------------

</allrun_script>
</case_end>




<case_begin>
<index>
case name: damBreak4phase
case domain: multiphase
case category: laminar
case solver: compressibleMultiphaseInterFoam
</index>


<directory_structure>
<dir>directory name: 0. File names in this directory: [alpha.air.orig, alpha.mercury.orig, alpha.water.orig, U, alpha.oil.orig, T, p, p_rgh]</dir>
<dir>directory name: system. File names in this directory: [fvSolution, decomposeParDict, controlDict, fvSchemes, setFieldsDict, blockMeshDict]</dir>
<dir>directory name: constant. File names in this directory: [physicalProperties.mercury, physicalProperties.air, phaseProperties, g, physicalProperties.water, momentumTransport, physicalProperties.oil]</dir>
</directory_structure>


<allrun_script>
#!/bin/sh
cd ${0%/*} || exit 1    # Run from this directory

# Source tutorial run functions
. $WM_PROJECT_DIR/bin/tools/RunFunctions

# Set application name
application=$(getApplication)

runApplication blockMesh
runApplication setFields
runApplication $application

#------------------------------------------------------------------------------

</allrun_script>
</case_end>




<case_begin>
<index>
case name: damBreak4phase
case domain: multiphase
case category: RAS
case solver: multiphaseInterFoam
</index>


<directory_structure>
<dir>directory name: 0. File names in this directory: [epsilon, alpha.air.orig, alpha.mercury.orig, alpha.water.orig, U, alpha.oil.orig, k, nut, p_rgh]</dir>
<dir>directory name: system. File names in this directory: [fvSolution, decomposeParDict, controlDict, fvSchemes, setFieldsDict, blockMeshDict]</dir>
<dir>directory name: constant. File names in this directory: [physicalProperties.mercury, physicalProperties.air, phaseProperties, g, physicalProperties.water, momentumTransport, physicalProperties.oil]</dir>
</directory_structure>


<allrun_script>
#!/bin/sh
cd ${0%/*} || exit 1    # Run from this directory

# Source tutorial run functions
. $WM_PROJECT_DIR/bin/tools/RunFunctions

# Set application name
application=$(getApplication)

runApplication blockMesh
runApplication setFields
runApplication $application

#------------------------------------------------------------------------------

</allrun_script>
</case_end>




<case_begin>
<index>
case name: damBreak4phase
case domain: multiphase
case category: laminar
case solver: multiphaseInterFoam
</index>


<directory_structure>
<dir>directory name: 0. File names in this directory: [alpha.air.orig, alpha.mercury.orig, alpha.water.orig, U, alpha.oil.orig, p_rgh]</dir>
<dir>directory name: system. File names in this directory: [fvSolution, decomposeParDict, controlDict, fvSchemes, setFieldsDict, blockMeshDict]</dir>
<dir>directory name: constant. File names in this directory: [physicalProperties.mercury, physicalProperties.air, phaseProperties, g, physicalProperties.water, momentumTransport, physicalProperties.oil]</dir>
</directory_structure>


<allrun_script>
#!/bin/sh
cd ${0%/*} || exit 1    # Run from this directory

# Source tutorial run functions
. $WM_PROJECT_DIR/bin/tools/RunFunctions

# Set application name
application=$(getApplication)

runApplication blockMesh
runApplication setFields
runApplication $application

#------------------------------------------------------------------------------

</allrun_script>
</case_end>




<case_begin>
<index>
case name: damBreak4phaseFine
case domain: multiphase
case category: laminar
case solver: multiphaseInterFoam
</index>


<directory_structure>
<dir>directory name: 0. File names in this directory: [alpha.air.orig, alpha.mercury.orig, alpha.water.orig, U, alpha.oil.orig, p_rgh]</dir>
<dir>directory name: system. File names in this directory: [fvSolution, decomposeParDict, controlDict, fvSchemes, setFieldsDict, blockMeshDict]</dir>
<dir>directory name: constant. File names in this directory: [physicalProperties.mercury, physicalProperties.air, phaseProperties, g, physicalProperties.water, momentumTransport, physicalProperties.oil]</dir>
</directory_structure>


<allrun_script>
#!/bin/sh
cd ${0%/*} || exit 1    # Run from this directory

# Source tutorial run functions
. $WM_PROJECT_DIR/bin/tools/RunFunctions

# Set application name
application=$(getApplication)

runApplication blockMesh
runApplication setFields
runApplication decomposePar
runParallel $application
runApplication reconstructPar

#------------------------------------------------------------------------------

</allrun_script>
</case_end>




<case_begin>
<index>
case name: mixerVessel2DMRF
case domain: multiphase
case category: laminar
case solver: multiphaseInterFoam
</index>


<directory_structure>
<dir>directory name: 0. File names in this directory: [alpha.air.orig, alpha.mercury.orig, alpha.water.orig, U, alpha.oil.orig, p_rgh]</dir>
<dir>directory name: system. File names in this directory: [fvSolution, controlDict, fvSchemes, setFieldsDict, blockMeshDict]</dir>
<dir>directory name: constant. File names in this directory: [physicalProperties.mercury, physicalProperties.air, phaseProperties, g, physicalProperties.water, MRFProperties, momentumTransport, physicalProperties.oil]</dir>
</directory_structure>


<allrun_script>
#!/bin/sh
cd ${0%/*} || exit 1    # Run from this directory

# Source tutorial run functions
. $WM_PROJECT_DIR/bin/tools/RunFunctions

application=$(getApplication)

runApplication blockMesh -dict $FOAM_TUTORIALS/resources/blockMesh/mixerVessel2D
runApplication setFields
runApplication $application

#------------------------------------------------------------------------------

</allrun_script>
</case_end>




<case_begin>
<index>
case name: movingOscillatingBox
case domain: multiphase
case category: None
case solver: potentialFreeSurfaceFoam
</index>


<directory_structure>
<dir>directory name: 0.orig. File names in this directory: [U, p, pointDisplacement, p_gh]</dir>
<dir>directory name: system. File names in this directory: [fvSolution, topoSetDict-selectBottom, topoSetDict, controlDict, createPatchDict, fvSchemes, blockMeshDict]</dir>
<dir>directory name: constant. File names in this directory: [physicalProperties, dynamicMeshDict, g, momentumTransport]</dir>
</directory_structure>


<allrun_script>
#!/bin/sh
cd ${0%/*} || exit 1    # Run from this directory

# Source tutorial run functions
. $WM_PROJECT_DIR/bin/tools/RunFunctions

# Set application name
application=$(getApplication)

runApplication blockMesh

runApplication -s 1  topoSet

runApplication subsetMesh -overwrite c0 -patch floatingObject -noFields

runApplication -s selectBottom \
    topoSet -dict topoSetDict-selectBottom

runApplication createPatch -overwrite

cp -R 0.orig 0 > /dev/null 2>&1

runApplication $application

#------------------------------------------------------------------------------

</allrun_script>
</case_end>




<case_begin>
<index>
case name: oscillatingBox
case domain: multiphase
case category: None
case solver: potentialFreeSurfaceFoam
</index>


<directory_structure>
<dir>directory name: 0. File names in this directory: [U, p, p_gh]</dir>
<dir>directory name: system. File names in this directory: [fvSolution, topoSetDict, controlDict, fvSchemes, blockMeshDict]</dir>
<dir>directory name: constant. File names in this directory: [physicalProperties, g, momentumTransport]</dir>
</directory_structure>


<allrun_script>
#!/bin/sh
cd ${0%/*} || exit 1    # Run from this directory

# Source tutorial run functions
. $WM_PROJECT_DIR/bin/tools/RunFunctions

# Set application name
application=$(getApplication)

runApplication blockMesh
runApplication topoSet
runApplication subsetMesh -overwrite c0 -patch floatingObject -noFields

runApplication $application

#------------------------------------------------------------------------------

</allrun_script>
</case_end>




<case_begin>
<index>
case name: angledDuctExplicitFixedCoeff
case domain: compressible
case category: None
case solver: rhoSimpleFoam
</index>


<directory_structure>
<dir>directory name: 0. File names in this directory: [epsilon, alphat, U, T, p, k, nut]</dir>
<dir>directory name: system. File names in this directory: [fvSolution, controlDict, fvConstraints, fvSchemes, blockMeshDict]</dir>
<dir>directory name: constant. File names in this directory: [physicalProperties, fvModels, momentumTransport]</dir>
</directory_structure>


<allrun_script>
#!/bin/sh
cd ${0%/*} || exit 1    # Run from this directory

# Source tutorial run functions
. $WM_PROJECT_DIR/bin/tools/RunFunctions

application=$(getApplication)

runApplication blockMesh -dict $FOAM_TUTORIALS/resources/blockMesh/angledDuct
runApplication $application

#------------------------------------------------------------------------------

</allrun_script>
</case_end>




<case_begin>
<index>
case name: aerofoilNACA0012
case domain: compressible
case category: None
case solver: rhoSimpleFoam
</index>


<directory_structure>
<dir>directory name: 0. File names in this directory: [alphat, U, omega, T, p, k, nut]</dir>
<dir>directory name: system. File names in this directory: [fvSolution, extrudeMeshDict, forceCoeffsCompressible, controlDict, residuals, fvConstraints, fvSchemes, blockMeshDict]</dir>
<dir>directory name: constant. File names in this directory: [physicalProperties, momentumTransport]</dir>
</directory_structure>


<allrun_script>
#!/bin/sh
cd ${0%/*} || exit 1    # Run from this directory

# Source tutorial run functions
. $WM_PROJECT_DIR/bin/tools/RunFunctions

# Copy aerofoil surface from resources directory
cp $FOAM_TUTORIALS/resources/geometry/NACA0012.obj.gz constant/geometry/

application="$(getApplication)"

runApplication blockMesh
runApplication transformPoints "scale=(1 0 1)"
runApplication extrudeMesh

runApplication $application

#------------------------------------------------------------------------------

</allrun_script>
</case_end>




<case_begin>
<index>
case name: pitzDaily
case domain: compressible
case category: LES
case solver: rhoPimpleFoam
</index>


<directory_structure>
<dir>directory name: 0. File names in this directory: [alphat, U, T, p, k, nut, muTilda]</dir>
<dir>directory name: system. File names in this directory: [fvSolution, controlDict, fvConstraints, fvSchemes, blockMeshDict]</dir>
<dir>directory name: constant. File names in this directory: [physicalProperties, momentumTransport]</dir>
</directory_structure>


<allrun_script>
#!/bin/sh
cd ${0%/*} || exit 1    # Run from this directory

# Source tutorial run functions
. $WM_PROJECT_DIR/bin/tools/RunFunctions

application="$(getApplication)"

runApplication blockMesh -dict $FOAM_TUTORIALS/resources/blockMesh/pitzDaily
runApplication $application

#------------------------------------------------------------------------------

</allrun_script>
</case_end>




<case_begin>
<index>
case name: angledDuct
case domain: compressible
case category: RAS
case solver: rhoPimpleFoam
</index>


<directory_structure>
<dir>directory name: 0. File names in this directory: [epsilon, alphat, U, T, p, k, nut]</dir>
<dir>directory name: system. File names in this directory: [fvSolution, controlDict, fvConstraints, fvSchemes, blockMeshDict]</dir>
<dir>directory name: constant. File names in this directory: [physicalProperties, fvModels, momentumTransport]</dir>
</directory_structure>


<allrun_script>
#!/bin/sh
cd ${0%/*} || exit 1    # Run from this directory

# Source tutorial run functions
. $WM_PROJECT_DIR/bin/tools/RunFunctions

runApplication blockMesh -dict $FOAM_TUTORIALS/resources/blockMesh/angledDuct
runApplication $(getApplication)

</allrun_script>
</case_end>




<case_begin>
<index>
case name: mixerVessel2DMRF
case domain: compressible
case category: RAS
case solver: rhoPimpleFoam
</index>


<directory_structure>
<dir>directory name: 0. File names in this directory: [epsilon, alphat, U, T, p, k, nut]</dir>
<dir>directory name: system. File names in this directory: [fvSolution, controlDict, fvConstraints, fvSchemes, blockMeshDict]</dir>
<dir>directory name: constant. File names in this directory: [physicalProperties, fvModels, MRFProperties, momentumTransport]</dir>
</directory_structure>


<allrun_script>
#!/bin/sh

# Source tutorial run functions
. $WM_PROJECT_DIR/bin/tools/RunFunctions

application=$(getApplication)

runApplication blockMesh -dict $FOAM_TUTORIALS/resources/blockMesh/mixerVessel2D
runApplication $application

</allrun_script>
</case_end>




<case_begin>
<index>
case name: aerofoilNACA0012
case domain: compressible
case category: RAS
case solver: rhoPimpleFoam
</index>


<directory_structure>
<dir>directory name: 0. File names in this directory: [alphat, U, omega, T, p, k, nut]</dir>
<dir>directory name: system. File names in this directory: [fvSolution, extrudeMeshDict, controlDict, residuals, fvConstraints, fvSchemes, blockMeshDict]</dir>
<dir>directory name: constant. File names in this directory: [physicalProperties, momentumTransport]</dir>
</directory_structure>


<allrun_script>
#!/bin/sh
cd ${0%/*} || exit 1    # Run from this directory

# Source tutorial run functions
. $WM_PROJECT_DIR/bin/tools/RunFunctions

# Copy aerofoil surface from resources directory
cp $FOAM_TUTORIALS/resources/geometry/NACA0012.obj.gz constant/geometry/

application="$(getApplication)"

runApplication blockMesh
runApplication transformPoints "scale=(1 0 1)"
runApplication extrudeMesh

runApplication $application

#------------------------------------------------------------------------------

</allrun_script>
</case_end>




<case_begin>
<index>
case name: nacaAirfoil
case domain: compressible
case category: RAS
case solver: rhoPimpleFoam
</index>


<directory_structure>
<dir>directory name: 0. File names in this directory: [epsilon, alphat, U, T, p, k, nut]</dir>
<dir>directory name: system. File names in this directory: [fvSolution, controlDict, fvSchemes]</dir>
<dir>directory name: constant. File names in this directory: [physicalProperties, momentumTransport]</dir>
</directory_structure>


<allrun_script>
#!/bin/sh
cd ${0%/*} || exit 1    # Run from this directory

# Source tutorial run functions
. $WM_PROJECT_DIR/bin/tools/RunFunctions

# Get application name
application=$(getApplication)

runApplication star3ToFoam prostar/nacaAirfoil

sed -i -e 's/symmetry\([)]*;\)/empty\1/' constant/polyMesh/boundary

runApplication $application

#------------------------------------------------------------------------------

</allrun_script>
</case_end>




<case_begin>
<index>
case name: annularThermalMixer
case domain: compressible
case category: RAS
case solver: rhoPimpleFoam
</index>


<directory_structure>
<dir>directory name: 0. File names in this directory: [epsilon, alphat, U, T, p, k, nut]</dir>
<dir>directory name: system. File names in this directory: [surfaceFeaturesDict, fvSolution, controlDict, snappyHexMeshDict, fvConstraints, fvSchemes, createBafflesDict, blockMeshDict]</dir>
<dir>directory name: constant. File names in this directory: [physicalProperties, dynamicMeshDict, momentumTransport, caseSettings, boundaryConditions]</dir>
</directory_structure>


<allrun_script>
#!/bin/sh
cd ${0%/*} || exit 1    # Run from this directory

# Source tutorial run functions
. $WM_PROJECT_DIR/bin/tools/RunFunctions

runApplication surfaceFeatures

runApplication blockMesh
runApplication snappyHexMesh -overwrite

runApplication createBaffles -overwrite
runApplication splitBaffles -overwrite
runApplication createNonConformalCouples -overwrite nonCouple1 nonCouple2

runApplication $(getApplication)

#------------------------------------------------------------------------------

</allrun_script>
</case_end>




<case_begin>
<index>
case name: angledDuctLTS
case domain: compressible
case category: RAS
case solver: rhoPimpleFoam
</index>


<directory_structure>
<dir>directory name: 0. File names in this directory: [epsilon, alphat, U, T, p, k, nut]</dir>
<dir>directory name: system. File names in this directory: [fvSolution, controlDict, fvConstraints, fvSchemes, blockMeshDict]</dir>
<dir>directory name: constant. File names in this directory: [physicalProperties, fvModels, momentumTransport]</dir>
</directory_structure>


<allrun_script>
#!/bin/sh
cd ${0%/*} || exit 1    # Run from this directory

# Source tutorial run functions
. $WM_PROJECT_DIR/bin/tools/RunFunctions

runApplication blockMesh -dict $FOAM_TUTORIALS/resources/blockMesh/angledDuct
runApplication $(getApplication)

</allrun_script>
</case_end>




<case_begin>
<index>
case name: helmholtzResonance
case domain: compressible
case category: laminar
case solver: rhoPimpleFoam
</index>


<directory_structure>
<dir>directory name: 0. File names in this directory: [U, T, p]</dir>
<dir>directory name: system. File names in this directory: [fvSolution, decomposeParDict, controlDict, fvConstraints, blockMeshDict.modelledBlocks, blockMeshDict.resolvedBoundary, fvSchemes, blockMeshDict.resolvedBlocks, blockMeshDict.modelledBoundary, blockMeshDict]</dir>
<dir>directory name: constant. File names in this directory: [physicalProperties, momentumTransport]</dir>
</directory_structure>


<allrun_script>
#!/bin/sh

cd ${0%/*} || exit 1

. $WM_PROJECT_DIR/bin/tools/RunFunctions

# Run function links the appropriate mesh files and clones the case
run()
{
    (
        cd system
        rm -f blockMeshDict.caseBlocks blockMeshDict.caseBoundary
        ln -s blockMeshDict.${1}Blocks blockMeshDict.caseBlocks
        ln -s blockMeshDict.${1}Boundary blockMeshDict.caseBoundary
    )

    cloneCase . ${1}

    (
        cd ${1}
        runApplication blockMesh
        runApplication decomposePar
        runParallel $(getApplication)
    )
}

# Run with a fully resolved plenum
run resolved

# Run with the plenum modelled by a boundary condition
run modelled

# Plot a comparison of the pressure in the neck
cat << EOF | gnuplot -persist

set terminal postscript eps size 5,4 enhanced color

set xlabel "Time (s)"
set ylabel "Gauge pressure in the neck (Pa)"

set output "pressure.eps"

plot \
    "resolved/postProcessing/probes/0/p" us 1:(\$4-1e5) t "Resolved Plenum" w l, \
    "modelled/postProcessing/probes/0/p" us 1:(\$4-1e5) t "Modelled Plenum" w l

EOF

</allrun_script>
</case_end>




<case_begin>
<index>
case name: shockTube
case domain: compressible
case category: laminar
case solver: rhoPimpleFoam
</index>


<directory_structure>
<dir>directory name: 0. File names in this directory: [p.orig, U.orig, T.orig]</dir>
<dir>directory name: system. File names in this directory: [fvSolution, controlDict, sample, fvSchemes, setFieldsDict, blockMeshDict]</dir>
<dir>directory name: constant. File names in this directory: [physicalProperties, momentumTransport]</dir>
</directory_structure>


<allrun_script>
#!/bin/sh
cd ${0%/*} || exit 1    # Run from this directory

# Source tutorial run functions
. $WM_PROJECT_DIR/bin/tools/RunFunctions

application=$(getApplication)

runApplication blockMesh
runApplication setFields
runApplication $application
runApplication -s sample  postProcess -func sample

#------------------------------------------------------------------------------

</allrun_script>
</case_end>




<case_begin>
<index>
case name: blockedChannel
case domain: compressible
case category: laminar
case solver: rhoPimpleFoam
</index>


<directory_structure>
<dir>directory name: 0. File names in this directory: [T.solid, U, T, p, tracer]</dir>
<dir>directory name: system. File names in this directory: [fvSolution, controlDict, generateAlphas, fvSchemes, blockMeshDict]</dir>
<dir>directory name: constant. File names in this directory: [physicalProperties, fvModels, physicalProperties.solid, momentumTransport, thermophysicalTransport]</dir>
</directory_structure>


<allrun_script>
#!/bin/sh

cd ${0%/*} || exit 1

. $WM_PROJECT_DIR/bin/tools/RunFunctions

runApplication blockMesh
runApplication postProcess -func generateAlphas
runApplication $(getApplication)

</allrun_script>
</case_end>




<case_begin>
<index>
case name: angledDuctImplicit
case domain: compressible
case category: None
case solver: rhoPorousSimpleFoam
</index>


<directory_structure>
<dir>directory name: 0. File names in this directory: [epsilon, alphat, U, T, p, k, nut]</dir>
<dir>directory name: system. File names in this directory: [fvSolution, controlDict, fvConstraints, fvSchemes, blockMeshDict]</dir>
<dir>directory name: constant. File names in this directory: [porosityProperties, physicalProperties, momentumTransport]</dir>
</directory_structure>


<allrun_script>
#!/bin/sh
cd ${0%/*} || exit 1    # Run from this directory

# Source tutorial run functions
. $WM_PROJECT_DIR/bin/tools/RunFunctions

application=$(getApplication)

runApplication blockMesh -dict $FOAM_TUTORIALS/resources/blockMesh/angledDuct
runApplication $application

#------------------------------------------------------------------------------

</allrun_script>
</case_end>




<case_begin>
<index>
case name: angledDuctExplicit
case domain: compressible
case category: None
case solver: rhoPorousSimpleFoam
</index>


<directory_structure>
<dir>directory name: system. File names in this directory: [fvSolution, controlDict, fvConstraints, fvSchemes, blockMeshDict]</dir>
</directory_structure>


<allrun_script>
#!/bin/sh
cd ${0%/*} || exit 1    # Run from this directory

# Source tutorial run functions
. $WM_PROJECT_DIR/bin/tools/RunFunctions

application=$(getApplication)

runApplication blockMesh -dict $FOAM_TUTORIALS/resources/blockMesh/angledDuct
runApplication $application

#------------------------------------------------------------------------------

</allrun_script>
</case_end>




<case_begin>
<index>
case name: biconic25-55Run35
case domain: compressible
case category: None
case solver: rhoCentralFoam
</index>


<directory_structure>
<dir>directory name: 0. File names in this directory: [U, T, p]</dir>
<dir>directory name: system. File names in this directory: [fvSolution, collapseDict, controlDict, sample, fvSchemes, blockMeshDict]</dir>
<dir>directory name: constant. File names in this directory: [physicalProperties, grid256.dat, momentumTransport]</dir>
</directory_structure>


<allrun_script>
#!/bin/sh
cd "${0%/*}" || exit 1    # Run from this directory

# Source tutorial run functions
. "$WM_PROJECT_DIR/bin/tools/RunFunctions"

runApplication blockMesh

runApplication datToFoam constant/grid256.dat

points="constant/polyMesh/points"
pointsTmp="constant/points.tmp"
sed -i -e 's/binary/ascii/' -ne '1,17p' $points
cat $pointsTmp >> $points
rm $pointsTmp

runApplication collapseEdges -overwrite

echo "Changing patch type to wedge type in boundary file"
sed -i '/wedge/,/nFaces/{s/patch/wedge/}' constant/polyMesh/boundary

runApplication "$(getApplication)"


#------------------------------------------------------------------------------

</allrun_script>
</case_end>




<case_begin>
<index>
case name: shockTube
case domain: compressible
case category: None
case solver: rhoCentralFoam
</index>


<directory_structure>
<dir>directory name: 0. File names in this directory: [p.orig, U.orig, T.orig]</dir>
<dir>directory name: system. File names in this directory: [fvSolution, controlDict, sample, fvSchemes, setFieldsDict, blockMeshDict]</dir>
<dir>directory name: constant. File names in this directory: [physicalProperties, momentumTransport]</dir>
</directory_structure>


<allrun_script>
#!/bin/sh
cd ${0%/*} || exit 1    # Run from this directory

# Source tutorial run functions
. $WM_PROJECT_DIR/bin/tools/RunFunctions

runApplication blockMesh
runApplication setFields
runApplication $(getApplication)
runApplication -s sample  postProcess -func sample

#------------------------------------------------------------------------------

</allrun_script>
</case_end>




<case_begin>
<index>
case name: squareBump
case domain: incompressible
case category: None
case solver: shallowWaterFoam
</index>


<directory_structure>
<dir>directory name: 0. File names in this directory: [hU.orig, h.orig, hTotal]</dir>
<dir>directory name: system. File names in this directory: [fvSolution, controlDict, fvSchemes, setFieldsDict, blockMeshDict]</dir>
<dir>directory name: constant. File names in this directory: [gravitationalProperties, h0.orig]</dir>
</directory_structure>


<allrun_script>
#!/bin/sh
cd ${0%/*} || exit 1    # Run from this directory

# Source tutorial run functions
. $WM_PROJECT_DIR/bin/tools/RunFunctions

runApplication blockMesh
runApplication setFields
runApplication $(getApplication)

#------------------------------------------------------------------------------

</allrun_script>
</case_end>




<case_begin>
<index>
case name: rotor2D
case domain: incompressible
case category: None
case solver: SRFPimpleFoam
</index>


<directory_structure>
<dir>directory name: 0. File names in this directory: [epsilon, p, k, nut, Urel]</dir>
<dir>directory name: system. File names in this directory: [fvSolution, controlDict, fvSchemes, blockMeshDict]</dir>
<dir>directory name: constant. File names in this directory: [physicalProperties, momentumTransport, SRFProperties]</dir>
</directory_structure>


<allrun_script>
#!/bin/sh
cd ${0%/*} || exit 1    # Run from this directory

# Source tutorial run functions
. $WM_PROJECT_DIR/bin/tools/RunFunctions

application=$(getApplication)

runApplication blockMesh
runApplication $application

#------------------------------------------------------------------------------

</allrun_script>
</case_end>




<case_begin>
<index>
case name: elbow
case domain: incompressible
case category: None
case solver: icoFoam
</index>


<directory_structure>
<dir>directory name: 0. File names in this directory: [U, p]</dir>
<dir>directory name: system. File names in this directory: [foamDataToFluentDict, fvSolution, controlDict, fvSchemes]</dir>
<dir>directory name: constant. File names in this directory: [physicalProperties]</dir>
</directory_structure>


<allrun_script>
#!/bin/sh
cd ${0%/*} || exit 1    # Run from this directory

# Source tutorial run functions
. $WM_PROJECT_DIR/bin/tools/RunFunctions

# Get application directory
application=$(getApplication)

runApplication fluentMeshToFoam elbow.msh
runApplication "$application"
runApplication foamMeshToFluent
runApplication foamDataToFluent

#------------------------------------------------------------------------------

</allrun_script>
</case_end>




<case_begin>
<index>
case name: rotorDisk
case domain: incompressible
case category: None
case solver: simpleFoam
</index>


<directory_structure>
<dir>directory name: 0. File names in this directory: [U, omega, p, k, nut]</dir>
<dir>directory name: system. File names in this directory: [surfaceFeaturesDict, meshQualityDict, fvSolution, controlDict, snappyHexMeshDict, fvSchemes, blockMeshDict]</dir>
<dir>directory name: constant. File names in this directory: [physicalProperties, fvModels, momentumTransport]</dir>
</directory_structure>


<allrun_script>
#!/bin/sh
cd ${0%/*} || exit 1    # Run from this directory

# Source tutorial run functions
. $WM_PROJECT_DIR/bin/tools/RunFunctions

# Meshing
runApplication blockMesh
runApplication surfaceFeatures
runApplication snappyHexMesh -overwrite

runApplication $(getApplication)

#------------------------------------------------------------------------------

</allrun_script>
</case_end>




<case_begin>
<index>
case name: roomResidenceTime
case domain: incompressible
case category: None
case solver: simpleFoam
</index>


<directory_structure>
<dir>directory name: 0. File names in this directory: [epsilon, U, p, k, nut]</dir>
<dir>directory name: system. File names in this directory: [probes2, fvSolution, controlDict, fvSchemes, probes1, blockMeshDict]</dir>
<dir>directory name: validation. File names in this directory: [Allrun, measurement_Pos2, plotPos1Data.gplt, plotPos2Data.gplt, Allclean, measurement_Pos1]</dir>
<dir>directory name: constant. File names in this directory: [physicalProperties, momentumTransport]</dir>
</directory_structure>


<allrun_script>
#!/bin/sh
cd ${0%/*} || exit 1    # Run from this directory

# Source tutorial run functions
. $WM_PROJECT_DIR/bin/tools/RunFunctions

runApplication blockMesh
runApplication simpleFoam
runApplication -s age simpleFoam -postProcess -latestTime \
    -func "age(diffusion=true)"
runApplication -s probes1 postProcess -func probes1 -latestTime
runApplication -s probes2 postProcess -func probes2 -latestTime
runApplication -s patchFlowRate postProcess -latestTime \
    -func "patchFlowRate(funcName=inletFlowRate,patch=inlet)" -latestTime

(cd validation && ./Allrun $*)

#------------------------------------------------------------------------------

</allrun_script>
</case_end>




<case_begin>
<index>
case name: mixerVessel2DMRF
case domain: incompressible
case category: None
case solver: simpleFoam
</index>


<directory_structure>
<dir>directory name: 0. File names in this directory: [epsilon, U, p, k, nut]</dir>
<dir>directory name: system. File names in this directory: [fvSolution, controlDict, fvSchemes, blockMeshDict]</dir>
<dir>directory name: constant. File names in this directory: [physicalProperties, MRFProperties, momentumTransport]</dir>
</directory_structure>


<allrun_script>
#!/bin/sh
cd ${0%/*} || exit 1    # Run from this directory

# Source tutorial run functions
. $WM_PROJECT_DIR/bin/tools/RunFunctions

application=$(getApplication)

runApplication blockMesh -dict $FOAM_TUTORIALS/resources/blockMesh/mixerVessel2D
runApplication $application

#------------------------------------------------------------------------------

</allrun_script>
</case_end>




<case_begin>
<index>
case name: pipeCyclic
case domain: incompressible
case category: None
case solver: simpleFoam
</index>


<directory_structure>
<dir>directory name: 0. File names in this directory: [epsilon, U, p, k, nut]</dir>
<dir>directory name: system. File names in this directory: [fvSolution, decomposeParDict, topoSetDict, controlDict, fvSchemes, blockMeshDict]</dir>
<dir>directory name: constant. File names in this directory: [physicalProperties, momentumTransport]</dir>
</directory_structure>


<allrun_script>
#!/bin/sh
cd ${0%/*} || exit 1    # Run from this directory

# Source tutorial run functions
. $WM_PROJECT_DIR/bin/tools/RunFunctions

# Get application directory
application=$(getApplication)

runApplication blockMesh
runApplication topoSet
runApplication refineHexMesh c0 -noFields -overwrite

runApplication decomposePar -cellDist
runParallel $application

runApplication reconstructPar

#------------------------------------------------------------------------------

</allrun_script>
</case_end>




<case_begin>
<index>
case name: drivaerFastback
case domain: incompressible
case category: None
case solver: simpleFoam
</index>


<directory_structure>
<dir>directory name: 0. File names in this directory: [U, omega, p, k, nut]</dir>
<dir>directory name: system. File names in this directory: [meshQualityDict, fvSolution, snappyHexMeshDict.orig, decomposeParDict.orig, forceCoeffsIncompressible, fvSchemes, controlDict.orig, blockMeshDict]</dir>
<dir>directory name: constant. File names in this directory: [physicalProperties, momentumTransport]</dir>
</directory_structure>


<allrun_script>
#!/bin/sh

# Run from this directory
cd "${0%/*}" || exit 1

# Source tutorial run functions
. "$WM_PROJECT_DIR/bin/tools/RunFunctions"

usage () {
    exec 1>&2
    while [ "$#" -ge 1 ]; do echo "$1"; shift; done
    cat <<USAGE

Usage: ${0##*/} [OPTIONS]
options:
  -c | -cores <nCores>   number of cores in parallel run
  -h | -help             help
  -m | -mesh <S|M|L|XL>  mesh size
                         - S: small, 440k cells
                         - M: medium, 3M cells (default)
                         - L: large, 22.5M cells
                         - XL: extra large, ~200M cells

Runs the ${PWD##*/} simulation

USAGE
    exit 1
}

checkCores () {
    _cores="$1"

    ! [ "$_cores" -eq "$_cores" ] 2> /dev/null && \
        echo "Number of cores '$_cores' must be an integer" && \
        return 1

    [ "$_cores" -lt 2 ] && \
        echo "Number of cores '$_cores' must be >= 2" && \
        return 1

    return 0
}

refineBackgroundMesh () {
    _nRefine="$1"
    _r=0
    while [ $_r -lt "$_nRefine" ]
    do
        echo "Refining the background mesh"
        runParallel -a refineMesh -overwrite
        _r=$(( _r + 1 ))
    done
}

setKeyword () {
    _entry="$1"
    _value="$2"
    _file="$3"

    foamDictionary -entry "$_entry" -set "$_value" "$_file" > /dev/null
}

nRefine=1
nCores=8

while [ "$#" -gt 0 ]
do
   case "$1" in
   -c | -cores)
      [ "$#" -ge 2 ] || usage "'$1' option requires an argument"
      nCores=$2
      shift 2
      checkCores "$nCores" || usage
      setKeyword numberOfSubdomains "$nCores" system/decomposeParDict
      ;;
   -h | -help)
      usage
      ;;
   -m | -mesh)
      [ "$#" -ge 2 ] || usage "'$1' option requires an argument"
      mesh=$2
      shift 2
      case "$mesh" in
          S)  nRefine=0 ;;
          M)  ;;
          L)  nRefine=2 ; setKeyword endTime 2000 system/controlDict ;;
          XL) nRefine=3 ; setKeyword endTime 2000 system/controlDict ;;
          *)  usage "Invalid argument '$mesh' to -m|-mesh <S|M|L|XL>." ;;
      esac
      ;;
   -test)
      shift
      ;;
   -*)
      usage "Invalid option '$1'"
      ;;
   *)
      break
      ;;
    esac
done

# START OF MAIN SCRIPT

runApplication blockMesh

runApplication decomposePar -copyZero

refineBackgroundMesh $nRefine

runParallel snappyHexMesh -overwrite

runParallel checkMesh

runParallel "$(getApplication)"

# runApplication reconstructParMesh -constant
# runApplication reconstructPar -latestTime

#------------------------------------------------------------------------------

</allrun_script>
</case_end>




<case_begin>
<index>
case name: motorBike
case domain: incompressible
case category: None
case solver: simpleFoam
</index>


<directory_structure>
<dir>directory name: 0. File names in this directory: [omega, p, k, nut, U.orig]</dir>
<dir>directory name: system. File names in this directory: [surfaceFeaturesDict, meshQualityDict, fvSolution, decomposeParDict, controlDict, snappyHexMeshDict, cuttingPlane, streamlines, forceCoeffs, fvSchemes, blockMeshDict]</dir>
<dir>directory name: constant. File names in this directory: [physicalProperties, momentumTransport]</dir>
</directory_structure>


<allrun_script>
#!/bin/sh
cd ${0%/*} || exit 1    # Run from this directory

# Source tutorial run functions
. $WM_PROJECT_DIR/bin/tools/RunFunctions

# Copy motorbike surface from resources directory
cp $FOAM_TUTORIALS/resources/geometry/motorBike.obj.gz constant/geometry/
runApplication surfaceFeatures

runApplication blockMesh

runApplication decomposePar -copyZero
runParallel snappyHexMesh -overwrite

runParallel patchSummary
runParallel potentialFoam
runParallel $(getApplication)

runApplication reconstructParMesh -constant
runApplication reconstructPar -latestTime

#------------------------------------------------------------------------------

</allrun_script>
</case_end>




<case_begin>
<index>
case name: pitzDailyExptInlet
case domain: incompressible
case category: None
case solver: simpleFoam
</index>


<directory_structure>
<dir>directory name: 0. File names in this directory: [epsilon, U, nuTilda, p, k, nut]</dir>
<dir>directory name: system. File names in this directory: [fvSolution, decomposeParDict, controlDict, fvSchemes, blockMeshDict]</dir>
<dir>directory name: constant. File names in this directory: [physicalProperties, momentumTransport]</dir>
</directory_structure>


<allrun_script>
#!/bin/sh
cd ${0%/*} || exit 1    # Run from this directory

# Source tutorial run functions
. $WM_PROJECT_DIR/bin/tools/RunFunctions

application="$(getApplication)"

runApplication blockMesh -dict $FOAM_TUTORIALS/resources/blockMesh/pitzDaily
runApplication $application

#------------------------------------------------------------------------------

</allrun_script>
</case_end>




<case_begin>
<index>
case name: airFoil2D
case domain: incompressible
case category: None
case solver: simpleFoam
</index>


<directory_structure>
<dir>directory name: 0. File names in this directory: [U, nuTilda, p, nut]</dir>
<dir>directory name: system. File names in this directory: [fvSolution, controlDict, fvSchemes]</dir>
<dir>directory name: constant. File names in this directory: [physicalProperties, momentumTransport]</dir>
</directory_structure>


<allrun_script>
#!/bin/sh
cd ${0%/*} || exit 1    # Run from this directory

# Source tutorial run functions
. $WM_PROJECT_DIR/bin/tools/RunFunctions

application=$(getApplication)

runApplication $application

#------------------------------------------------------------------------------

</allrun_script>
</case_end>




<case_begin>
<index>
case name: turbineSiting
case domain: incompressible
case category: None
case solver: simpleFoam
</index>


<directory_structure>
<dir>directory name: 0. File names in this directory: [epsilon, U, p, k, nut]</dir>
<dir>directory name: system. File names in this directory: [fvSolution, decomposeParDict, topoSetDict, controlDict, snappyHexMeshDict, fvSchemes, blockMeshDict]</dir>
<dir>directory name: constant. File names in this directory: [physicalProperties, fvModels, momentumTransport]</dir>
</directory_structure>


<allrun_script>
#!/bin/sh
cd ${0%/*} || exit 1    # Run from this directory

# Source tutorial run functions
. $WM_PROJECT_DIR/bin/tools/RunFunctions

runApplication blockMesh
runApplication decomposePar -copyZero
runParallel snappyHexMesh -overwrite

runParallel topoSet
runParallel $(getApplication)

runApplication reconstructParMesh -constant
runApplication reconstructPar -constant

#------------------------------------------------------------------------------

</allrun_script>
</case_end>




<case_begin>
<index>
case name: T3A
case domain: incompressible
case category: None
case solver: simpleFoam
</index>


<directory_structure>
<dir>directory name: 0. File names in this directory: [U, omega, ReThetat, p, gammaInt, k, nut]</dir>
<dir>directory name: system. File names in this directory: [fvSolution, controlDict, fvSchemes, blockMeshDict]</dir>
<dir>directory name: validation. File names in this directory: [createGraphs]</dir>
<dir>directory name: constant. File names in this directory: [physicalProperties, momentumTransport]</dir>
</directory_structure>


<allrun_script>
#!/bin/sh
cd ${0%/*} || exit 1    # Run from this directory

# Source tutorial run functions
. $WM_PROJECT_DIR/bin/tools/RunFunctions

# Set application name
application=$(getApplication)

runApplication blockMesh
runApplication $application

( cd validation && ./createGraphs )

#------------------------------------------------------------------------------

</allrun_script>
</case_end>




<case_begin>
<index>
case name: windAroundBuildings
case domain: incompressible
case category: None
case solver: simpleFoam
</index>


<directory_structure>
<dir>directory name: 0. File names in this directory: [epsilon, U, p, k, nut]</dir>
<dir>directory name: system. File names in this directory: [surfaceFeaturesDict, meshQualityDict, fvSolution, controlDict, snappyHexMeshDict, fvSchemes, blockMeshDict]</dir>
<dir>directory name: constant. File names in this directory: [physicalProperties, momentumTransport]</dir>
</directory_structure>


<allrun_script>
#!/bin/sh
cd ${0%/*} || exit 1    # run from this directory

# Source tutorial run functions
. $WM_PROJECT_DIR/bin/tools/RunFunctions

runApplication surfaceFeatures

runApplication blockMesh
runApplication snappyHexMesh -overwrite

runApplication $(getApplication)

#------------------------------------------------------------------------------

</allrun_script>
</case_end>




<case_begin>
<index>
case name: pitzDaily
case domain: incompressible
case category: None
case solver: simpleFoam
</index>


<directory_structure>
<dir>directory name: 0. File names in this directory: [epsilon, f, U, nuTilda, omega, p, k, v2, nut]</dir>
<dir>directory name: system. File names in this directory: [fvSolution, controlDict, fvSchemes, blockMeshDict]</dir>
<dir>directory name: constant. File names in this directory: [physicalProperties, momentumTransport]</dir>
</directory_structure>


<allrun_script>
#!/bin/sh
cd ${0%/*} || exit 1    # Run from this directory

# Source tutorial run functions
. $WM_PROJECT_DIR/bin/tools/RunFunctions

application="$(getApplication)"

runApplication blockMesh -dict $FOAM_TUTORIALS/resources/blockMesh/pitzDaily
runApplication $application

#------------------------------------------------------------------------------

</allrun_script>
</case_end>




<case_begin>
<index>
case name: pitzDaily
case domain: incompressible
case category: None
case solver: adjointShapeOptimisationFoam
</index>


<directory_structure>
<dir>directory name: 0. File names in this directory: [epsilon, Ua, pa, U, p, k, nut]</dir>
<dir>directory name: system. File names in this directory: [fvSolution, controlDict, fvSchemes, blockMeshDict]</dir>
<dir>directory name: constant. File names in this directory: [physicalProperties, momentumTransport]</dir>
</directory_structure>


<allrun_script>
#!/bin/sh
cd ${0%/*} || exit 1    # Run from this directory

# Source tutorial run functions
. $WM_PROJECT_DIR/bin/tools/RunFunctions

application="$(getApplication)"

runApplication blockMesh -dict $FOAM_TUTORIALS/resources/blockMesh/pitzDaily
runApplication $application

#------------------------------------------------------------------------------

</allrun_script>
</case_end>




<case_begin>
<index>
case name: channel395
case domain: incompressible
case category: LES
case solver: pimpleFoam
</index>


<directory_structure>
<dir>directory name: 0.orig. File names in this directory: [U, nuTilda, p, k, nut]</dir>
<dir>directory name: system. File names in this directory: [fvSolution, decomposeParDict, controlDict, fvConstraints, fvSchemes, blockMeshDict, postChannelDict]</dir>
<dir>directory name: constant. File names in this directory: [physicalProperties, momentumTransport]</dir>
</directory_structure>


<allrun_script>
#!/bin/sh
cd ${0%/*} || exit 1    # Run from this directory

# Source tutorial run functions
. $WM_PROJECT_DIR/bin/tools/RunFunctions

# Get application directory
application=$(getApplication)

runApplication blockMesh

#- Run serial
#runApplication $application

#- Run parallel
runApplication decomposePar -cellDist
runParallel $application
runApplication reconstructPar

#------------------------------------------------------------------------------

</allrun_script>
</case_end>




<case_begin>
<index>
case name: ballValve
case domain: incompressible
case category: RAS
case solver: pimpleFoam
</index>


<directory_structure>
<dir>directory name: 0. File names in this directory: [epsilon, U, omega, s, p, k, nut]</dir>
<dir>directory name: system. File names in this directory: [fvSolution, decomposeParDict, topoSetDict, controlDict, fvSchemes, setFieldsDict, wallsSurface, blockMeshDict]</dir>
<dir>directory name: constant. File names in this directory: [physicalProperties, dynamicMeshDict, momentumTransport]</dir>
</directory_structure>


<allrun_script>
#!/bin/sh

cd ${0%/*} || exit 1

. $WM_PROJECT_DIR/bin/tools/RunFunctions

# Copy torus surface from resources directory
mkdir constant/geometry && cp $FOAM_TUTORIALS/resources/geometry/ballValve-torus.obj.gz constant/geometry

# Mesh
runApplication blockMesh -dict $FOAM_TUTORIALS/resources/blockMesh/ballValve
runApplication topoSet
runApplication transformPoints -pointSet ball "Rz=-45"

# Create couples
runApplication createNonConformalCouples -overwrite pipeNonCouple ballNonCouple

# Decompose
runApplication decomposePar -cellDist

# Set the value of the scalar transport field
runParallel setFields

# Run
runParallel $(getApplication);

# Reconstruct
runApplication reconstructPar -newTimes

# Plot the flow rates
./createGraphs

</allrun_script>
</case_end>




<case_begin>
<index>
case name: impeller
case domain: incompressible
case category: RAS
case solver: pimpleFoam
</index>


<directory_structure>
<dir>directory name: 0. File names in this directory: [epsilon, U, p, k, nut]</dir>
<dir>directory name: system. File names in this directory: [fvSolution, decomposeParDict, createNonConformalCouplesDict, controlDict, fvSchemes, blockMeshDict]</dir>
<dir>directory name: constant. File names in this directory: [physicalProperties, dynamicMeshDict, momentumTransport]</dir>
</directory_structure>


<allrun_script>
#!/bin/sh

cd "${0%/*}" || exit 1

. $WM_PROJECT_DIR/bin/tools/RunFunctions

runApplication blockMesh

runApplication createNonConformalCouples -overwrite

runApplication $(getApplication)

</allrun_script>
</case_end>




<case_begin>
<index>
case name: elipsekkLOmega
case domain: incompressible
case category: RAS
case solver: pimpleFoam
</index>


<directory_structure>
<dir>directory name: 0. File names in this directory: [kt, U, kl, omega, p, nut]</dir>
<dir>directory name: system. File names in this directory: [fvSolution, topoSetDict, controlDict, createPatchDict, mirrorMeshDict.x, fvSchemes, mirrorMeshDict.y, blockMeshDict]</dir>
<dir>directory name: constant. File names in this directory: [physicalProperties, momentumTransport]</dir>
</directory_structure>


<allrun_script>
#!/bin/sh
cd ${0%/*} || exit 1    # Run from this directory

# Source tutorial run functions
. $WM_PROJECT_DIR/bin/tools/RunFunctions

# Get application directory
application=$(getApplication)

runApplication blockMesh
runApplication transformPoints "scale=(1.6666 1 1)"

runApplication mirrorMesh -dict mirrorMeshDict.x -overwrite
rm log.mirrorMesh
runApplication mirrorMesh -dict mirrorMeshDict.y -overwrite

runApplication topoSet
runApplication createPatch -overwrite
runApplication $application

#------------------------------------------------------------------------------

</allrun_script>
</case_end>




<case_begin>
<index>
case name: propeller
case domain: incompressible
case category: RAS
case solver: pimpleFoam
</index>


<directory_structure>
<dir>directory name: 0. File names in this directory: [epsilon, U, p, k, nut]</dir>
<dir>directory name: system. File names in this directory: [surfaceFeaturesDict, fvSolution, forces, decomposeParDict, controlDict, snappyHexMeshDict, surfaces, fvSchemes, createBafflesDict, blockMeshDict]</dir>
<dir>directory name: constant. File names in this directory: [physicalProperties, dynamicMeshDict, momentumTransport]</dir>
</directory_structure>


<allrun_script>
#!/bin/sh
cd ${0%/*} || exit 1    # Run from this directory

# Source tutorial run functions
. $WM_PROJECT_DIR/bin/tools/RunFunctions

# Mesh if necessary
if ! cloneMesh ../../../../multiphase/interFoam/RAS/propeller .
then
    ./Allmesh
else
    runApplication decomposePar -noFields
fi

# Copy the fields into the processor directories
runApplication -a decomposePar -fields -copyZero

# Run
runParallel $(getApplication)

# Reconstruct
runApplication reconstructParMesh -constant
runApplication reconstructPar

#------------------------------------------------------------------------------

</allrun_script>
</case_end>




<case_begin>
<index>
case name: flowWithOpenBoundary
case domain: incompressible
case category: RAS
case solver: pimpleFoam
</index>


<directory_structure>
<dir>directory name: 0. File names in this directory: [omega, k, nut, p.orig, U.orig, T.orig]</dir>
<dir>directory name: system. File names in this directory: [fvSolution, extrudeMeshDict, controlDict, fvSchemes, blockMeshDict]</dir>
<dir>directory name: distortMesh. File names in this directory: [distortMesh.C]</dir>
<dir>directory name: constant. File names in this directory: [physicalProperties, momentumTransport]</dir>
</directory_structure>


<allrun_script>
#!/bin/sh

usage () {
    exec 1>&2
    while [ "$#" -ge 1 ]; do echo "$1"; shift; done
    cat <<USAGE

Usage: ${0##*/} [OPTIONS]
options:
  -d | -distort        distort the mesh
  -h | -help           help
  -p | -pBC <type>     set BC for p on the atmosphere patch
  -U | -UBC <type>     set BC for U on the atmosphere patch

CFD simulation to demonstrate boundary conditions at a patch with mixed inflow
and outflow. The user can set the boundary condition on the atmosphere patch
with options:
+ p: totalPressure (default) or fixedValue
+ U: pressureInletOutletVelocity (default) or zeroGradient

USAGE
    exit 1
}

distort () {
    wmake distortMesh
    runApplication distortMesh
    rm 0/meshPhi;
    mv 0/polyMesh/points constant/polyMesh
    rm -rf 0/polyMesh
}

setAtmosphereBC () {
    _field="$1"
    _BC="$2"

    echo "Setting $_field BC on atmosphere patch to $_BC"

    runApplication -a foamDictionary \
        -entry boundaryField/atmosphere/type \
        -set "$_BC" \
        "0/$_field" > /dev/null 2>&1
}

# VARIABLES
distort=""
pBC=""
UBC=""

# OPTIONS
while [ "$#" -gt 0 ]
do
    case "$1" in
    -d | -distort)
        distort="yes"
        shift
        ;;
    -h | -help)
        usage
        ;;
    -p | -pBC)
        [ "$#" -ge 2 ] || usage "'$1' option requires an argument"
        pBC="$2"
        shift 2
        ;;
    -U | -UBC)
        [ "$#" -ge 2 ] || usage "'$1' option requires an argument"
        UBC="$2"
        shift 2
        ;;
    -test)
        shift
        ;;
    -*)
        usage "Invalid option '$1'"
        ;;
    *)
        break
        ;;
    esac
done

case "$pBC" in
    totalPressure|fixedValue|"") ;;
    *)
      usage "Invalid boundary condition '$pBC' for p."\
            "Valid options: 'totalPressure', 'fixedValue'."
      ;;
esac

case "$UBC" in
    pressureInletOutletVelocity|zeroGradient|"") ;;
    *)
      usage "Invalid boundary condition '$UBC' for U."\
            "Valid options: 'pressureInletOutletVelocity', 'zeroGradient'."
      ;;
esac

# Run from this directory
cd "${0%/*}" || exit 1

# Source tutorial run functions
. "$WM_PROJECT_DIR/bin/tools/RunFunctions"

runApplication blockMesh
[ "$distort" ] && distort
runApplication extrudeMesh

[ "$pBC" ] && setAtmosphereBC p "$pBC"
[ "$UBC" ] && setAtmosphereBC U "$UBC"

runApplication "$(getApplication)"

#------------------------------------------------------------------------------

</allrun_script>
</case_end>




<case_begin>
<index>
case name: TJunction
case domain: incompressible
case category: RAS
case solver: pimpleFoam
</index>


<directory_structure>
<dir>directory name: 0. File names in this directory: [epsilon, U, nuTilda, p, k, nut]</dir>
<dir>directory name: system. File names in this directory: [fvSolution, topoSetDict, controlDict, fvSchemes, blockMeshDict]</dir>
<dir>directory name: constant. File names in this directory: [physicalProperties, fvModels, momentumTransport, cloudProperties]</dir>
</directory_structure>


<allrun_script>
#!/bin/sh
cd ${0%/*} || exit 1 # Run from this directory

# Source tutorial run functions
. $WM_PROJECT_DIR/bin/tools/RunFunctions

runApplication blockMesh
runApplication topoSet
runApplication $(getApplication)

</allrun_script>
</case_end>




<case_begin>
<index>
case name: pitzDailyLTS
case domain: incompressible
case category: RAS
case solver: pimpleFoam
</index>


<directory_structure>
<dir>directory name: 0. File names in this directory: [epsilon, U, nuTilda, p, k, nut]</dir>
<dir>directory name: system. File names in this directory: [fvSolution, controlDict, fvSchemes, blockMeshDict]</dir>
<dir>directory name: constant. File names in this directory: [physicalProperties, momentumTransport]</dir>
</directory_structure>


<allrun_script>
#!/bin/sh
cd ${0%/*} || exit 1    # Run from this directory

# Source tutorial run functions
. $WM_PROJECT_DIR/bin/tools/RunFunctions

application="$(getApplication)"

runApplication blockMesh -dict $FOAM_TUTORIALS/resources/blockMesh/pitzDaily
runApplication $application

#------------------------------------------------------------------------------

</allrun_script>
</case_end>




<case_begin>
<index>
case name: oscillatingInlet
case domain: incompressible
case category: RAS
case solver: pimpleFoam
</index>


<directory_structure>
<dir>directory name: 0. File names in this directory: [epsilon, U, omega, p, k, nut]</dir>
<dir>directory name: system. File names in this directory: [fvSolution, decomposeParDict, controlDict, fvSchemes, blockMeshDict]</dir>
<dir>directory name: constant. File names in this directory: [physicalProperties, dynamicMeshDict, momentumTransport]</dir>
</directory_structure>


<allrun_script>
#!/bin/sh

cd ${0%/*} || exit 1

. $WM_PROJECT_DIR/bin/tools/RunFunctions

runApplication blockMesh

runApplication createNonConformalCouples -overwrite nonCouple1 nonCouple2

runApplication $(getApplication)

</allrun_script>
</case_end>




<case_begin>
<index>
case name: TJunctionFan
case domain: incompressible
case category: RAS
case solver: pimpleFoam
</index>


<directory_structure>
<dir>directory name: 0. File names in this directory: [k.orig, nut.orig, epsilon.orig, nuTilda.orig, p.orig, U.orig]</dir>
<dir>directory name: system. File names in this directory: [fvSolution, topoSetDict, controlDict, fvSchemes, createBafflesDict, blockMeshDict]</dir>
<dir>directory name: constant. File names in this directory: [physicalProperties, momentumTransport]</dir>
</directory_structure>


<allrun_script>
#!/bin/sh

# Source tutorial run functions
. $WM_PROJECT_DIR/bin/tools/RunFunctions

# Get application name
application=$(getApplication)

runApplication blockMesh

# Create faceZones for baffles and fan
runApplication topoSet

# Create wall and cyclic baffles and the fields on them
runApplication createBaffles -overwrite

runApplication $application

</allrun_script>
</case_end>




<case_begin>
<index>
case name: waveSubSurface
case domain: incompressible
case category: RAS
case solver: pimpleFoam
</index>


<directory_structure>
<dir>directory name: 0. File names in this directory: [epsilon, p, k, nut, U.orig, alpha.orig]</dir>
<dir>directory name: system. File names in this directory: [fvSolution, decomposeParDict, controlDict, setWavesDict, fvSchemes, blockMeshDict]</dir>
<dir>directory name: constant. File names in this directory: [physicalProperties, waveProperties, g, momentumTransport]</dir>
</directory_structure>


<allrun_script>
#!/bin/sh

cd ${0%/*} || exit 1

. $WM_PROJECT_DIR/bin/tools/RunFunctions

runApplication blockMesh
runApplication setWaves
runApplication decomposePar

runParallel $(getApplication)

runApplication reconstructPar -newTimes

</allrun_script>
</case_end>




<case_begin>
<index>
case name: pitzDaily
case domain: incompressible
case category: RAS
case solver: pimpleFoam
</index>


<directory_structure>
<dir>directory name: 0. File names in this directory: [epsilon, U, nuTilda, p, k, nut]</dir>
<dir>directory name: system. File names in this directory: [fvSolution, controlDict, fvSchemes, blockMeshDict]</dir>
<dir>directory name: constant. File names in this directory: [physicalProperties, momentumTransport]</dir>
</directory_structure>


<allrun_script>
#!/bin/sh
cd ${0%/*} || exit 1    # Run from this directory

# Source tutorial run functions
. $WM_PROJECT_DIR/bin/tools/RunFunctions

application="$(getApplication)"

runApplication blockMesh -dict $FOAM_TUTORIALS/resources/blockMesh/pitzDaily
runApplication $application

#------------------------------------------------------------------------------

</allrun_script>
</case_end>




<case_begin>
<index>
case name: planarPoiseuille
case domain: incompressible
case category: laminar
case solver: pimpleFoam
</index>


<directory_structure>
<dir>directory name: 0. File names in this directory: [sigma, U, p]</dir>
<dir>directory name: system. File names in this directory: [fvSolution, controlDict, fvSchemes, blockMeshDict]</dir>
<dir>directory name: validation. File names in this directory: [createGraph]</dir>
<dir>directory name: constant. File names in this directory: [physicalProperties, fvModels, momentumTransport]</dir>
</directory_structure>


<allrun_script>
#!/bin/sh
cd ${0%/*} || exit 1    # Run from this directory

# Source tutorial run functions
. $WM_PROJECT_DIR/bin/tools/RunFunctions

runApplication blockMesh
runApplication $(getApplication)

wmake validation/WatersKing
runApplication WatersKing

( cd validation && ./createGraph )

#------------------------------------------------------------------------------

</allrun_script>
</case_end>




<case_begin>
<index>
case name: nonConformalChannel
case domain: incompressible
case category: laminar
case solver: pimpleFoam
</index>


<directory_structure>
<dir>directory name: 0. File names in this directory: [U, p]</dir>
<dir>directory name: system. File names in this directory: [blockMeshDict.AMI, fvSolution, blockMeshDict.boundary, controlDict, fvSchemes, blockMeshDict.nonConformalCyclic, blockMeshDict.internal]</dir>
<dir>directory name: constant. File names in this directory: [physicalProperties, momentumTransport]</dir>
</directory_structure>


<allrun_script>
#!/bin/sh

cd "${0%/*}" || exit 1

. $WM_PROJECT_DIR/bin/tools/RunFunctions

mesh()
{
    runApplication -s $1 blockMesh -dict system/blockMeshDict.$1
}

run()
{
    runApplication -s $1 $(getApplication)
    mv postProcessing/inletFlowRate postProcessing/inletFlowRate.$1
    mv postProcessing/outletFlowRate postProcessing/outletFlowRate.$1
}

if isTest $@
then
    foamDictionary -entry startFrom -set startTime system/controlDict
fi

mesh AMI
run AMI

mesh nonConformalCyclic
runApplication -s nonConformalCyclic createNonConformalCouples -overwrite nonCoupleUp nonCoupleDown
run nonConformalCyclic

inletFlowRateAMI=postProcessing/inletFlowRate.AMI/0/surfaceFieldValue.dat
outletFlowRateAMI=postProcessing/outletFlowRate.AMI/0/surfaceFieldValue.dat
inletFlowRateNonConformalCyclic=postProcessing/inletFlowRate.nonConformalCyclic/0/surfaceFieldValue.dat
outletFlowRateNonConformalCyclic=postProcessing/outletFlowRate.nonConformalCyclic/0/surfaceFieldValue.dat

gnuplot << EOF
set terminal postscript eps color enhanced
set output "error.eps"
set xlabel "Time (s)"
set ylabel "Inlet-Outlet Conservation Error (%)"
plot \
    "< paste $inletFlowRateAMI $outletFlowRateAMI" \
    us 1:(100*(\$4+\$2)/\$2) every ::1 w l t "AMI" , \
    "< paste $inletFlowRateNonConformalCyclic $outletFlowRateNonConformalCyclic" \
    us 1:(100*(\$4+\$2)/\$2) every ::1 w l t "nonConformalCyclic"
EOF

</allrun_script>
</case_end>




<case_begin>
<index>
case name: pitzDailyPulse
case domain: incompressible
case category: laminar
case solver: pimpleFoam
</index>


<directory_structure>
<dir>directory name: 0. File names in this directory: [U, p]</dir>
<dir>directory name: system. File names in this directory: [fvSolution, controlDict, fvSchemes, blockMeshDict]</dir>
<dir>directory name: constant. File names in this directory: [physicalProperties, momentumTransport]</dir>
</directory_structure>


<allrun_script>
#!/bin/sh
cd ${0%/*} || exit 1    # Run from this directory

# Source tutorial run functions
. $WM_PROJECT_DIR/bin/tools/RunFunctions

application="$(getApplication)"

runApplication blockMesh -dict $FOAM_TUTORIALS/resources/blockMesh/pitzDaily
runApplication $application

#------------------------------------------------------------------------------

</allrun_script>
</case_end>




<case_begin>
<index>
case name: blockedChannel
case domain: incompressible
case category: laminar
case solver: pimpleFoam
</index>


<directory_structure>
<dir>directory name: 0. File names in this directory: [U, p, tracer]</dir>
<dir>directory name: system. File names in this directory: [fvSolution, controlDict, generateAlphas, fvSchemes, blockMeshDict]</dir>
<dir>directory name: constant. File names in this directory: [physicalProperties, fvModels, momentumTransport]</dir>
</directory_structure>


<allrun_script>
#!/bin/sh

cd ${0%/*} || exit 1

. $WM_PROJECT_DIR/bin/tools/RunFunctions

runApplication blockMesh
runApplication postProcess -func generateAlphas
runApplication $(getApplication)

</allrun_script>
</case_end>




<case_begin>
<index>
case name: movingCone
case domain: incompressible
case category: laminar
case solver: pimpleFoam
</index>


<directory_structure>
<dir>directory name: 0. File names in this directory: [U, pointMotionUx, p]</dir>
<dir>directory name: system. File names in this directory: [decomposeParDict_0.0015, fvSolution, blockMeshDict_0.0015, decomposeParDict, controlDict, cuttingPlane, fvSchemes, blockMeshDict_0.003, decomposeParDict_0.003, blockMeshDict]</dir>
<dir>directory name: constant. File names in this directory: [physicalProperties, dynamicMeshDict, momentumTransport]</dir>
</directory_structure>


<allrun_script>
#!/bin/sh
cd ${0%/*} || exit 1    # Run from this directory

# Source tutorial run functions
. $WM_PROJECT_DIR/bin/tools/RunFunctions

application=$(getApplication)

mapTimes="0.0015 0.003"

# Iterate the string variable using for loop
for mapTime in $mapTimes; do

    runApplication -a blockMesh -dict blockMeshDict_$mapTime
    rm -rf constant/meshToMesh_$mapTime
    mkdir constant/meshToMesh_$mapTime
    mv constant/polyMesh constant/meshToMesh_$mapTime

done

runApplication -a blockMesh

runApplication $application

#------------------------------------------------------------------------------

</allrun_script>
</case_end>




<case_begin>
<index>
case name: angledDuctImplicit
case domain: incompressible
case category: None
case solver: porousSimpleFoam
</index>


<directory_structure>
<dir>directory name: 0. File names in this directory: [epsilon, U, T, p, k, nut]</dir>
<dir>directory name: system. File names in this directory: [fvSolution, controlDict, fvSchemes, blockMeshDict]</dir>
<dir>directory name: constant. File names in this directory: [porosityProperties, physicalProperties, momentumTransport]</dir>
</directory_structure>


<allrun_script>
#!/bin/sh
cd ${0%/*} || exit 1    # Run from this directory

# Source tutorial run functions
. $WM_PROJECT_DIR/bin/tools/RunFunctions

runApplication blockMesh -dict $FOAM_TUTORIALS/resources/blockMesh/angledDuct
runApplication $(getApplication)


</allrun_script>
</case_end>




<case_begin>
<index>
case name: angledDuctExplicit
case domain: incompressible
case category: None
case solver: porousSimpleFoam
</index>


<directory_structure>
<dir>directory name: system. File names in this directory: [fvSolution, controlDict, fvSchemes, blockMeshDict]</dir>
</directory_structure>


<allrun_script>
#!/bin/sh
cd ${0%/*} || exit 1    # Run from this directory

# Source tutorial run functions
. $WM_PROJECT_DIR/bin/tools/RunFunctions

runApplication blockMesh -dict $FOAM_TUTORIALS/resources/blockMesh/angledDuct
runApplication $(getApplication)


</allrun_script>
</case_end>




<case_begin>
<index>
case name: straightDuctImplicit
case domain: incompressible
case category: None
case solver: porousSimpleFoam
</index>


<directory_structure>
<dir>directory name: 0. File names in this directory: [epsilon, U, T, p, k, nut]</dir>
<dir>directory name: system. File names in this directory: [surfaceFeaturesDict, meshQualityDict, fvSolution, collapseDict, decomposeParDict, controlDict, foamyHexMeshDict, collapseDict.indirectPatchFaces, collapseDict.collapseFaces, fvSchemes, meshDict.conformationSurfaces, meshDict.shapeControlFunctions, meshDict.geometry]</dir>
<dir>directory name: constant. File names in this directory: [porosityProperties, physicalProperties, momentumTransport]</dir>
</directory_structure>


<allrun_script>
#!/bin/sh
cd ${0%/*} || exit 1    # Run from this directory

# Source tutorial run functions
. $WM_PROJECT_DIR/bin/tools/RunFunctions

if [ -n "$FOAMY_HEX_MESH" ]
then
    ./Allmesh

    runApplication $(getApplication)
fi

#------------------------------------------------------------------------------

</allrun_script>
</case_end>




<case_begin>
<index>
case name: boundaryWallFunctionsProfile
case domain: incompressible
case category: None
case solver: boundaryFoam
</index>


<directory_structure>
<dir>directory name: 0. File names in this directory: [epsilon, nut.k, U, nut.spalding, nuTilda, omega, k, nut]</dir>
<dir>directory name: system. File names in this directory: [fvSolution, controlDict, fvSchemes, blockMeshDict]</dir>
<dir>directory name: constant. File names in this directory: [physicalProperties, physicalProperties.template, momentumTransport]</dir>
</directory_structure>


<allrun_script>
#!/bin/sh
cd ${0%/*} || exit 1    # Run from this directory

# Source tutorial run functions
. $WM_PROJECT_DIR/bin/tools/RunFunctions

runApplication blockMesh

exponents="2 3 4 5 6 7 8"

echo "# yPlus vs uPlus" > yPlus_vs_uPlus

for e in $exponents
do
    echo "    Setting nu to 1e-$e"

    sed "s/XXX/$e/g" constant/physicalProperties.template \
        > constant/physicalProperties

    runApplication -s $e  $(getApplication)

    # extract y+, U+
    # note: both must be added to foamLog.db
    runApplication -s $e  foamLog log.boundaryFoam.$e

    if [ -e logs/yPlus_0 ]
    then
        yPlus=`awk < logs/yPlus_0 'END{print $2}'`
        uPlus=`awk < logs/uPlus_0 'END{print $2}'`

        echo "$yPlus $uPlus" >> yPlus_vs_uPlus
    fi

    rm -rf logs
done


# create validation plot
# test if gnuplot exists on the system
if ! which gnuplot > /dev/null 2>&1
then
    echo "gnuplot not found - skipping graph creation" >&2
    exit 1
fi

graphName="OF_vs_ANALYTICAL.eps"

echo "Creating graph of u+ vs y+ to $graphName"
gnuplot<<EOF
    set terminal postscript eps color enhanced
    set output "$graphName"
    set grid
    set xlabel "y+"
    set ylabel "u+"
    set key top left
    set size 0.75, 0.75
    set parametric
    # u+ range
    set xrange [0:20000]
    # Spaldings law
    k=0.41
    E=9.8
    f(t) = t + 1/E*(exp(k*t) - 1 - k*t*(1 + 0.5*k*t) - 1/6*k*t**3)
    set trange [0.1:2000]
    set samples 10000
    set logscale x
    set format x "10^{%T}"
    plot f(t),t title "Spalding" with lines linetype -1, \
        "yPlus_vs_uPlus" title "OpenFOAM" with points lt 1 pt 6
EOF

echo Done

#------------------------------------------------------------------------------

</allrun_script>
</case_end>




<case_begin>
<index>
case name: motorBike
case domain: incompressible
case category: motorBike
case solver: pisoFoam
</index>


<directory_structure>
<dir>directory name: 0. File names in this directory: [U, nuTilda, p, k, nut]</dir>
<dir>directory name: system. File names in this directory: [fvSolution, decomposeParDict, controlDict, snappyHexMeshDict, cuttingPlane, streamlines, forceCoeffs, fvSchemes, blockMeshDict]</dir>
<dir>directory name: constant. File names in this directory: [physicalProperties, momentumTransport]</dir>
</directory_structure>


<allrun_script>
#!/bin/sh
cd ${0%/*} || exit 1    # Run from this directory

# Source tutorial run functions
. $WM_PROJECT_DIR/bin/tools/RunFunctions

# copy motorbike surface from resources directory
cp $FOAM_TUTORIALS/resources/geometry/motorBike.obj.gz constant/geometry/

runApplication blockMesh
runApplication decomposePar -copyZero
runParallel snappyHexMesh -overwrite

find . -type f -iname "*level*" -exec rm {} \;

runParallel renumberMesh -overwrite

runParallel potentialFoam -initialiseUBCs

runParallel $(getApplication)

#------------------------------------------------------------------------------

</allrun_script>
</case_end>




<case_begin>
<index>
case name: pitzDaily
case domain: incompressible
case category: LES
case solver: pisoFoam
</index>


<directory_structure>
<dir>directory name: 0. File names in this directory: [U, nuTilda, s, p, k, nut]</dir>
<dir>directory name: system. File names in this directory: [fvSolution, controlDict, fvSchemes, blockMeshDict]</dir>
<dir>directory name: constant. File names in this directory: [physicalProperties, momentumTransport]</dir>
</directory_structure>


<allrun_script>
#!/bin/sh
cd ${0%/*} || exit 1    # Run from this directory

# Source tutorial run functions
. $WM_PROJECT_DIR/bin/tools/RunFunctions

application="$(getApplication)"

runApplication blockMesh -dict $FOAM_TUTORIALS/resources/blockMesh/pitzDaily
runApplication $application

#------------------------------------------------------------------------------

</allrun_script>
</case_end>




<case_begin>
<index>
case name: porousBlockage
case domain: incompressible
case category: laminar
case solver: pisoFoam
</index>


<directory_structure>
<dir>directory name: 0. File names in this directory: [U, p]</dir>
<dir>directory name: system. File names in this directory: [fvSolution, topoSetDict, controlDict, fvSchemes, blockMeshDict]</dir>
<dir>directory name: constant. File names in this directory: [physicalProperties, fvModels, momentumTransport, coordinateSystems]</dir>
</directory_structure>


<allrun_script>
#!/bin/sh
cd ${0%/*} || exit 1    # Run from this directory

# Source tutorial run functions
. $WM_PROJECT_DIR/bin/tools/RunFunctions

application=$(getApplication)

runApplication blockMesh

runApplication topoSet

runApplication $application

#------------------------------------------------------------------------------

</allrun_script>
</case_end>




<case_begin>
<index>
case name: sphere7
case domain: mesh
case category: None
case solver: blockMesh
</index>


<directory_structure>
<dir>directory name: system. File names in this directory: [fvSolution, controlDict, fvSchemes, blockMeshDict]</dir>
</directory_structure>


<allrun_script>
#!/bin/sh
cd ${0%/*} || exit 1    # Run from this directory

# Source tutorial run functions
. $WM_PROJECT_DIR/bin/tools/RunFunctions

runApplication blockMesh

#------------------------------------------------------------------------------

</allrun_script>
</case_end>




<case_begin>
<index>
case name: sphere7ProjectedEdges
case domain: mesh
case category: None
case solver: blockMesh
</index>


<directory_structure>
<dir>directory name: system. File names in this directory: [fvSolution, controlDict, fvSchemes, blockMeshDict]</dir>
</directory_structure>


<allrun_script>
#!/bin/sh
cd ${0%/*} || exit 1    # Run from this directory

# Source tutorial run functions
. $WM_PROJECT_DIR/bin/tools/RunFunctions

runApplication blockMesh

#------------------------------------------------------------------------------

</allrun_script>
</case_end>




<case_begin>
<index>
case name: pipe
case domain: mesh
case category: None
case solver: blockMesh
</index>


<directory_structure>
<dir>directory name: system. File names in this directory: [fvSolution, controlDict, fvSchemes, blockMeshDict]</dir>
</directory_structure>


<allrun_script>
#!/bin/sh
cd ${0%/*} || exit 1    # Run from this directory

# Source tutorial run functions
. $WM_PROJECT_DIR/bin/tools/RunFunctions

runApplication blockMesh

#------------------------------------------------------------------------------

</allrun_script>
</case_end>




<case_begin>
<index>
case name: sphere
case domain: mesh
case category: None
case solver: blockMesh
</index>


<directory_structure>
<dir>directory name: system. File names in this directory: [fvSolution, controlDict, fvSchemes, blockMeshDict]</dir>
</directory_structure>


<allrun_script>
#!/bin/sh
cd ${0%/*} || exit 1    # Run from this directory

# Source tutorial run functions
. $WM_PROJECT_DIR/bin/tools/RunFunctions

runApplication blockMesh

#------------------------------------------------------------------------------

</allrun_script>
</case_end>




<case_begin>
<index>
case name: jaggedBoundary
case domain: mesh
case category: None
case solver: foamyQuadMesh
</index>


<directory_structure>
<dir>directory name: system. File names in this directory: [surfaceFeaturesDict, extrude2DMeshDict, fvSolution, controlDict, foamyQuadMeshDict, fvSchemes]</dir>
</directory_structure>


<allrun_script>
#!/bin/sh
cd ${0%/*} || exit 1    # Run from this directory

# Source tutorial run functions
. $WM_PROJECT_DIR/bin/tools/RunFunctions

runApplication surfaceFeatures
runApplication foamyQuadMesh -overwrite
runApplication extrude2DMesh -overwrite MeshedSurface
runApplication checkMesh -allGeometry -allTopology -constant -noZero

#------------------------------------------------------------------------------

</allrun_script>
</case_end>




<case_begin>
<index>
case name: square
case domain: mesh
case category: None
case solver: foamyQuadMesh
</index>


<directory_structure>
<dir>directory name: system. File names in this directory: [surfaceFeaturesDict, extrude2DMeshDict, fvSolution, controlDict, foamyQuadMeshDict, fvSchemes]</dir>
</directory_structure>


<allrun_script>
#!/bin/sh
cd ${0%/*} || exit 1    # Run from this directory

# Source tutorial run functions
. $WM_PROJECT_DIR/bin/tools/RunFunctions

runApplication surfaceFeatures
runApplication foamyQuadMesh -overwrite
runApplication extrude2DMesh -overwrite polyMesh2D
runApplication checkMesh -allGeometry -allTopology -constant -noZero

#------------------------------------------------------------------------------

</allrun_script>
</case_end>




<case_begin>
<index>
case name: blob
case domain: mesh
case category: None
case solver: foamyHexMesh
</index>


<directory_structure>
<dir>directory name: system. File names in this directory: [meshQualityDict, fvSolution, collapseDict, decomposeParDict, topoSetDict, controlDict, snappyHexMeshDict, foamyHexMeshDict, fvSchemes]</dir>
</directory_structure>


<allrun_script>
#!/bin/sh
cd ${0%/*} || exit 1    # Run from this directory

# Source tutorial run functions
. $WM_PROJECT_DIR/bin/tools/RunFunctions

runApplication foamyHexMesh

runApplication -s collapseFaces \
    collapseEdges -latestTime -collapseFaces

runApplication -s collapseFaceSet \
    collapseEdges -latestTime -collapseFaceSet indirectPatchFaces

runApplication checkMesh -latestTime -allGeometry -allTopology


#------------------------------------------------------------------------------

</allrun_script>
</case_end>




<case_begin>
<index>
case name: simpleShapes
case domain: mesh
case category: None
case solver: foamyHexMesh
</index>


<directory_structure>
<dir>directory name: system. File names in this directory: [meshQualityDict, fvSolution, collapseDict, topoSetDict, controlDict, foamyHexMeshDict, fvSchemes]</dir>
</directory_structure>


<allrun_script>
#!/bin/sh
cd ${0%/*} || exit 1    # Run from this directory

# Source tutorial run functions
. $WM_PROJECT_DIR/bin/tools/RunFunctions

runApplication -s cone \
    surfaceOrient constant/geometry/cone.stl \
                  constant/geometry/cone_orient.stl \
                  -inside '(0 -0.5 0)'

runApplication -s sphere \
    surfaceOrient constant/geometry/sphere.stl \
                  constant/geometry/sphere_orient.stl \
                  -inside '(0 -0.5 0)'

runApplication \
    surfaceBooleanFeatures \
                  constant/geometry/cone_orient.stl \
                  constant/geometry/sphere_orient.stl \
                  intersection

runApplication foamyHexMesh

runApplication -s collapseFaceSet \
    collapseEdges -latestTime -collapseFaceSet indirectPatchFaces

runApplication -s collapseFaces \
    collapseEdges -latestTime -collapseFaces


#------------------------------------------------------------------------------

</allrun_script>
</case_end>




<case_begin>
<index>
case name: flange
case domain: mesh
case category: None
case solver: foamyHexMesh
</index>


<directory_structure>
<dir>directory name: system. File names in this directory: [meshQualityDict, fvSolution, collapseDict, decomposeParDict, controlDict, snappyHexMeshDict, foamyHexMeshDict, faceSetDict, topoSetDict-background, fvSchemes, topoSetDict-slices, meshDict.geometry]</dir>
</directory_structure>


<allrun_script>
#!/bin/sh
cd ${0%/*} || exit 1    # Run from this directory

# Source tutorial run functions
. $WM_PROJECT_DIR/bin/tools/RunFunctions

# copy flange surface from resources directory
cp $FOAM_TUTORIALS/resources/geometry/flange.stl.gz constant/geometry/

runApplication foamyHexMesh

runApplication -s collapseFaces \
    collapseEdges -latestTime -collapseFaces

runApplication -s collapseFaceSet \
    collapseEdges -latestTime -collapseFaceSet indirectPatchFaces

runApplication checkMesh -latestTime -allGeometry -allTopology


#------------------------------------------------------------------------------

</allrun_script>
</case_end>




<case_begin>
<index>
case name: refineFieldDirs
case domain: mesh
case category: None
case solver: refineMesh
</index>


<directory_structure>
<dir>directory name: system. File names in this directory: [refineMeshDict.tier4, fvSolution, topoSetDict.tier2, refineMeshDict.tier2, topoSetDict.range1, topoSetDict.tier1, controlDict, refineMeshDict.tier5, topoSetDict.range3, refineMeshDict.range1, refineMeshDict.tier1, topoSetDict.tier4, topoSetDict.tier6, refineMeshDict.range3, fvSchemes, refineMeshDict.range2, topoSetDict.tier5, topoSetDict.range2, refineMeshDict.tier6, topoSetDict.tier3, refineMeshDict.tier3, blockMeshDict]</dir>
<dir>directory name: calcRadiusField. File names in this directory: [calcRadiusField.C]</dir>
</directory_structure>


<allrun_script>
#!/bin/sh
cd ${0%/*} || exit 1    # Run from this directory

# Source tutorial run functions
. $WM_PROJECT_DIR/bin/tools/RunFunctions

wmake calcRadiusField
wclean calcRadiusField

runApplication blockMesh

##### Procedure for special refinement over Z

# We need the 0 folder to exist for these steps
mkdir 0

# Refine over Z, in 6 passes
for index in 1 2 3 4 5 6; do

  runApplication -s tier$index  calcRadiusField

  runApplication -s tier$index \
      topoSet -dict topoSetDict.tier$index

  ## foamToVTK -cellSet tier$index

  runApplication -s tier$index \
      refineMesh -dict refineMeshDict.tier$index -overwrite

  rm -r 0/*

done

# Refine over cylindrical coordinates, in 3 passes
for index in 1 2 3; do

  runApplication -s range$index  calcRadiusField -calcDirections

  runApplication -s range$index \
      topoSet -dict topoSetDict.range$index

  ## foamToVTK -cellSet tier$index

  runApplication -s range$index \
      refineMesh -dict refineMeshDict.range$index -overwrite

  rm -r 0/*

done

#------------------------------------------------------------------------------

</allrun_script>
</case_end>




<case_begin>
<index>
case name: pipe
case domain: mesh
case category: None
case solver: snappyHexMesh
</index>


<directory_structure>
<dir>directory name: system. File names in this directory: [surfaceFeaturesDict, meshQualityDict, fvSolution, controlDict, snappyHexMeshDict, fvSchemes, blockMeshDict]</dir>
</directory_structure>


<allrun_script>
#!/bin/sh
cd ${0%/*} || exit 1    # Run from this directory

# Source tutorial run functions
. $WM_PROJECT_DIR/bin/tools/RunFunctions

# Copy pipe surface from resources directory
mkdir -p constant/geometry
cp $FOAM_TUTORIALS/resources/geometry/pipe*.obj.gz constant/geometry/

runApplication surfaceFeatures
runApplication blockMesh
runApplication snappyHexMesh -overwrite

#------------------------------------------------------------------------------

</allrun_script>
</case_end>




<case_begin>
<index>
case name: flange
case domain: mesh
case category: None
case solver: snappyHexMesh
</index>


<directory_structure>
<dir>directory name: system. File names in this directory: [surfaceFeaturesDict, meshQualityDict, fvSolution, decomposeParDict, controlDict, snappyHexMeshDict, fvSchemes, blockMeshDict]</dir>
</directory_structure>


<allrun_script>
#!/bin/sh
# Source tutorial run functions
. $WM_PROJECT_DIR/bin/tools/RunFunctions

# Copy flange surface from resources directory
cp $FOAM_TUTORIALS/resources/geometry/flange.stl.gz constant/geometry/

runApplication blockMesh
runApplication surfaceFeatures
runApplication snappyHexMesh -overwrite

#------------------------------------------------------------------------------

</allrun_script>
</case_end>




<case_begin>
<index>
case name: plateHole
case domain: stressAnalysis
case category: None
case solver: solidDisplacementFoam
</index>


<directory_structure>
<dir>directory name: 0. File names in this directory: [D, T]</dir>
<dir>directory name: system. File names in this directory: [fvSolution, controlDict, graphUniform, fvSchemes, blockMeshDict]</dir>
<dir>directory name: constant. File names in this directory: [physicalProperties]</dir>
</directory_structure>


<allrun_script>
#!/bin/sh
cd ${0%/*} || exit 1    # Run from this directory

# Source tutorial run functions
. $WM_PROJECT_DIR/bin/tools/RunFunctions

application=$(getApplication)

runApplication blockMesh
runApplication $application
runApplication -s sigma postProcess -func "components(sigma)"
runApplication -s graphUniform postProcess -func graphUniform

#------------------------------------------------------------------------------

</allrun_script>
</case_end>



